{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","self","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","e","className","this","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","arr","len","arr2","Array","arrayLikeToArray","o","minLen","n","toString","slice","constructor","name","from","test","_typeof","obj","Symbol","iterator","_setPrototypeOf","p","setPrototypeOf","__proto__","sourceKeys","keys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","isArray","iter","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","value","err","componentWillMount","state","getDerivedStateFromProps","props","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","arguments","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","Constructor","_defineProperties","descriptor","configurable","protoProps","staticProps","_arrayLikeToArray","assertThisInitialized","ReferenceError","getPrototypeOf","subClass","superClass","create"],"mappings":"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","file":"static/js/4.4ad48664.chunk.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;"],"sourceRoot":""}