{"version":3,"sources":["hooks/usePageTitle.tsx","icons/social-preview.png","components/pages/Share.tsx"],"names":["usePageTitle","title","React","useEffect","document","ShareColumn","styled","FlexColumnWithSpacing","SupertagSurface","Surface","Name","Title","ShortDesc","Faded","ImportButton","RedButton","ScrollFaded","Link","span","theme","css","flexRowWithGap","layer","borderRadius","dimensions","bigSpacing","colors","subduedText","accentColor","Tags","TagList","TAG_NO_OP","tag","About","location","useLocation","decodeSupertag","search","name","description","tags","tagObjects","useMemo","Object","entries","reduce","result","modifier","types","copySupertagUrl","useCallback","navigator","permissions","query","then","state","clipboard","writeText","window","href","console","warn","useFirebaseAuthState","signedIn","supertags","useSupertags","handleImport","addSupertag","catch","err","error","deleteSupertag","removeSupertag","imported","FlexColumn","Helmet","property","content","socialPreview","Header","disabled","onClick","id","detailed","onTagClick","onTagMenu","NO_OP"],"mappings":"kHAAA,sDAMO,SAASA,EAAaC,GAC3BC,IAAMC,WAAU,WACdC,SAASH,MAAQA,IAChB,CAACA,M,6PCTS,MAA0B,2C,eCoBnCI,EAAcC,YAAOC,IAAPD,CAAH,yHAOXE,EAAkBF,YAAOG,IAAPH,CAAH,8KAQfI,EAAOJ,YAAOK,IAAPL,CAAH,wEAKJM,EAAYN,YAAOO,IAAPP,CAAH,mDAITQ,EAAeR,YAAOS,IAAPT,CAAH,mDAIZU,EAAcV,YAAOO,IAAPP,CAAH,uLASXW,EAAOX,IAAOY,MAClB,gBAAGC,EAAH,EAAGA,MAAH,OAAeC,YAAd,IAAD,uMACIC,IACAC,IACAC,IACSJ,EAAMK,WAAWC,WACnBN,EAAMO,OAAOC,YAMXR,EAAMO,OAAOE,gBAKtBC,EAAOvB,YAAOwB,IAAPxB,CAAH,mDAIJyB,EAAY,SAACC,KAEJ,SAASC,IACtB,IAAMC,EAAWC,cAEjB,EAAoCC,YAAeF,EAASG,QAApDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,KAE3BxC,YAAa,eAAD,OAAgBsC,IAE5B,IAAMG,EAAavC,IAAMwC,SACvB,kBACEC,OAAOC,QAAQJ,GAAMK,QAAO,SAACC,EAAD,GAA+B,IAAD,mBAApBR,EAAoB,KAAdS,EAAc,KAExD,OADAD,EAAOR,GAAQ,CAAEA,OAAMS,WAAUC,MAAO,IACjCF,IACN,MACL,CAACN,IAGGS,EAAkB/C,IAAMgD,aAAY,WACxCC,UAAUC,YAAYC,MAAM,CAAEf,KAAM,oBAAqBgB,MAAK,SAACR,GACxC,YAAjBA,EAAOS,OAAwC,WAAjBT,EAAOS,OACvCJ,UAAUK,UAAUC,UAAUC,OAAOxB,SAASyB,MAAML,MAClD,eACA,WACEM,QAAQC,KAAK,wCAKpB,IAEH,EAAmBC,cAAZC,EAAP,oBACMC,EAAYC,cAEZC,EAAehE,IAAMgD,aAAY,WACrCiB,YAAY7B,EAAMC,EAAaC,GAC5Bc,MAAK,eACLc,OAAM,SAACC,GAAD,OAAST,QAAQU,MAAM,4BAA6BD,QAC5D,CAAC9B,EAAaD,EAAME,IACjB+B,EAAiBrE,IAAMgD,aAAY,kBAAMsB,YAAelC,KAAO,CAACA,IAEhEmC,EAAWvE,IAAMwC,SAAQ,WAC7B,OAAOqB,GAAYzB,KAAQ0B,IAC1B,CAAC1B,EAAMyB,EAAUC,IAEpB,OACE,eAACU,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,sBAAMC,SAAS,iBAAiBC,QAAStC,IACzC,sBAAMqC,SAAS,WAAWC,QAAO,qBAAgBvC,KACjD,sBAAMsC,SAAS,WAAWC,QAASC,OAErC,cAACC,EAAA,EAAD,IACA,eAAC1E,EAAD,WACE,cAAC,IAAD,uBAEA,eAACG,EAAD,WACE,cAACE,EAAD,UAAO4B,IACP,cAAC1B,EAAD,UAAY2B,IACXkC,EACC,eAAC3D,EAAD,CACEkE,UAAWjB,EACX9D,MAAO8D,EAAW,8BAAgC,2BAClDkB,QAASV,EAHX,UAKE,cAAC,IAAD,IALF,eAQA,eAACzD,EAAD,CACEkE,UAAWjB,EACX9D,MAAO8D,EAAW,8BAAgC,2BAClDkB,QAASf,EAHX,UAKE,cAAC,IAAD,IALF,aASF,eAACjD,EAAD,CAAMgE,QAAShC,EAAiBhD,MAAM,iBAAtC,UACE,cAACe,EAAD,CAAakE,GAAG,aAAhB,SAA8BxB,OAAOxB,SAASyB,OAC9C,cAAC,IAAD,OAEF,cAAC9B,EAAD,CAAMW,KAAMC,EAAY0C,UAAU,EAAOC,WAAYrD,EAAWsD,UAAWC","file":"static/js/9.d4e7049f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n/**\r\n * Effect that sets the title of the page to a specified string.\r\n * Really small utility hook that saves a few lines.\r\n */\r\nexport function usePageTitle(title: string) {\r\n  React.useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/social-preview.93fb2c0a.png\";","import * as r34 from 'r34-types'\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled, { css } from 'styled-components'\r\nimport { decodeSupertag } from '../../data/tagUtils'\r\nimport { addSupertag, removeSupertag, useSupertags } from '../../firebase'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { usePageTitle } from '../../hooks/usePageTitle'\r\nimport { CopyIcon, PlusIcon, SuccessIcon } from '../../icons/FontAwesomeIcons'\r\nimport { borderRadius, flexRowWithGap, layer } from '../../styled/mixins'\r\nimport { RedButton } from '../designsystem/Buttons'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../designsystem/FlexColumn'\r\nimport Surface from '../designsystem/Surface'\r\nimport { Faded, Title } from '../designsystem/Text'\r\nimport Header from '../features/Header'\r\nimport TagList from '../tag/TagList'\r\nimport socialPreview from '../../icons/social-preview.png'\r\nimport { NO_OP } from '../../data/types'\r\n\r\nconst ShareColumn = styled(FlexColumnWithSpacing)`\r\n  place-content: center;\r\n  align-items: center;\r\n  place-content: center;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst SupertagSurface = styled(Surface)`\r\n  grid-template-rows: auto auto auto 1fr;\r\n  grid-template-columns: 1fr auto;\r\n  padding: 16px;\r\n  justify-content: center;\r\n  max-width: 500px;\r\n`\r\n\r\nconst Name = styled(Title)`\r\n  text-align: left;\r\n  grid-area: 1/1/2/2;\r\n`\r\n\r\nconst ShortDesc = styled(Faded)`\r\n  grid-area: 2/1/3/3;\r\n`\r\n\r\nconst ImportButton = styled(RedButton)`\r\n  grid-area: 1/2/2/3;\r\n`\r\n\r\nconst ScrollFaded = styled(Faded)`\r\n  overflow-x: auto;\r\n  white-space: nowrap;\r\n  mask-image: linear-gradient(90deg, #000 95%, transparent);\r\n  ::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n`\r\n\r\nconst Link = styled.span(\r\n  ({ theme }) => css`\r\n    ${flexRowWithGap}\r\n    ${layer}\r\n    ${borderRadius}\r\n    padding: ${theme.dimensions.bigSpacing};\r\n    color: ${theme.colors.subduedText};\r\n    grid-area: 3/1/4/3;\r\n    cursor: pointer;\r\n\r\n    :active,\r\n    :active > span {\r\n      color: ${theme.colors.accentColor};\r\n    }\r\n  `\r\n)\r\n\r\nconst Tags = styled(TagList)`\r\n  grid-area: 4/1/5/3;\r\n`\r\n\r\nconst TAG_NO_OP = (tag: r34.AnyBiasedTag) => {}\r\n\r\nexport default function About() {\r\n  const location = useLocation()\r\n\r\n  const { name, description, tags } = decodeSupertag(location.search)\r\n\r\n  usePageTitle(`R34 React - ${name}`)\r\n\r\n  const tagObjects = React.useMemo(\r\n    () =>\r\n      Object.entries(tags).reduce((result, [name, modifier]) => {\r\n        result[name] = { name, modifier, types: [] }\r\n        return result\r\n      }, {} as Record<string, Omit<r34.BiasedTag, 'count'>>),\r\n    [tags]\r\n  )\r\n\r\n  const copySupertagUrl = React.useCallback(() => {\r\n    navigator.permissions.query({ name: 'clipboard-write' }).then((result) => {\r\n      if (result.state === 'granted' || result.state === 'prompt') {\r\n        navigator.clipboard.writeText(window.location.href).then(\r\n          () => {},\r\n          () => {\r\n            console.warn('Failed to write to clipboard')\r\n          }\r\n        )\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const [signedIn] = useFirebaseAuthState()\r\n  const supertags = useSupertags()\r\n\r\n  const handleImport = React.useCallback(() => {\r\n    addSupertag(name, description, tags)\r\n      .then(() => {})\r\n      .catch((err) => console.error('Failed to import supertag', err))\r\n  }, [description, name, tags])\r\n  const deleteSupertag = React.useCallback(() => removeSupertag(name), [name])\r\n\r\n  const imported = React.useMemo(() => {\r\n    return signedIn && name in supertags\r\n  }, [name, signedIn, supertags])\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Helmet>\r\n        <meta property='og:description' content={description} />\r\n        <meta property='og:title' content={`Supertag - ${name}`} />\r\n        <meta property='og:image' content={socialPreview} />\r\n      </Helmet>\r\n      <Header />\r\n      <ShareColumn>\r\n        <Title>Supertag</Title>\r\n\r\n        <SupertagSurface>\r\n          <Name>{name}</Name>\r\n          <ShortDesc>{description}</ShortDesc>\r\n          {imported ? (\r\n            <ImportButton\r\n              disabled={!signedIn}\r\n              title={signedIn ? 'Remove from your collection' : 'You need to be signed in'}\r\n              onClick={deleteSupertag}\r\n            >\r\n              <SuccessIcon /> Imported\r\n            </ImportButton>\r\n          ) : (\r\n            <ImportButton\r\n              disabled={!signedIn}\r\n              title={signedIn ? 'Import into your collection' : 'You need to be signed in'}\r\n              onClick={handleImport}\r\n            >\r\n              <PlusIcon /> Import\r\n            </ImportButton>\r\n          )}\r\n\r\n          <Link onClick={copySupertagUrl} title='Copy share url'>\r\n            <ScrollFaded id='share-link'>{window.location.href}</ScrollFaded>\r\n            <CopyIcon />\r\n          </Link>\r\n          <Tags tags={tagObjects} detailed={false} onTagClick={TAG_NO_OP} onTagMenu={NO_OP} />\r\n        </SupertagSurface>\r\n      </ShareColumn>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}