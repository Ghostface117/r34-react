{"version":3,"sources":["styled/mixins.tsx","data/utils.ts","data/browserUtils.ts","data/TagDataClass.ts","components/common/Buttons.tsx","misc/formatting.ts","redux/actions.ts","components/styled/FlexImage.tsx","hooks/usePreference.tsx","components/widgets/ResetButton.tsx","icons/OutOfResults.png","icons/Loading.tsx","data/PostDataClass.ts","misc/prepare.ts","data/types.ts","components/features/ErrorBoundary.tsx","misc/theme.ts","GlobalStyles.tsx","components/pages/ErrorScreen.tsx","components/pages/LoadingScreen.tsx","components/widgets/CookieConfirmation.tsx","analytics/events.ts","redux/middleware/analytics.ts","misc/api.ts","data/CommentDataClass.ts","redux/middleware/requests.ts","redux/middleware/index.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/likes.ts","redux/reducers/suggestions.ts","redux/reducers/index.ts","redux/store.ts","App.tsx","index.tsx","redux/selectors.ts"],"names":["defaultBorder","theme","css","colors","accentColor","dimensions","borderWidth","borderRadius","layer","layerBg","boxShadow","primaryHover","backgroundColor","backgroundColor2","flexColumn","flexColumnWithGap","flexColumnGap","gutter","gridWithGap","gap","flexRowWithGap","flexRowGap","amount","supportsGap","supportsFlexGap","centeredMaxWidth","bodyWidth","defaultBlock","blockHeight","flexMedia","preserveAspectRatio","width","height","supportsAspectRatio","shadow","radius","color","dropShadow","mediaStyle","getMediaType","type","post","PostType","VIDEO","MediaType","small_src","includes","big_src","GIF","PICTURE","listToMap","list","keyProp","reduce","result","current","tagsToString","tags","Object","values","map","tag","modifier","name","sort","parseUrl","value","URL","err","versionToNumber","majorMinorPatch","Number","split","join","download","url","filename","pop","fetch","headers","Headers","Origin","window","location","origin","mode","then","response","blob","a","document","createElement","href","createObjectURL","body","appendChild","click","remove","catch","e","console","error","getVersion","process","REACT_APP_VERSION","getVersionString","version","getCorrectSource","loadOriginal","useCorsProxy","getCorrectSourceOrigin","source","searchParams","get","boolToNumber","flex","style","display","flexDirection","rowGap","isSupported","scrollHeight","parentNode","removeChild","supportsObjectFit","supportsFullscreen","fullscreenEnabled","openFullscreen","element","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","TagDataClass","types","count","Modifier","PLUS","this","TextButton","styled","button","bigSpacing","fontSizes","content","timings","longTransitionTime","RedButton","transitionTime","BlockButton","AddButton","ModifierButton","formatCount","numberString","number","toFixed","formatSource","host","formatDuration","duration","min","Math","trunc","sec","formatTagname","tagname","replace","serializeTagname","toLowerCase","formatTagnameAndCount","formatDateTime","date","toLocaleDateString","toLocaleTimeString","formatTime","milliseconds","formatUnit","unitSize","unit","unitString","ADD_ALIASES","ADD_POSTS","ADD_TAG","ENTER_FULLSCREEN","EXIT_FULLSCREEN","FETCH_COMMENTS","FETCH_SUGGESTIONS","GET_MORE_RESULTS","GET_RESULTS","LIKE_POST","REMOVE_TAG","SET_COMMENTS","SET_FULLSCREEN_POST","SET_POSTS","SET_PREFERENCE","SET_SUGGESTIONS","addTag","removeTag","addAliases","aliases","forTag","addPosts","posts","setPosts","pageNumber","setComments","postId","comments","fetchComments","setPreference","key","getResults","getMoreResults","enterFullscreen","exitFullscreen","setFullScreenPost","likePost","setSuggestions","suggestions","fetchSuggestions","FlexImage","img","usePreference","dispatch","useDispatch","preferences","useSelector","selectPreferences","setValue","useCallback","ResetButton","props","reset","localStorage","clear","hash","reload","onClick","StyledSvg","svg","Loading","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","PostDataClass","id","score","rating","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","Date","parse","prepareTag","dirtyTag","preparePost","sample_url","preview_url","t","Boolean","TagType","ResultLayout","RouteName","RatingType","PreferenceKey","NO_OP","ErrorBoundary","state","hasError","fallback","children","React","Component","spacing","hugeSpacing","hoverAccent","subduedText","layerBgSolid","layerBgHighlight","liked","bigTitle","createGlobalStyle","FullScreenCentered","div","ErrorScreen","GlobalStyles","src","outOfResultsPicture","alt","LoadingScreen","CookieWrapper","StyledSpan","span","CookieConfirmation","COOKIES","cookies","setCookies","handleAccept","aria-label","AnalyticsEventId","firebaseApp","analytics","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","eventLogging","store","next","action","getState","selectCookies","firebase","initializeApp","activeTags","page_number","SEARCH","payload","active_tags","searchEvent","selectActiveTags","selectPageNumber","logEvent","sourceTags","SOURCE","ratingTags","RATING","API","activeApi","apiUrl2","apiUrl1","searchTerm","limit","defaultPageSize","json","startsWith","matchingRating","filter","matchingSourceTags","minScore","buildPostUrl","res","tagName","encodeURIComponent","page","tagList","normalTags","OR","orTags","tagParts","length","push","parseComment","rawComment","CommentDataClass","creator","apiRequests","hasMoreResults","selectHasMoreResults","pageSize","selectPageSize","minRating","selectMinRating","selectSort","api","getPosts","getAliases","sanitizedAliases","b","alias","getTags","find","warn","selectTagSuggestionCount","selectPostById","rawComments","middleware","composeWithDevTools","applyMiddleware","requests","initialPreferencesState","infinite","rated","ratedThreshold","originals","preloadVideos","tagSuggestionsCount","resultsLayout","INFINITE_COLUMN","showMetadata","showComments","produce","draft","initialResultsState","postCount","postIndex","findIndex","p","results","initialTagsState","active","newTag","tagToRemove","initialReaderState","isEnabled","setPostId","reader","now","likes","entries","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","persistor","persistStore","Help","lazy","Settings","Search","About","App","loading","exact","path","HELP","SETTINGS","ABOUT","ReactDOM","render","getElementById","selectPosts","selectCount","selectResultsLayout","selectPreloadVideos","selectOriginals","selectFullsceenState","selectAliases","selectUseCorsProxy","selectShowMetadata","selectShowComments","selectSuggestions","selectNumberOfActiveTags","createSelector","keys","selectAliasesAsList","flat","selectOutOfResults","outOfResults","selectLastPage","ceil","selectFullScreenPost","fullScreenPostId","selectFullScreenIndex","fullScreenPost","indexOf","selectNextIndex","selectedIndex","undefined","selectPreviousIndex","defaultMemoize","selectAliasesByTagName","selectLikedByPostId"],"mappings":"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","file":"static/js/main.2fbe59f8.chunk.js","sourcesContent":["import { css, DefaultTheme } from 'styled-components'\r\nimport { supportsAspectRatio, supportsFlexGap, supportsGap } from '../data/browserUtils'\r\n\r\nexport interface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    ${borderRadius({ theme })}\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    ${boxShadow({ theme })}\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColumn() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\nexport function flexColumnWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gridWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: grid;\r\n    ${gap(theme.dimensions.gutter)}\r\n  `\r\n}\r\n\r\nexport function flexRowWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n    ${flexRowGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gap(amount: string) {\r\n  return supportsGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexRowGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexColumnGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    ${gap(theme.dimensions.gutter)};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  if (!width || !height) {\r\n    return ''\r\n  }\r\n\r\n  return supportsAspectRatio\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : css`\r\n        max-width: 100%;\r\n        height: auto;\r\n      `\r\n}\r\n\r\nexport function borderRadius({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n}\r\n\r\nexport function boxShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    box-shadow: 0 0 ${theme.shadow.radius} ${theme.shadow.color};\r\n  `\r\n}\r\n\r\nexport function dropShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    filter: drop-shadow(0 0 ${theme.shadow.radius} ${theme.shadow.color});\r\n  `\r\n}\r\n\r\nexport function mediaStyle() {\r\n  return css`\r\n    ${borderRadius}\r\n    ${boxShadow}\r\n    grid-area: 1/1/2/2;\r\n    z-index: 1;\r\n  `\r\n}\r\n","import PostDataClass from './PostDataClass'\nimport TagDataClass from './TagDataClass'\nimport { PostType, MediaType } from './types'\n\nexport const getMediaType = (type: PostType, post: PostDataClass) => {\n  if (type === PostType.VIDEO) {\n    return MediaType.VIDEO\n  }\n\n  // can't use .endsWith because of queryString\n  if (post.small_src.includes('.gif') || post.big_src.includes('.gif')) {\n    return MediaType.GIF\n  }\n\n  return MediaType.PICTURE\n}\n\nexport function getUrlParameter(src: string) {\n  return new URL(src).searchParams.get('url') || ''\n}\n\n/**\n * Converts a list of objects into a map.\n * @param list The original list\n * @param keyProp The keyProp parameter defines which property of the objects will be used as the index for the map\n */\nexport const listToMap = <T>(list: T[], keyProp: string): Record<string, T> => {\n  return list.reduce((result: Record<string, T>, current: any) => {\n    result[current[keyProp]] = current\n    return result\n  }, {})\n}\n\n/**\n * Joins tags together for analytics event\n */\nexport function tagsToString(tags: Record<string, TagDataClass>) {\n  return Object.values(tags)\n    .map((tag) => `${tag.modifier}${tag.name}`)\n    .sort()\n}\n\n/**\n * Returns a URL object when the value is a hyperlink. Else undefined\n */\nexport function parseUrl(value: string) {\n  try {\n    return new URL(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * converts a version like \"1.2.7\" into 127\n */\nexport function versionToNumber(majorMinorPatch: string) {\n  return Number(majorMinorPatch.split('.').join(''))\n}\n\n/**\n * Hacky ass way to download images cross origin. Could solve this by hosting both the app and the api on the same domain.\n */\nexport function download(url: string) {\n  const filename = url.split('/').pop() || ''\n\n  fetch(url, {\n    headers: new Headers({\n      Origin: window.location.origin,\n    }),\n    mode: 'cors',\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      var a = document.createElement('a')\n      a.download = filename\n      a.href = window.URL.createObjectURL(blob)\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    })\n    .catch((e) => console.error(e))\n}\n\n/**\n * Returns the current version of the project\n */\nexport function getVersion() {\n  // Some browsers fail to get environment variables. In that case return unknown.\n  if (process?.env?.REACT_APP_VERSION) {\n    return process.env.REACT_APP_VERSION\n  }\n\n  return 'unknown'\n}\n\n/**\n * Render ready version.\n */\nexport function getVersionString() {\n  const version = getVersion()\n\n  return version === 'unknown' ? 'Latest Release' : `Version ${version}`\n}\n\n/**\n * Returns the correct source based on preferences\n */\nexport function getCorrectSource(loadOriginal: boolean, useCorsProxy: boolean, big_src: string, small_src: string) {\n  const source = loadOriginal ? big_src : small_src\n  return getCorrectSourceOrigin(useCorsProxy, source)\n}\n\n/**\n * Returns the proxy source or direct depending on prefererence\n */\nexport function getCorrectSourceOrigin(useCorsProxy: boolean, source: string) {\n  return useCorsProxy ? source : getUrlParameter(source)\n}\n\nexport function boolToNumber(value: boolean) {\n  return value ? 1 : 0\n}\n","export const supportsFlexGap = (() => {\r\n  // create flex container with row-gap set\r\n  var flex = document.createElement('div')\r\n  flex.style.display = 'flex'\r\n  flex.style.flexDirection = 'column'\r\n  flex.style.rowGap = '1px'\r\n\r\n  // create two, elements inside it\r\n  flex.appendChild(document.createElement('div'))\r\n  flex.appendChild(document.createElement('div'))\r\n\r\n  // append to the DOM (needed to obtain scrollHeight)\r\n  document.body.appendChild(flex)\r\n  var isSupported = flex.scrollHeight === 1 // flex container should be 1px high from the row-gap\r\n  //@ts-expect-error\r\n  flex.parentNode.removeChild(flex)\r\n\r\n  return isSupported\r\n})()\r\n\r\nexport const supportsGap = 'gap' in document.body.style\r\nexport const supportsAspectRatio = 'aspect-ratio' in document.body.style\r\nexport const supportsObjectFit = 'object-fit' in document.body.style\r\nexport const supportsFullscreen = document.fullscreenEnabled\r\n\r\nexport function openFullscreen(element: Element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.webkitRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.webkitRequestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.msRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.msRequestFullscreen()\r\n  }\r\n}\r\n\r\nexport function closeFullscreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.webkitExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.webkitExitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.msExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.msExitFullscreen()\r\n  }\r\n}\r\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, dropShadow, primaryHover } from '../../styled/mixins'\n\nconst TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n\n    transition: all ${theme.timings.longTransitionTime} ease-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    ${dropShadow({ theme })}\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-out;\n    }\n\n    :active {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)`\n  ${primaryHover}\n`\n\nexport const BlockButton = styled(RedButton)`\n  width: 100%;\n\n  :active {\n    transform: scaleX(1.03) scaleY(1.1);\n  }\n`\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname\n    .replace(/_/g, ' ')\n    .replace(/source:/g, ' ')\n    .replace(/rating:/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n\nexport function formatDateTime(date: Date) {\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\nexport function formatTime(milliseconds: number) {\n  if (milliseconds >= 315576e5) {\n    return formatUnit(milliseconds, 315576e5, 'year')\n  }\n  if (milliseconds >= 26297568e2) {\n    return formatUnit(milliseconds, 26297568e2, 'month')\n  }\n\n  if (milliseconds >= 6048e5) {\n    return formatUnit(milliseconds, 6048e5, 'week')\n  }\n\n  if (milliseconds >= 854e5) {\n    return formatUnit(milliseconds, 854e5, 'day')\n  }\n\n  if (milliseconds >= 36e5) {\n    return formatUnit(milliseconds, 36e5, 'hour')\n  }\n\n  if (milliseconds >= 6e4) {\n    return formatUnit(milliseconds, 6e4, 'minute')\n  }\n\n  if (milliseconds >= 1e3) {\n    return formatUnit(milliseconds, 1e3, 'second')\n  }\n\n  return `${milliseconds} ms`\n}\n\nfunction formatUnit(value: number, unitSize: number, unit: string) {\n  const result = (value / unitSize).toFixed(0)\n\n  const unitString = result === '1' ? unit : `${unit}s`\n\n  return `${result} ${unitString}`\n}\n","import { PreferenceKey, TagLike } from '../data/types'\nimport TagDataClass from '../data/TagDataClass'\nimport PostDataClass from '../data/PostDataClass'\nimport CommentDataClass from '../data/CommentDataClass'\n\n// Action Names\nexport const ADD_ALIASES = `r34-react/ADD_ALIASES`\nexport const ADD_POSTS = `r34-react/ADD_POSTS`\nexport const ADD_TAG = `r34-react/ADD_TAG`\nexport const ENTER_FULLSCREEN = `r34-react/ENTER_FULLSCREEN`\nexport const EXIT_FULLSCREEN = 'r34-react/EXIT_FULLSCREEN'\nexport const FETCH_COMMENTS = `r34-react/FETCH_COMMENTS`\nexport const FETCH_SUGGESTIONS = `r34-react/FETCH_SUGGESTIONS`\nexport const GET_MORE_RESULTS = `r34-react/GET_MORE_RESULTS`\nexport const GET_RESULTS = `r34-react/GET_RESULTS`\nexport const LIKE_POST = `r34-react/LIKE_POST`\nexport const REMOVE_TAG = `r34-react/REMOVE_TAG`\nexport const SET_COMMENTS = `r34-react/SET_COMMENTS`\nexport const SET_FULLSCREEN_POST = `r34-react/SET_FULLSCREEN_POST`\nexport const SET_POSTS = `r34-react/SET_POSTS`\nexport const SET_PREFERENCE = `r34-react/SET_PREFERENCE`\nexport const SET_SUGGESTIONS = `r34-react/SET_SUGGESTIONS`\n\n// Action Types\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\ninterface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: number\n  pageNumber?: number\n}\n\ninterface SetCommentsAction {\n  type: typeof SET_COMMENTS\n  postId: number\n  comments: CommentDataClass[]\n}\n\ninterface FetchCommentsAction {\n  type: typeof FETCH_COMMENTS\n  postId: number\n}\n\ninterface SetPreferenceAction {\n  type: typeof SET_PREFERENCE\n  key: PreferenceKey\n  value: any\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\ninterface LikePostAction {\n  type: typeof LIKE_POST\n  postId: number\n}\n\ninterface SetSuggestionsAction {\n  type: typeof SET_SUGGESTIONS\n  suggestions: TagLike[]\n}\n\ninterface FetchSuggestionsAction {\n  type: typeof FETCH_SUGGESTIONS\n  value: string\n}\n\nexport type AppAction =\n  | AddTagAction\n  | RemoveTagAction\n  | AddAliasesAction\n  | AddPostsAction\n  | SetPostsAction\n  | SetCommentsAction\n  | FetchCommentsAction\n  | SetPreferenceAction\n  | GetResultsAction\n  | GetMoreResultsAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | SetFullScreenPostAction\n  | LikePostAction\n  | SetSuggestionsAction\n  | FetchSuggestionsAction\n\n// Action Creators\nexport function addTag(tag: TagDataClass): AddTagAction {\n  return {\n    type: ADD_TAG,\n    tag,\n  }\n}\n\nexport function removeTag(tag: TagDataClass): RemoveTagAction {\n  return {\n    type: REMOVE_TAG,\n    tag,\n  }\n}\n\nexport function addAliases(aliases: TagDataClass[], forTag: string): AddAliasesAction {\n  return {\n    type: ADD_ALIASES,\n    aliases,\n    forTag,\n  }\n}\n\nexport function addPosts(posts: PostDataClass[]): AddPostsAction {\n  return {\n    type: ADD_POSTS,\n    posts,\n  }\n}\n\nexport function setPosts(posts: PostDataClass[], count: number, pageNumber: number = 0): SetPostsAction {\n  return {\n    type: SET_POSTS,\n    posts,\n    count,\n    pageNumber,\n  }\n}\n\nexport function setComments(postId: number, comments: CommentDataClass[]): SetCommentsAction {\n  return {\n    type: SET_COMMENTS,\n    postId,\n    comments,\n  }\n}\n\nexport function fetchComments(postId: number): FetchCommentsAction {\n  return {\n    type: FETCH_COMMENTS,\n    postId,\n  }\n}\n\nexport function setPreference(key: PreferenceKey, value: any): SetPreferenceAction {\n  return {\n    type: SET_PREFERENCE,\n    key,\n    value,\n  }\n}\n\nexport function getResults(pageNumber: number = 0): GetResultsAction {\n  return {\n    type: GET_RESULTS,\n    pageNumber,\n  }\n}\n\nexport function getMoreResults(): GetMoreResultsAction {\n  return {\n    type: GET_MORE_RESULTS,\n  }\n}\n\nexport function enterFullscreen(postId: number): EnterFullcreenAction {\n  return {\n    type: ENTER_FULLSCREEN,\n    postId,\n  }\n}\n\nexport function exitFullscreen(): ExitFullscreenAction {\n  return {\n    type: EXIT_FULLSCREEN,\n  }\n}\n\nexport function setFullScreenPost(postId: number): SetFullScreenPostAction {\n  return {\n    type: SET_FULLSCREEN_POST,\n    postId,\n  }\n}\n\nexport function likePost(postId: number): LikePostAction {\n  return {\n    type: LIKE_POST,\n    postId,\n  }\n}\n\nexport function setSuggestions(suggestions: TagLike[]): SetSuggestionsAction {\n  return {\n    type: SET_SUGGESTIONS,\n    suggestions,\n  }\n}\n\nexport function fetchSuggestions(value: string): FetchSuggestionsAction {\n  return {\n    type: FETCH_SUGGESTIONS,\n    value,\n  }\n}\n","import styled from 'styled-components'\nimport { preserveAspectRatio, flexMedia } from '../../styled/mixins'\n\nconst FlexImage = styled.img`\n  ${flexMedia}\n  ${preserveAspectRatio}\n`\n\nexport default FlexImage\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setPreference } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setValue = useCallback((value: any) => dispatch(setPreference(key, value)), [dispatch, key])\n\n  return [preferences[key], setValue]\n}\n","import React, { useCallback } from 'react'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetButton(props: any) {\r\n  const reset = useCallback(() => {\r\n    localStorage.clear()\r\n    window.location.hash = ''\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <BlockButton onClick={reset} {...props}>\r\n      Reset Application\r\n    </BlockButton>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OutOfResults.9c71691c.png\";","import React from 'react'\nimport styled from 'styled-components'\n\n// Don't use theme here so the loadingScreen is independent\nconst StyledSvg = styled.svg`\n  height: 32px;\n  padding: 8px;\n`\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='25' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='44' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import { RatingType, PostType } from './types'\nimport TagDataClass from './TagDataClass'\nimport CommentDataClass from './CommentDataClass'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: number\n  change: string\n\n  comments?: CommentDataClass[]\n\n  constructor(\n    id: number,\n    score: number,\n    rating: RatingType,\n    source: string,\n    tags: TagDataClass[],\n    media_type: PostType,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = Date.parse(created_at)\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { TagType, Modifier, RatingType, PostType } from '../data/types'\n\n/**\n * A tag as received from the backend.\n * All strings\n */\ninterface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\n/**\n * A post as received from the backend.\n * All strings\n */\ninterface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\n/**\n * Introduce types for nicer use later\n */\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\n/**\n * Introduce types for nicer use later and parse tag names to tag objects.\n */\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type as PostType,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","/**\r\n * Metadata. Describes the kind of tag.\r\n */\r\nexport enum TagType {\r\n  GENERAL = 'general',\r\n  CHARACTER = 'character',\r\n  AMBIGUOUS = 'ambiguous',\r\n  ARTIST = 'artist',\r\n  COPYRIGHT = 'copyright',\r\n  RATING = 'rating',\r\n  SOURCE = 'source',\r\n  METADATA = 'metadata',\r\n}\r\n\r\n/**\r\n * Describes how the tag should influence the search.\r\n */\r\nexport enum Modifier {\r\n  PLUS = '+',\r\n  MINUS = '-',\r\n  OR = '~',\r\n}\r\n\r\n/**\r\n * Type of a post according to the backend.\r\n */\r\nexport enum PostType {\r\n  VIDEO = 'video',\r\n  IMAGE = 'image',\r\n}\r\n\r\n/**\r\n * Derived form PostType. On the frontend I split PostType.IMAGE into GIF and PICTURE.\r\n */\r\nexport enum MediaType {\r\n  VIDEO = 'video',\r\n  PICTURE = 'picture',\r\n  GIF = 'gif',\r\n}\r\n\r\n/**\r\n * The possible layouts.\r\n */\r\nexport enum ResultLayout {\r\n  INFINITE_COLUMN = 'infinite_column',\r\n  PAGES = 'pages',\r\n}\r\n\r\n/**\r\n * All routes of the app.\r\n */\r\nexport enum RouteName {\r\n  SEARCH = '/',\r\n  HELP = '/help',\r\n  SETTINGS = '/settings',\r\n  ABOUT = '/about',\r\n}\r\n\r\n/**\r\n * Explicity rating as provided by the backend.\r\n */\r\nexport enum RatingType {\r\n  SAFE = 'safe',\r\n  QUESTIONABLE = 'questionable',\r\n  EXPLICIT = 'explicit',\r\n}\r\n\r\n/**\r\n * All preferences.\r\n */\r\n\r\nexport enum PreferenceKey {\r\n  INFINITE = 'infinite',\r\n  RATED = 'rated',\r\n  RATEDThreshold = 'ratedThreshold',\r\n  ORIGINALS = 'originals',\r\n  COOKIES = 'cookies',\r\n  PRELOAD_VIDEOS = 'preloadVideos',\r\n  TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount',\r\n  RESULTS_LAYOUT = 'resultsLayout',\r\n  PAGE_SIZE = 'pageSize',\r\n  USE_CORS_PROXY = 'useCorsProxy',\r\n  SHOW_METADATA = 'showMetadata',\r\n  SHOW_COMMENTS = 'showComments',\r\n  SORT = 'sort',\r\n}\r\n\r\n/**\r\n * One-time definition of an empty function. Reusing this improves React's performance as it does not break memoization.\r\n */\r\nexport const NO_OP = () => {}\r\n\r\n/**\r\n * Same data as a tag but different names\r\n */\r\nexport type TagLike = {\r\n  name: string\r\n  posts: number\r\n  types: TagType[]\r\n}\r\n\r\nexport type ActiveTab = 'tags' | 'comments' | 'metadata'\r\n","import React from 'react'\r\n\r\ninterface ErrorBoundaryProps {\r\n  fallback: JSX.Element\r\n  children: JSX.Element\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","const theme = {\n  dimensions: {\n    borderRadius: '3px',\n    borderWidth: '2px',\n    spacing: '4px',\n    bigSpacing: '8px',\n    hugeSpacing: '16px',\n    gutter: '8px',\n    blockHeight: '32px',\n    bodyWidth: '1000px',\n  },\n  colors: {\n    accentColor: '#ee3344',\n    hoverAccent: '#ee3344',\n    backgroundColor: '#121212',\n    backgroundColor2: '#fff',\n    subduedText: '#ffffff80',\n    layerBg: '#ffffff11',\n    layerBgSolid: '#222222',\n    layerBgHighlight: '#ffffff22',\n    liked: '#ff0d50',\n  },\n  shadow: {\n    radius: '4px',\n    color: '#000',\n  },\n  timings: {\n    transitionTime: '0.2s',\n    longTransitionTime: '0.2s',\n  },\n  fontSizes: {\n    content: '15px',\n    bigTitle: '24px',\n  },\n}\n\nexport default theme\n\nexport type ThemeType = typeof theme\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.backgroundColor2};\n      background-color: ${theme.colors.backgroundColor};\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    // Not a touch device\n    // Touch devices have nice scrollbars by default\n    @media (pointer: fine) {\n      // Underline stuff that is focused on non-touch devices\n      // makes keyboard navigation clearer\n      :focus {\n        text-decoration: underline;\n      }\n\n      ::-webkit-scrollbar {\n        height: 8px;\n        transition: all ${theme.timings.transitionTime} ease-in-out;\n\n        :hover {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      /* Track */\n      ::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      /* Handle */\n      :hover {\n        ::-webkit-scrollbar {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: ${theme.colors.layerBg};\n        border-radius: 1000px;\n\n        :hover {\n          background: ${theme.colors.layerBgHighlight};\n        }\n      }\n    }\n  `\n)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\r\nimport FlexImage from '../styled/FlexImage'\r\nimport theme from '../../misc/theme'\r\nimport GlobalStyles from '../../GlobalStyles'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  align-content: center;\r\n  padding: 30px;\r\n  background: ${({ theme }) => theme.colors.backgroundColor};\r\n\r\n  > * {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default function ErrorScreen() {\r\n  return (\r\n    <FullScreenCentered theme={theme}>\r\n      <GlobalStyles theme={theme} />\r\n      <FlexImage src={outOfResultsPicture} alt='Shironeko does not understand' />\r\n      <h1>Sorry about that...</h1>\r\n      <ResetButton theme={theme} />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport usePreference from '../../hooks/usePreference'\nimport { PreferenceKey } from '../../data/types'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: ${theme.colors.backgroundColor2};\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const [cookies, setCookies] = usePreference(PreferenceKey.COOKIES)\n\n  const handleAccept = useCallback(() => setCookies(true), [setCookies])\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={handleAccept} aria-label='Allow Cookies'>\n        Okay\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import TagDataClass from '../data/TagDataClass'\nimport { tagsToString } from '../data/utils'\nimport { PreferencesState } from '../redux/reducers/preferences'\n\nenum AnalyticsEventId {\n  SEARCH = 'r34_search',\n}\n\n/**\n * Should be called whenever a new search is started.\n */\nexport const searchEvent = (\n  activeTags: Record<string, TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n) => ({\n  id: AnalyticsEventId.SEARCH,\n  payload: {\n    active_tags: tagsToString(activeTags),\n    page_number,\n    preferences,\n  },\n})\n","import { AppAction, SET_POSTS, ADD_POSTS } from '../actions'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport { searchEvent } from '../../analytics/events'\r\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\r\nimport { MiddlewareAPI, Dispatch } from 'redux'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\r\n  authDomain: 'r34-react.firebaseapp.com',\r\n  databaseURL: 'https://r34-react.firebaseio.com',\r\n  projectId: 'r34-react',\r\n  storageBucket: 'r34-react.appspot.com',\r\n  messagingSenderId: '844749417844',\r\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\r\n  measurementId: 'G-27J3QXZ8YR',\r\n}\r\n\r\nlet firebaseApp: firebase.app.App\r\nlet analytics: firebase.analytics.Analytics\r\n\r\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\r\n  const state = store.getState()\r\n  const cookies = selectCookies(state)\r\n\r\n  // Only send analytics if the user consented\r\n  if (cookies) {\r\n    if (!firebaseApp) {\r\n      firebaseApp = firebase.initializeApp(config)\r\n      analytics = firebaseApp.analytics()\r\n    }\r\n\r\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\r\n      const activeTags = selectActiveTags(state)\r\n      const pageNumber = selectPageNumber(state)\r\n      const preferences = selectPreferences(state)\r\n      const { id, payload } = searchEvent(activeTags, pageNumber, preferences)\r\n      analytics.logEvent<typeof id>(id, payload)\r\n    }\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default eventLogging\r\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { Modifier, TagLike, TagType } from '../data/types'\nimport { preparePost } from './prepare'\n\nconst sourceTags: TagLike[] = [\n  { name: 'source:*patreon*', posts: 12711, types: [TagType.SOURCE] },\n  { name: 'source:*twitter*', posts: 99927, types: [TagType.SOURCE] },\n  { name: 'source:*pixiv*', posts: 185080, types: [TagType.SOURCE] },\n]\n\nconst ratingTags: TagLike[] = [\n  { name: 'rating:safe', posts: 14293, types: [TagType.RATING] },\n  { name: 'rating:questionable', posts: 219552, types: [TagType.RATING] },\n  { name: 'rating:explicit', posts: 3821144, types: [TagType.RATING] },\n]\n\nclass API {\n  static defaultPageSize = 20\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n\n  activeApi = API.apiUrl2\n\n  constructor() {\n    this.activeApi = API.apiUrl1\n\n    // Failover to apiUrl2\n    fetch(this.activeApi).catch(() => (this.activeApi = API.apiUrl2))\n  }\n\n  async getTags(searchTerm: string, limit: number = API.defaultPageSize) {\n    const tags: TagLike[] = await (\n      await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n    ).json()\n\n    // HACKY: Inject suggestions for ratings and some sources\n    if (searchTerm.startsWith('rating:')) {\n      const matchingRating = ratingTags.filter((tag) => tag.name.includes(searchTerm.replace('rating:', '')))\n      return [...tags, ...matchingRating]\n    }\n\n    if (searchTerm.startsWith('source:')) {\n      const matchingSourceTags = sourceTags.filter((tag) => tag.name.includes(searchTerm.replace('source:', '')))\n      return [...tags, ...matchingSourceTags]\n    }\n\n    return tags\n  }\n\n  async getPosts(\n    tags: Record<string, TagDataClass>,\n    limit: number = API.defaultPageSize,\n    pageNumber = 0,\n    minScore = 0,\n    sort: 'score' | 'date' = 'date'\n  ) {\n    const res = await (await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit, sort))).json()\n\n    return {\n      posts: res.posts.map(preparePost) as PostDataClass[],\n      count: Number(res.count),\n    }\n  }\n\n  async getAliases(tagName: string) {\n    const aliases: TagLike[] = await (await fetch(`${this.activeApi}/alias/${encodeURIComponent(tagName)}`)).json()\n\n    return aliases\n  }\n\n  buildPostUrl(\n    page: number,\n    tags: Record<string, TagDataClass>,\n    minScore: number,\n    limit: number = API.defaultPageSize,\n    sort: 'score' | 'date'\n  ) {\n    const tagList = Object.values(tags)\n\n    const normalTags = tagList.filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = tagList.filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    const tagParts = [...normalTags.map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)]\n\n    if (orTags.length > 0) {\n      tagParts.push('( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )')\n    }\n\n    if (minScore > 0) {\n      tagParts.push(encodeURIComponent('score:>=' + minScore))\n    }\n\n    if (sort !== 'date') {\n      tagParts.push(encodeURIComponent('sort:' + sort + ':desc'))\n    }\n\n    if (tagParts.length > 0) {\n      url += `&tags=${tagParts.join(' + ')}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","interface RawComment {\r\n  created_at: string\r\n  body: string\r\n  creator: string\r\n  id: string\r\n  creator_id: string\r\n}\r\n\r\nexport function parseComment(rawComment: RawComment) {\r\n  return new CommentDataClass(\r\n    rawComment.created_at,\r\n    rawComment.body,\r\n    rawComment.creator,\r\n    rawComment.id,\r\n    rawComment.creator_id\r\n  )\r\n}\r\n\r\nexport default class CommentDataClass {\r\n  created_at: number\r\n  body: string\r\n  creator: string\r\n  id: number\r\n  creator_id: number\r\n\r\n  constructor(created_at: string, body: string, creator: string, id: string, creator_id: string) {\r\n    this.created_at = Date.parse(created_at)\r\n    this.body = body\r\n    this.creator = creator\r\n    this.id = Number(id)\r\n    this.creator_id = Number(creator_id)\r\n  }\r\n}\r\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport {\n  AppAction,\n  GET_RESULTS,\n  GET_MORE_RESULTS,\n  addPosts,\n  setPosts,\n  ADD_TAG,\n  addAliases,\n  LIKE_POST,\n  FETCH_SUGGESTIONS,\n  setSuggestions,\n  FETCH_COMMENTS,\n  setComments,\n} from '../actions'\nimport api from '../../misc/api'\nimport {\n  selectActiveTags,\n  selectPageNumber,\n  selectHasMoreResults,\n  selectMinRating,\n  selectPageSize,\n  selectSort,\n  selectTagSuggestionCount,\n  selectPostById,\n} from '../selectors'\nimport TagDataClass from '../../data/TagDataClass'\nimport { serializeTagname } from '../../misc/formatting'\nimport { parseComment } from '../../data/CommentDataClass'\n\nconst apiRequests = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\n  const state = store.getState()\n  const hasMoreResults = selectHasMoreResults(state)\n\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const result = await api.getPosts(activeTags, pageSize, action.pageNumber, minRating, sort)\n\n    store.dispatch(setPosts(result.posts, result.count, action.pageNumber))\n  }\n\n  if (action.type === GET_MORE_RESULTS && hasMoreResults) {\n    const activeTags = selectActiveTags(state)\n    const pageNumber = selectPageNumber(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const res = await api.getPosts(activeTags, pageSize, pageNumber + 1, minRating, sort)\n\n    store.dispatch(addPosts(res.posts))\n  }\n\n  if (action.type === ADD_TAG) {\n    const activeTags = selectActiveTags(state)\n    const aliases = await api.getAliases(action.tag.name)\n\n    const sanitizedAliases = aliases\n      .sort((a, b) => b.posts - a.posts)\n      .filter((alias) => !(alias.name in activeTags))\n      .map((alias) => new TagDataClass(alias.name, [], alias.posts))\n\n    store.dispatch(addAliases(sanitizedAliases, action.tag.name))\n\n    // Request types for newly added tag\n    if (action.tag.types?.length === 0) {\n      const tags = await api.getTags(action.tag.name)\n      const tag = tags.find((tag) => (tag.name = action.tag.name))\n\n      if (tag) {\n        action.tag.types = tag.types\n        action.tag.count = tag.posts\n      }\n    }\n  }\n\n  if (action.type === LIKE_POST) {\n    fetch(`https://rule34.xxx/index.php?page=post&s=vote&id=${action.postId}&type=up`, { mode: 'no-cors' })\n      .then(() => {\n        // nothing to do, I update the state in advance\n      })\n      .catch((err) => {\n        console.warn('Upvote rejected', err)\n      })\n  }\n\n  if (action.type === FETCH_SUGGESTIONS) {\n    const limit = selectTagSuggestionCount(state)\n    const suggestions = await api.getTags(serializeTagname(action.value), limit)\n\n    store.dispatch(setSuggestions(suggestions))\n  }\n\n  if (action.type === FETCH_COMMENTS) {\n    const post = selectPostById(action.postId)(state)\n\n    if (post) {\n      const rawComments = (await (await fetch(post.comments_url)).json()) as any[]\n      const comments = rawComments.map(parseComment)\n\n      store.dispatch(setComments(action.postId, comments))\n    }\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { applyMiddleware } from 'redux'\r\nimport analytics from './analytics'\r\nimport requests from './requests'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst middleware = composeWithDevTools(applyMiddleware(analytics, requests))\r\n\r\nexport default middleware\r\n","import produce from 'immer'\r\nimport { PreferenceKey, ResultLayout } from '../../data/types'\r\nimport { AppAction, SET_PREFERENCE } from '../actions'\r\n\r\nexport interface PreferencesState {\r\n  infinite: boolean\r\n  rated: boolean\r\n  ratedThreshold: number\r\n  originals: boolean\r\n  cookies: boolean\r\n  preloadVideos: boolean\r\n  tagSuggestionsCount: number\r\n  resultsLayout: ResultLayout\r\n  pageSize: number\r\n  useCorsProxy: boolean\r\n  showMetadata: boolean\r\n  showComments: boolean\r\n  sort: 'score' | 'date'\r\n}\r\n\r\nconst initialPreferencesState: PreferencesState = {\r\n  infinite: true,\r\n  rated: false,\r\n  ratedThreshold: 1,\r\n  originals: false,\r\n  cookies: false,\r\n  preloadVideos: false,\r\n  tagSuggestionsCount: 20,\r\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\r\n  pageSize: 20,\r\n  useCorsProxy: false,\r\n  showMetadata: false,\r\n  showComments: false,\r\n  sort: 'date',\r\n}\r\n\r\nfunction setPreference<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\r\n  return produce(state, (draft) => {\r\n    draft[key] = value\r\n  })\r\n}\r\n\r\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_PREFERENCE:\r\n      return setPreference(state, action.key, action.value)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default preferences\r\n","import produce from 'immer'\nimport CommentDataClass from '../../data/CommentDataClass'\nimport PostDataClass from '../../data/PostDataClass'\nimport { SET_POSTS, ADD_POSTS, SET_COMMENTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nconst initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: number, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = postCount\n    draft.pageNumber = pageNumber\n  })\n\nconst setComments = (state: ResultsState, postId: number, comments: CommentDataClass[]) =>\n  produce(state, (draft) => {\n    const postIndex = state.posts.findIndex((p) => p.id === postId)\n    if (postIndex >= 0) {\n      draft.posts[postIndex].comments = comments\n    }\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    case SET_COMMENTS:\n      return setComments(state, action.postId, action.comments)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/TagDataClass'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES } from '../actions'\n\nexport interface TagsState {\n  active: Record<string, TagDataClass>\n  aliases: Record<string, TagDataClass[]>\n}\n\nconst initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nconst initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import produce from 'immer'\r\nimport { AppAction, LIKE_POST } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport type LikesState = Record<number, number>\r\n\r\nconst initialReaderState: LikesState = {}\r\n\r\nconst likePost = (state: LikesState, postId: number) =>\r\n  produce(state, (draft) => {\r\n    if (!(postId in state)) {\r\n      draft[postId] = Date.now()\r\n    }\r\n\r\n    // NOTE: Might need to introduce a cap here...\r\n    // Like 1000 likes max, delete oldest when more are added?\r\n  })\r\n\r\nconst likes = (state: LikesState = initialReaderState, action: AppAction): LikesState => {\r\n  switch (action.type) {\r\n    case LIKE_POST:\r\n      return likePost(state, action.postId)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default likes\r\n","import produce from 'immer'\r\nimport { TagLike } from '../../data/types'\r\nimport { AppAction, SET_SUGGESTIONS } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport interface SuggestionsState {\r\n  entries: TagLike[]\r\n}\r\n\r\nconst initialReaderState: SuggestionsState = {\r\n  entries: [],\r\n}\r\n\r\nconst setSuggestions = (state: SuggestionsState, suggestions: TagLike[]) =>\r\n  produce(state, (draft) => {\r\n    draft.entries = suggestions\r\n  })\r\n\r\nconst suggestions = (state: SuggestionsState = initialReaderState, action: AppAction): SuggestionsState => {\r\n  switch (action.type) {\r\n    case SET_SUGGESTIONS:\r\n      return setSuggestions(state, action.suggestions)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default suggestions\r\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\nimport likes from './likes'\nimport suggestions from './suggestions'\n\nexport default combineReducers({ tags, results, preferences, reader, likes, suggestions })\n","import { createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { getVersion, versionToNumber } from '../data/utils'\nimport middleware from './middleware'\nimport rootReducer from './reducers'\n\nconst version = getVersion()\n\nconst persistConfig = {\n  key: 'appstate',\n  version: versionToNumber(version),\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, middleware)\n\nexport const persistor = persistStore(store)\n","import React, { Suspense } from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport ErrorBoundary from './components/features/ErrorBoundary'\nimport ErrorScreen from './components/pages/ErrorScreen'\nimport LoadingScreen from './components/pages/LoadingScreen'\nimport CookieConfirmation from './components/widgets/CookieConfirmation'\nimport { RouteName } from './data/types'\nimport GlobalStyles from './GlobalStyles'\nimport theme from './misc/theme'\nimport { persistor, store } from './redux/store'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\nconst About = React.lazy(() => import('./components/pages/About'))\n\nexport default function App() {\n  return (\n    <ErrorBoundary fallback={<ErrorScreen />}>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <PersistGate loading={<LoadingScreen />} persistor={persistor}>\n            <GlobalStyles />\n            <HashRouter>\n              <Suspense fallback={<LoadingScreen />}>\n                <Switch>\n                  <Route exact path={RouteName.HELP}>\n                    <Help />\n                  </Route>\n                  <Route exact path={RouteName.SETTINGS}>\n                    <Settings />\n                  </Route>\n                  <Route exact path={RouteName.ABOUT}>\n                    <About />\n                  </Route>\n                  <Route path={RouteName.SEARCH}>\n                    <Search />\n                  </Route>\n                </Switch>\n              </Suspense>\n              <CookieConfirmation />\n            </HashRouter>\n          </PersistGate>\n        </Provider>\n      </ThemeProvider>\n    </ErrorBoundary>\n  )\n}\n","// Polyfills\nimport 'whatwg-fetch'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n","import { createSelector, defaultMemoize } from 'reselect'\r\nimport { DefaultRootState } from '../react-redux'\r\n\r\n// Simple selectors\r\nexport const selectActiveTags = (state: DefaultRootState) => state.tags.active\r\nexport const selectResults = (state: DefaultRootState) => state.results\r\nexport const selectPosts = (state: DefaultRootState) => state.results.posts\r\nexport const selectCount = (state: DefaultRootState) => state.results.count\r\nexport const selectPageNumber = (state: DefaultRootState) => state.results.pageNumber\r\nexport const selectPreferences = (state: DefaultRootState) => state.preferences\r\nexport const selectResultsLayout = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectPreloadVideos = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectInfinite = (state: DefaultRootState) => state.preferences.infinite\r\nexport const selectOriginals = (state: DefaultRootState) => state.preferences.originals\r\nexport const selectRated = (state: DefaultRootState) => state.preferences.rated\r\nexport const selectRatedThreshold = (state: DefaultRootState) => state.preferences.ratedThreshold\r\nexport const selectCookies = (state: DefaultRootState) => state.preferences.cookies\r\nexport const selectFullsceenState = (state: DefaultRootState) => state.reader.isEnabled\r\nexport const selectFullsceenPostId = (state: DefaultRootState) => state.reader.postId\r\nexport const selectAliases = (state: DefaultRootState) => state.tags.aliases\r\nexport const selectPageSize = (state: DefaultRootState) => state.preferences.pageSize\r\nexport const selectTagSuggestionCount = (state: DefaultRootState) => state.preferences.tagSuggestionsCount\r\nexport const selectUseCorsProxy = (state: DefaultRootState) => state.preferences.useCorsProxy\r\nexport const selectShowMetadata = (state: DefaultRootState) => state.preferences.showMetadata\r\nexport const selectShowComments = (state: DefaultRootState) => state.preferences.showComments\r\nexport const selectSort = (state: DefaultRootState) => state.preferences.sort\r\nexport const selectSuggestions = (state: DefaultRootState) => state.suggestions.entries\r\n\r\n// Memoized selectors\r\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\r\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\r\n\r\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\r\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\r\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\r\nexport const selectLastPage = createSelector(\r\n  selectCount,\r\n  selectPageSize,\r\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\r\n)\r\nexport const selectFullScreenPost = createSelector(selectPosts, selectFullsceenPostId, (posts, fullScreenPostId) =>\r\n  posts.find((post) => post.id === fullScreenPostId)\r\n)\r\nexport const selectFullScreenIndex = createSelector(selectPosts, selectFullScreenPost, (posts, fullScreenPost) =>\r\n  fullScreenPost ? posts.indexOf(fullScreenPost) : -1\r\n)\r\nexport const selectMinRating = createSelector(selectRated, selectRatedThreshold, (rated, ratedThreshold) =>\r\n  rated ? ratedThreshold : 0\r\n)\r\nexport const selectNextIndex = createSelector(selectPosts, selectFullScreenIndex, (posts, selectedIndex) =>\r\n  selectedIndex + 1 < posts.length ? selectedIndex + 1 : undefined\r\n)\r\nexport const selectPreviousIndex = createSelector(selectFullScreenIndex, (selectedIndex) =>\r\n  selectedIndex > 0 ? selectedIndex - 1 : undefined\r\n)\r\n\r\n// Parameterized selectors\r\nexport const selectPostById = defaultMemoize((id: number) => {\r\n  return createSelector(selectPosts, (posts) => {\r\n    return posts.find((post) => post.id === id)\r\n  })\r\n})\r\n\r\nexport const selectAliasesByTagName = defaultMemoize((tagName: string) => {\r\n  return createSelector(selectAliases, (aliases) => {\r\n    return aliases[tagName]\r\n  })\r\n})\r\n\r\nexport const selectLikedByPostId = defaultMemoize((id: number) => (state: DefaultRootState) => id in state.likes)\r\n"],"sourceRoot":""}