{"version":3,"sources":["icons/R34Icon.tsx","components/features/Header.tsx","components/common/Toggle.tsx","hooks/usePreference.tsx","icons/TypeIcon.tsx","hooks/useThrottledEffect.tsx","components/tagSelector/TagInput.tsx","components/tagSelector/DropdownListEntry.tsx","components/tagSelector/DropdownList.tsx","hooks/useModifier.tsx","components/tagSelector/TagSelector.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/common/Text.tsx","icons/Icons.tsx","components/common/Lines.tsx","misc/formatting.ts","components/common/Surface.tsx","components/common/FlexPair.tsx","hooks/useToggle.ts","components/common/FlexColumn.tsx","components/tag/TagWrapper.tsx","components/tag/TagName.tsx","components/tag/Alias.tsx","components/tag/AliasesList.tsx","components/tag/Tag.tsx","components/tag/TagList.tsx"],"names":["R34Icon","props","theme","useTheme","xmlns","width","size","height","viewBox","transform","id","cx","cy","fill","stroke","colors","accentColor","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","HeaderWrapper","styled","header","css","flexColumn","flexColumnGap","dimensions","bigSpacing","TitleBar","div","flexRowWithGap","layerBgSolid","gutter","shadow","box","MenuBar","nav","flexRowGap","hugeSpacing","LocationStyledLink","Link","to","current","backgroundColor2","Header","useLocation","pathname","role","href","RouteName","SEARCH","HELP","SETTINGS","Track","defaultBorder","backgroundColor","timings","longTransitionTime","Thumb","supportsAspectRatio","value","Toggle","onToggle","onClick","usePreference","key","dispatch","useDispatch","preferences","useSelector","selectPreferences","setPreference","useCallback","setOption","TypeIcon","types","className","NO_OP","useMemo","find","t","match","useThrottledEffect","callback","delay","deps","lastRun","useRef","Date","now","useEffect","handler","setTimeout","clearTimeout","Input","input","fontSizes","content","borderWidth","TagInput","setValue","onChange","event","target","placeholder","aria-label","EntryWrapper","blockHeight","Name","span","Count","Icon","DropdownListEntry","name","posts","formatTagname","formatCount","ListWrapper","tagSelector","offsetTop","clientHeight","offsetLeft","clientWidth","sizeAndPosition","tagSelectorRef","DropdownList","entries","length","map","entry","order","Modifier","PLUS","MINUS","OR","TagSelectorWrapper","closed","borderRadius","AddButton","ModifierButton","TagSelector","useState","suggestions","setSuggestions","setTagSelectorRef","initialValue","modifier","setModifier","nextModifier","currentIndex","indexOf","useModifier","tagSuggestionsCount","selectTagSuggestionCount","activateTag","addTag","prepareTag","count","api","getTags","serializeTagname","then","newSuggestions","onAddClick","trim","suggestion","s","onSuggestionClick","ref","LabeledToggle","children","FlexPair","OptionsWrapper","gridWithGap","StyledInput","Options","PreferenceKey","RATED","rated","setRated","RATEDThreshold","ratedThreshold","setRatedThreshold","toggleRated","toString","ratedThresholdInternal","setRatedThresholdInternal","onBlur","Number","style","display","type","Title","h2","bigTitle","BigTitle","h1","SmallTitle","h3","Faded","subduedText","StyledIcon","i","color","StyledSvg","svg","icon","prefix","PixivIcon","CharacterIcon","attrs","ArtistIcon","CopyrightIcon","CloseIcon","ExpandIcon","ExternalLinkIcon","DownloadIcon","SourceIcon","RatingIcon","HeartIcon","LinkIcon","BrandIcon","PlayIcon","memo","PauseIcon","ArrowDown","CodeBranchIcon","d","HorizontalLine","layerBg","VerticalLine","numberString","number","toFixed","formatSource","source","url","parseUrl","host","formatDuration","duration","min","Math","trunc","sec","tagname","replace","toLowerCase","formatTagnameAndCount","layer","Wrapper","useToggle","toggleValue","resetValue","FlexColumn","FlexColumnWithSpacing","centeredMaxWidth","TagWrapper","active","fg","bg","switchingColors","collapsed","modifierToStyle","TagNameSpan","TagName","text","tabIndex","AliasWrapper","Alias","parentRef","AliasesList","aliases","Tag","loadAliases","tagRef","setTagRef","toggleCollapsed","resetCollapsed","activeTags","selectActiveTags","selectAliasesByTagName","isActive","hasAliases","handleClick","stopPropagation","tag","TagDataClass","removeTag","handleArrowClick","handleEnter","getAliases","newAliases","sort","a","b","filtered","filter","alias","addAliases","onKeyDown","onMouseLeave","TagListWrapper","TagList","tags","Object"],"mappings":"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","file":"static/js/0.2dbb2d31.chunk.js","sourcesContent":["import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number }) {\n  const theme = useTheme()\n\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' width={props.size} height={props.size} viewBox='0 0 12.7 12.7'>\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${theme.shadow.box};\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.backgroundColor2};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar role='cell'>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { ThemeType } from '../../misc/theme'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: ThemeType }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setOption } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setPreference = useCallback((value: any) => dispatch(setOption(key, value)), [dispatch, key])\n\n  return [preferences[key], setPreference]\n}\n","import React, { MouseEventHandler, useMemo } from 'react'\nimport { NO_OP } from '../data/types'\nimport { CharacterIcon, CopyrightIcon, ArtistIcon } from './Icons'\n\ninterface TypeIconProps {\n  types?: string[]\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  left?: boolean\n  right?: boolean\n}\n\nexport default function TypeIcon(props: TypeIconProps) {\n  const { types = [], className = '', onClick = NO_OP } = props\n  const interestingType = useMemo(() => types.find((t) => !t.match(/^[general|ambiguous]$/)), [types])\n\n  switch (interestingType) {\n    case 'character':\n      return <CharacterIcon className={className} onClick={onClick} />\n    case 'copyright':\n      return <CopyrightIcon className={className} onClick={onClick} />\n    case 'artist':\n      return <ArtistIcon className={className} onClick={onClick} />\n    default:\n      return null\n  }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * wraps your effect so that it can only be called in a set interval\n */\nexport default function useThrottledEffect(callback: () => void, delay: number, deps: any[] = []) {\n  const lastRun = useRef(Date.now())\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      const now = Date.now()\n      const then = lastRun.current\n\n      if (now - then >= delay) {\n        callback()\n        lastRun.current = now\n      }\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [delay, ...deps])\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Input = styled.input(\n  (props) => css`\n    width: 100%;\n    border: none;\n    outline: none;\n    background: none;\n    font-size: ${props.theme.fontSizes.content};\n    border-top: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n    border-bottom: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n  `\n)\n\ninterface TagInputProps {\n  value: string\n  setValue: (newValue: string) => void\n}\n\nexport default function TagInput(props: TagInputProps) {\n  const { value, setValue } = props\n  return (\n    <Input\n      id='tag-input'\n      value={value}\n      onChange={(event) => setValue(event.target.value)}\n      placeholder='Search for tags'\n      aria-label='Search'\n    />\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TagType } from '../../data/types'\nimport TypeIcon from '../../icons/TypeIcon'\nimport { formatCount, formatTagname } from '../../misc/formatting'\n\ninterface EntryProps {\n  name: string\n  posts: number\n  types: TagType[]\n  onClick: MouseEventHandler\n}\n\nconst EntryWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 48px 1fr auto;\n    min-height: ${theme.dimensions.blockHeight}; // COMPAT: Kiwi Browser\n    height: ${theme.dimensions.blockHeight};\n    background: white;\n    align-items: center;\n  `\n)\n\nconst Name = styled.span`\n  grid-column: 2/3;\n`\n\nconst Count = styled.span`\n  grid-column: 3/4;\n`\n\nconst Icon = styled.div`\n  grid-column: 1/2;\n  text-align: center;\n`\n\nexport default function DropdownListEntry(props: EntryProps) {\n  const { name, posts, types, onClick } = props\n\n  return (\n    <EntryWrapper onClick={onClick}>\n      <Icon>\n        <TypeIcon types={types} />\n      </Icon>\n      <Name>{formatTagname(name)}</Name>\n      <Count>{formatCount(posts)} posts</Count>\n    </EntryWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport DropdownListEntry from './DropdownListEntry'\nimport TagDataClass from '../../data/Tag'\nimport { TagType } from '../../data/types'\nimport { ThemeType } from '../../misc/theme'\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\n\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\n  if (tagSelector) {\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector\n\n    return css`\n      position: absolute;\n      top: ${offsetTop + clientHeight}px;\n      left: ${offsetLeft}px;\n      width: ${clientWidth}px;\n      max-height: 50vh;\n    `\n  }\n\n  return ''\n}\n\nexport const ListWrapper = styled.div(\n  (props: { tagSelectorRef: HTMLDivElement | null; theme: ThemeType }) => css`\n    ${flexColumn()}\n    ${flexColumnGap('1px')}\n    ${sizeAndPosition(props.tagSelectorRef)};\n    background: lightgrey;\n    box-sizing: border-box;\n    border: ${props.theme.dimensions.borderWidth} ${props.theme.colors.accentColor} solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    color: black;\n    overflow-y: scroll;\n    z-index: 3;\n  `\n)\n\ninterface DropdownListProps {\n  tagSelectorRef: HTMLDivElement | null\n  entries: {\n    name: string\n    posts: number\n    types: TagType[]\n  }[]\n  onClick: (entry: TagDataClass) => void\n}\n\nexport default function DropdownList(props: DropdownListProps) {\n  const { tagSelectorRef, entries, onClick } = props\n\n  return entries && entries.length > 0 ? (\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\n      {entries.map((entry) => (\n        <DropdownListEntry key={entry.name} onClick={() => onClick(entry)} {...entry} />\n      ))}\n    </ListWrapper>\n  ) : null\n}\n","import { useCallback, useState } from 'react'\nimport { Modifier } from '../data/types'\n\nconst order = [Modifier.PLUS, Modifier.MINUS, Modifier.OR]\n\n/**\n * Small utility hook to abstract the rotating modifier away\n */\nexport default function useModifier(initialValue: Modifier = Modifier.PLUS): [Modifier, () => void] {\n  const [modifier, setModifier] = useState(initialValue)\n\n  const nextModifier = useCallback(() => {\n    const currentIndex = order.indexOf(modifier)\n    const nextIndex = currentIndex + 1\n\n    // make the value rotate\n    setModifier(order[nextIndex % order.length])\n  }, [modifier])\n\n  return [modifier, nextModifier]\n}\n","import React, { useState, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport api from '../../misc/api'\nimport { prepareTag } from '../../misc/prepare'\nimport { AddButton, ModifierButton } from '../common/Buttons'\nimport TagInput from './TagInput'\nimport DropdownList from './DropdownList'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addTag } from '../../redux/actions'\nimport { ThemeType } from '../../misc/theme'\nimport { selectTagSuggestionCount } from '../../redux/selectors'\nimport useThrottledEffect from '../../hooks/useThrottledEffect'\nimport useModifier from '../../hooks/useModifier'\nimport { serializeTagname } from '../../misc/formatting'\n\nexport const TagSelectorWrapper = styled.div(\n  (props: { closed: boolean; ref: (ref: HTMLInputElement) => void; theme: ThemeType }) => css`\n    display: flex;\n    background: white;\n    ${props.closed\n      ? css`\n          border-radius: ${props.theme.dimensions.borderRadius};\n        `\n      : css`\n          border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\n\n          > ${AddButton} {\n            border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\n          }\n\n          > ${ModifierButton} {\n            border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\n          }\n        `}\n  `\n)\n\nexport default function TagSelector() {\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState([])\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(null)\n  const [modifier, nextModifier] = useModifier()\n\n  const tagSuggestionsCount = useSelector(selectTagSuggestionCount)\n\n  const activateTag = useCallback(\n    ({ name, posts, types }) => {\n      dispatch(\n        addTag(\n          prepareTag({\n            name,\n            types,\n            modifier,\n            count: posts,\n          })\n        )\n      )\n\n      setValue('')\n      setSuggestions([])\n    },\n    [dispatch, modifier]\n  )\n\n  useThrottledEffect(\n    () => {\n      if (!value) {\n        setSuggestions([])\n        return\n      }\n\n      api.getTags(serializeTagname(value), tagSuggestionsCount).then((newSuggestions) => {\n        setSuggestions(newSuggestions)\n      })\n    },\n    300,\n    [tagSuggestionsCount, value]\n  )\n\n  const onAddClick = useCallback(() => {\n    if (value && value.trim()) {\n      const suggestion = suggestions.find((s: { name: string }) => s.name === value) || {}\n      activateTag({ ...suggestion, name: value })\n    }\n  }, [value, activateTag, suggestions])\n\n  const onSuggestionClick = useCallback((entry) => activateTag(entry), [activateTag])\n\n  return (\n    <TagSelectorWrapper ref={setTagSelectorRef} closed={suggestions.length === 0}>\n      <ModifierButton onClick={nextModifier} aria-label='Tag Modifier'>\n        {modifier}\n      </ModifierButton>\n      <TagInput value={value} setValue={setValue} />\n      <AddButton onClick={onAddClick} aria-label='Add Tag'>\n        Add\n      </AddButton>\n      {suggestions.length > 0 && (\n        <DropdownList tagSelectorRef={tagSelectorRef} entries={suggestions} onClick={onSuggestionClick} />\n      )}\n    </TagSelectorWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport FlexPair from './FlexPair'\nimport Toggle from './Toggle'\n\ninterface LabeledToggleProps {\n  children: JSX.Element | string\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function LabeledToggle(props: LabeledToggleProps) {\n  const { children, value, onToggle } = props\n\n  return (\n    <FlexPair>\n      <Toggle value={value} onToggle={onToggle} />\n      <span>{children}</span>\n    </FlexPair>\n  )\n}\n","import React, { ChangeEventHandler, useCallback, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport LabeledToggle from '../common/LabeledToggle'\nimport { ThemeType } from '../../misc/theme'\nimport { PreferenceKey } from '../../data/types'\nimport usePreference from '../../hooks/usePreference'\nimport { gridWithGap } from '../../styled/mixins'\n\nconst OptionsWrapper = styled.div`\n  ${gridWithGap}\n`\n\nconst StyledInput = styled.input(\n  (props: { value: string; theme: ThemeType }) => css`\n    background: none;\n    border: none;\n    outline: none;\n    color: ${props.theme.colors.accentColor};\n    width: ${0.65 * props.value.length}em;\n    text-align: right;\n    font-size: ${props.theme.fontSizes.content};\n    margin: -1px 0.2em 0 0.2em;\n\n    ::-webkit-inner-spin-button,\n    ::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    -moz-appearance: textfield;\n  `\n)\n\nexport default function Options() {\n  const [rated, setRated] = usePreference(PreferenceKey.RATED)\n  const [ratedThreshold, setRatedThreshold] = usePreference(PreferenceKey.RATEDThreshold)\n  const toggleRated = useCallback(() => setRated(!rated), [rated, setRated])\n\n  const [ratedThresholdInternal, setRatedThresholdInternal] = useState(ratedThreshold ? ratedThreshold.toString() : '1')\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => setRatedThresholdInternal(event.target.value),\n    []\n  )\n  const onBlur = useCallback(() => setRatedThreshold(Number(ratedThresholdInternal)), [\n    ratedThresholdInternal,\n    setRatedThreshold,\n  ])\n\n  return (\n    <OptionsWrapper>\n      <LabeledToggle value={rated} onToggle={toggleRated}>\n        {rated ? (\n          <div style={{ display: 'flex' }}>\n            <span>More than</span>\n            <StyledInput type='text' value={ratedThresholdInternal} onChange={onChange} onBlur={onBlur} />\n            <span>likes</span>\n          </div>\n        ) : (\n          'Only show Rated Posts'\n        )}\n      </LabeledToggle>\n    </OptionsWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import React, { MouseEventHandler, memo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { NO_OP } from '../data/types'\n\nimport { ThemeType } from '../misc/theme'\n\nexport const StyledIcon = styled.i(\n  (props: { color: string; size: number; theme: ThemeType }) => css`\n    color: ${props.color};\n    min-width: ${props.size}px;\n    height: ${props.size}px;\n\n    svg {\n      color: ${props.color};\n    }\n  `\n)\n\nconst StyledSvg = styled.svg(\n  (props: { size: number } & JSX.IntrinsicAttributes) => css`\n    width: ${props.size}px;\n    height: ${props.size}px;\n  `\n)\n\ninterface IconProps {\n  icon: string\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  prefix?: string\n}\n\nconst Icon = (props: IconProps) => {\n  const { icon, className = '', color = 'black', size = 14, onClick = NO_OP, prefix = 'fas' } = props\n\n  if (icon === 'pixiv') {\n    return <PixivIcon {...props} />\n  }\n\n  return (\n    <div onClick={onClick}>\n      <StyledIcon className={`${prefix} ${icon} ${className}`} color={color} size={size} />\n    </div>\n  )\n}\n\nexport const CharacterIcon = styled(Icon).attrs({\n  icon: 'fa-user',\n})``\n\nexport const ArtistIcon = styled(Icon).attrs({\n  icon: 'fa-pen',\n})``\n\nexport const CopyrightIcon = styled(Icon).attrs({\n  icon: 'fa-copyright',\n})``\n\nexport const PlusIcon = styled(Icon).attrs({\n  icon: 'fa-plus-circle',\n})``\n\nexport const MinusIcon = styled(Icon).attrs({\n  icon: 'fa-minus-circle',\n})``\n\nexport const CloseIcon = styled(Icon).attrs({\n  icon: 'fa-times',\n})``\n\nexport const ExpandIcon = styled(Icon).attrs({\n  icon: 'fa-expand',\n})``\n\nexport const ExternalLinkIcon = styled(Icon).attrs({\n  icon: 'fa-external-link-alt',\n})``\n\nexport const DownloadIcon = styled(Icon).attrs({\n  icon: 'fa-download',\n})``\n\nexport const SourceIcon = styled(Icon).attrs({\n  icon: 'fa-hashtag',\n})``\n\nexport const RatingIcon = styled(Icon).attrs({\n  icon: 'fa-registered',\n})``\n\nexport const HeartIcon = styled(Icon).attrs({\n  icon: 'fa-heart',\n})``\n\nexport const LinkIcon = styled(Icon).attrs({\n  icon: 'fa-link',\n})``\n\nexport const BrandIcon = styled(Icon).attrs({\n  prefix: 'fab',\n})``\n\nexport const PlayIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-play',\n  })``\n)\n\nexport const PauseIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-pause',\n  })``\n)\n\nexport const ArrowUp = styled(Icon).attrs({\n  icon: 'fa-caret-up',\n})``\n\nexport const ArrowDown = styled(Icon).attrs({\n  icon: 'fa-caret-down',\n})``\n\nexport const ArrowLeft = styled(Icon).attrs({\n  icon: 'fa-caret-left',\n})``\n\nexport const ArrowRight = styled(Icon).attrs({\n  icon: 'fa-caret-right',\n})``\n\nexport const CodeBranchIcon = styled(Icon).attrs({\n  icon: ' fa-code-branch',\n})``\n\nexport const PixivIcon = (props: Omit<IconProps, 'icon'>) => {\n  const { color = 'black', size = 14, onClick = NO_OP } = props\n\n  return (\n    <StyledSvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' size={size} onClick={onClick}>\n      <path\n        fill={color}\n        d='M4.935 0A4.924 4.924 0 0 0 0 4.935v14.13A4.924 4.924 0 0 0 4.935 24h14.13A4.924 4.924 0 0 0 24 19.065V4.935A4.924 4.924 0 0 0 19.065 0zm7.81 4.547c2.181 0 4.058.676 5.399 1.847a6.118 6.118 0 0 1 2.116 4.66c.005 1.854-.88 3.476-2.257 4.563-1.375 1.092-3.225 1.697-5.258 1.697-2.314 0-4.46-.842-4.46-.842v2.718c.397.116 1.048.365.635.779H5.79c-.41-.41.19-.65.644-.779V7.666c-1.053.81-1.593 1.51-1.868 2.031.32 1.02-.284.969-.284.969l-1.09-1.73s3.868-4.39 9.553-4.39zm-.19.971c-1.423-.003-3.184.473-4.27 1.244v8.646c.988.487 2.484.832 4.26.832h.01c1.596 0 2.98-.593 3.93-1.533.952-.948 1.486-2.183 1.492-3.683-.005-1.54-.504-2.864-1.42-3.86-.918-.992-2.274-1.645-4.002-1.646Z'\n      />\n    </StyledSvg>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname.replace(/_/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n","import styled, { css } from 'styled-components'\nimport { gutter, layer } from '../../styled/mixins'\n\nexport default styled.div(\n  (props) => css`\n    display: grid;\n    ${gutter(props)}\n    ${layer(props)}\n    ${props.theme.shadow.box};\n    border-radius: ${props.theme.dimensions.borderRadius};\n    width: 100%;\n  `\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\ninterface FlexPairProps {\n  children: [JSX.Element, JSX.Element]\n}\n\nconst Wrapper = styled.div`\n  ${flexRowWithGap}\n`\n\nexport default function FlexPair({ children }: FlexPairProps) {\n  return <Wrapper>{children}</Wrapper>\n}\n","import { useCallback, useState } from 'react'\n\n/**\n * A small wrapper for a useState<boolean> that is primarily used for toggling.\n * Saves me a few useCallbacks.\n */\nexport default function useToggle(initialValue = false): [boolean, () => void, () => void] {\n  const [value, setValue] = useState<boolean>(initialValue)\n  const toggleValue = useCallback(() => setValue(!value), [value])\n  const resetValue = useCallback(() => setValue(initialValue), [initialValue])\n\n  return [value, toggleValue, resetValue]\n}\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\n\nimport { ThemeType } from '../../misc/theme'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst dropdownBorderRadius = (collapsed: boolean, theme: ThemeType) =>\n  collapsed ? theme.dimensions.borderRadius : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`\n\nconst switchingColors = (active: boolean, theme: ThemeType) => {\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor\n\n  return css`\n    color: ${fg};\n    background-color: ${bg};\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\n    transition: background-color 0.4s ease-in-out;\n\n    svg {\n      color: ${fg};\n    }\n\n    cursor: pointer;\n\n    :hover,\n    :focus,\n    :active {\n      border-color: ${theme.colors.backgroundColor2};\n      color: ${theme.colors.backgroundColor2};\n\n      svg {\n        color: ${theme.colors.backgroundColor2};\n      }\n    }\n  `\n}\n\nconst TagWrapper = styled.div(\n  (props: { active: boolean; collapsed: boolean; onMouseLeave: MouseEventHandler; theme: DefaultTheme }) =>\n    css`\n      ${flexRowWithGap({ theme: props.theme })}\n      ${switchingColors(props.active, props.theme)}\n      padding: 0 ${props.theme.dimensions.gutter};\n      height: ${props.theme.dimensions.blockHeight};\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\n      font-size: ${props.theme.fontSizes.content};\n    `\n)\n\nexport default TagWrapper\n","import styled, { css } from 'styled-components'\nimport { Modifier, TagType } from '../../data/types'\nimport { formatTagnameAndCount } from '../../misc/formatting'\n\ninterface TagNameProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n  types?: TagType[]\n}\n\nconst modifierToStyle = {\n  [Modifier.PLUS]: css``,\n  [Modifier.MINUS]: css`\n    text-decoration: line-through;\n  `,\n  [Modifier.OR]: css`\n    font-style: italic;\n  `,\n}\n\nconst TagNameSpan = styled.span(\n  ({ modifier = Modifier.PLUS }: Pick<TagNameProps, 'modifier'>) => css`\n    ${modifierToStyle[modifier]};\n  `\n)\n\nexport default function TagName(props: TagNameProps) {\n  const { modifier, name, count } = props\n\n  const text = formatTagnameAndCount(name, count)\n\n  return (\n    <TagNameSpan modifier={modifier} tabIndex={0}>\n      {text}\n    </TagNameSpan>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Modifier } from '../../data/types'\nimport { flexRowWithGap } from '../../styled/mixins'\nimport TagName from './TagName'\n\ninterface AliasProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n}\n\nconst AliasWrapper = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    padding: 0 ${theme.dimensions.bigSpacing};\n    height: ${theme.dimensions.blockHeight};\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport default function Alias(props: AliasProps) {\n  const { modifier, name, count } = props\n\n  return (\n    <AliasWrapper>\n      <TagName modifier={modifier} name={name} count={count} />\n    </AliasWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport Alias from './Alias'\nimport { ThemeType } from '../../misc/theme'\n\nconst ListWrapper = styled.div(\n  ({ theme, parentRef }: { theme: ThemeType; parentRef: HTMLDivElement }) => css`\n    position: absolute;\n    top: ${parentRef.offsetTop + parentRef.clientHeight + 4}px;\n    left: ${parentRef.offsetLeft}px;\n    width: ${parentRef.clientWidth + 5}px;\n\n    display: flex;\n    flex-direction: column;\n\n    border-bottom-left-radius: ${theme.dimensions.borderRadius};\n    border-bottom-right-radius: ${theme.dimensions.borderRadius};\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    border-top: none;\n\n    background: ${theme.colors.backgroundColor};\n    z-index: 3;\n    color: ${theme.colors.accentColor};\n\n    > :not(:last-child) {\n      border-bottom: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    }\n  `\n)\n\ninterface AliasesListProps {\n  aliases: TagDataClass[]\n  modifier: Modifier\n  parentRef: HTMLDivElement\n}\n\nexport default function AliasesList(props: AliasesListProps) {\n  const { aliases, modifier, parentRef } = props\n\n  return (\n    <ListWrapper parentRef={parentRef}>\n      {aliases.map(({ name, count }) => (\n        <Alias key={'a_' + name} modifier={modifier} name={name} count={count} />\n      ))}\n    </ListWrapper>\n  )\n}\n","import React, { KeyboardEventHandler, MouseEventHandler, useCallback, useEffect, useState } from 'react'\r\nimport api from '../../misc/api'\r\nimport TypeIcon from '../../icons/TypeIcon'\r\nimport { ArrowDown } from '../../icons/Icons'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectActiveTags, selectAliasesByTagName } from '../../redux/selectors'\r\nimport { addAliases, addTag, removeTag } from '../../redux/actions'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport TagWrapper from './TagWrapper'\r\nimport TagName from './TagName'\r\nimport { Modifier } from '../../data/types'\r\nimport AliasesList from './AliasesList'\r\n\r\n/**\r\n * Same data as a tag but different names\r\n */\r\ntype TagLike = {\r\n  name: string\r\n  posts: number\r\n}\r\n\r\ninterface TagProps extends TagDataClass {\r\n  loadAliases: boolean\r\n}\r\n\r\nexport default function Tag(props: TagProps) {\r\n  const { name, count, modifier = Modifier.PLUS, types, loadAliases } = props\r\n\r\n  const [tagRef, setTagRef] = useState<HTMLDivElement | null>(null)\r\n  const [collapsed, toggleCollapsed, resetCollapsed] = useToggle(true)\r\n\r\n  const dispatch = useDispatch()\r\n  const activeTags = useSelector(selectActiveTags)\r\n  const aliases = useSelector(selectAliasesByTagName(name))\r\n\r\n  const isActive = name in activeTags\r\n  const hasAliases = aliases?.length > 0\r\n\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent | React.KeyboardEvent) => {\r\n      event.stopPropagation()\r\n      const tag = new TagDataClass(name, types, count, modifier)\r\n\r\n      if (name in activeTags) {\r\n        dispatch(removeTag(tag))\r\n      } else {\r\n        dispatch(addTag(tag))\r\n      }\r\n    },\r\n    [activeTags, count, dispatch, modifier, name, types]\r\n  )\r\n\r\n  const handleArrowClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      toggleCollapsed()\r\n    },\r\n    [toggleCollapsed]\r\n  )\r\n\r\n  const handleEnter: KeyboardEventHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleClick(event)\r\n      }\r\n    },\r\n    [handleClick]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (loadAliases && activeTags[name])\r\n      api.getAliases(name).then((newAliases: TagLike[]) => {\r\n        newAliases.sort((a, b) => b.posts - a.posts)\r\n        const filtered = newAliases\r\n          .filter((alias) => !activeTags[alias.name])\r\n          .map((alias) => new TagDataClass(alias.name, [], alias.posts))\r\n        dispatch(addAliases(filtered, name))\r\n      })\r\n  }, [loadAliases, name, activeTags, dispatch])\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onClick={handleClick}\r\n      onKeyDown={handleEnter}\r\n      onMouseLeave={resetCollapsed}\r\n      ref={setTagRef}\r\n    >\r\n      <TypeIcon types={types} />\r\n      <TagName modifier={modifier} name={name} count={count} />\r\n      {loadAliases && hasAliases && (\r\n        <>\r\n          <ArrowDown onClick={handleArrowClick} />\r\n          {!collapsed && tagRef && <AliasesList aliases={aliases} modifier={modifier} parentRef={tagRef} />}\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { flexRowGap, flexColumnGap } from '../../styled/mixins'\r\nimport Tag from './Tag'\r\n\r\nexport const TagListWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    ${flexRowGap(theme.dimensions.gutter)}\r\n    ${flexColumnGap(theme.dimensions.gutter)}\r\n  `\r\n)\r\n\r\ninterface TagListProps {\r\n  tags: Record<string, TagDataClass>\r\n  loadAliases?: boolean\r\n  padding?: boolean\r\n  className?: string\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, loadAliases = false, className } = props\r\n\r\n  return (\r\n    <TagListWrapper className={className}>\r\n      {Object.entries(tags).map(([key, tag]) => (\r\n        <Tag key={key} {...tag} loadAliases={loadAliases} />\r\n      ))}\r\n    </TagListWrapper>\r\n  )\r\n}\r\n"],"sourceRoot":""}