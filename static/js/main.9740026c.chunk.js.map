{"version":3,"sources":["data/types.ts","styled/mixins.tsx","misc/api.ts","data/Tag.ts","data/Post.ts","misc/prepare.ts","components/common/Buttons.tsx","hooks/useAction.tsx","icons/Loading.tsx","redux/actions.ts","components/features/CookieConfirmation.tsx","GlobalStyles.tsx","misc/theme.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/index.ts","analytics/events.ts","redux/middleware/eventLogging.ts","redux/middleware/apiRequests.ts","redux/store.ts","components/pages/LoadingScreen.tsx","App.tsx","index.tsx","redux/selectors.ts"],"names":["Modifier","VIDEO","PICTURE","GIF","ResultLayout","RouteName","RATED","RATEDTRESHOLD","ORIGINALS","COOKIES","PRELOAD_VIDEOS","TAG_SUGGESTIONS_COUNT","RESULTS_LAYOUT","PAGE_SIZE","NO_OP","defaultBorder","theme","css","colors","accentColor","dimensions","borderWidth","borderRadius","layer","layerBg","timings","transitionTime","layerBgHighlight","primaryHover","backgroundColor","backgroundColor2","flexColum","gutter","centeredMaxWidth","bodyWidth","defaultBlock","blockHeight","flexMedia","preserveAspectRatio","width","height","API","constructor","activeApi","apiUrl2","this","apiUrl1","fetch","catch","getTags","searchTerm","limit","pageSize","res","json","getPosts","tags","pageNumber","minScore","buildPostUrl","getAliases","tagName","page","normalTags","Object","values","filter","tag","modifier","OR","orTags","url","tagString","map","encodeURIComponent","name","join","length","TagDataClass","types","count","PLUS","PostDataClass","id","score","rating","source","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","small_src","big_src","prepareTag","dirtyTag","Number","preparePost","post","type","sample_url","preview_url","t","Boolean","TextButton","styled","button","bigSpacing","fontSizes","content","longTransitionTime","InvisButton","shadow","drop","RedButton","BlockButton","AddButton","ModifierButton","useAction","actionCreator","dispatch","useDispatch","useCallback","StyledSvg","svg","Loading","version","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","ADD_TAG","REMOVE_TAG","ADD_ALIASES","ADD_POSTS","SET_POSTS","SET_OPTION","GET_RESULTS","GET_MORE_RESULTS","ALLOW_COOKIES","ENTER_FULLSCREEN","EXIT_FULLSCREEN","SET_FULLSCREEN_POST","addTag","removeTag","addAliases","aliases","forTag","addPosts","posts","setPosts","setOption","key","value","getResults","getMoreResults","allowCookiesAction","enterFullscreen","postId","exitFullscreen","setFullScreenPost","CookieWrapper","div","layerBgSolid","StyledSpan","span","CookieConfirmation","cookies","useSelector","selectCookies","onClick","aria-label","createGlobalStyle","spacing","hugeSpacing","hoverAccent","subduedText","box","misc","bigTitle","initialPreferencesState","infinite","rated","ratedTreshold","originals","preloadVideos","tagSuggestionsCount","resultsLayout","INFINITE_COLUMN","state","produce","draft","preferences","action","initialResultsState","results","postCount","initialTagsState","active","newTag","tagToRemove","initialReaderState","isEnabled","reader","setPostId","combineReducers","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","analytics","eventLogging","store","next","getState","firebase","initializeApp","payload","logEvent","activeTags","selectActiveTags","selectPageNumber","selectPreferences","page_number","active_tags","sort","searchEvent","apiRequests","api","then","isOutOfResults","selectOutOfResults","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","FullScreenCentered","LoadingScreen","Help","React","lazy","Settings","Search","App","loading","GlobalStyles","fallback","path","HELP","SETTINGS","SEARCH","ReactDOM","render","document","getElementById","selectPosts","selectCount","selectFullsceenState","selectFullsceenPostId","selectNumberOfActiveTags","createSelector","keys","selectAliasesAsList","flat","selectHasMoreResults","outOfResults","selectLastPage","Math","ceil","selectAliasesByTagName"],"mappings":"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","file":"static/js/main.9740026c.chunk.js","sourcesContent":["export const GENERAL = 'general'\nexport const CHARACTER = 'character'\nexport const AMBIGUOUS = 'ambiguous'\nexport const ARTIST = 'artist'\nexport const COPYRIGHT = 'copyright'\nexport type TagType = typeof GENERAL | typeof CHARACTER | typeof AMBIGUOUS | typeof ARTIST | typeof COPYRIGHT\n\nexport enum Modifier {\n  PLUS = '+',\n  MINUS = '-',\n  OR = '~',\n}\n\nexport const VIDEO = 'video'\nexport const IMAGE = 'image'\nexport type PostType = typeof VIDEO | typeof IMAGE\n\nexport const PICTURE = 'picture'\nexport const GIF = 'gif'\nexport type MediaType = typeof VIDEO | typeof PICTURE | typeof GIF\n\nexport enum ResultLayout {\n  INFINITE_COLUMN = 'infinite_column',\n  PAGES = 'pages',\n}\n\nexport enum RouteName {\n  SEARCH = '/',\n  HELP = '/help',\n  SETTINGS = '/settings',\n}\n\nexport const INVISIBLE = 'invisible'\nexport const BLOCK = 'block'\nexport const MODIFIER = 'modifier'\nexport const ADD = 'add'\nexport const RED = 'red'\nexport type ButtonType = typeof INVISIBLE | typeof BLOCK | typeof MODIFIER | typeof ADD | typeof RED\n\nexport const SAFE = 'safe'\nexport const QUESTIONABLE = 'questionable'\nexport const EXPLICIT = 'explicit'\nexport type RatingType = typeof SAFE | typeof QUESTIONABLE | typeof EXPLICIT\n\nexport const INFINITE = 'infinite'\nexport const RATED = 'rated'\nexport const RATEDTRESHOLD = 'ratedTreshold'\nexport const ORIGINALS = 'originals'\nexport const COOKIES = 'cookies'\nexport const PRELOAD_VIDEOS = 'preloadVideos'\nexport const TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount'\nexport const RESULTS_LAYOUT = 'resultsLayout'\nexport const PAGE_SIZE = 'pageSize'\n\nexport type PreferenceKey =\n  | typeof INFINITE\n  | typeof RATED\n  | typeof RATEDTRESHOLD\n  | typeof ORIGINALS\n  | typeof COOKIES\n  | typeof PRELOAD_VIDEOS\n  | typeof TAG_SUGGESTIONS_COUNT\n  | typeof RESULTS_LAYOUT\n  | typeof PAGE_SIZE\n\nexport interface SimpleMap<V> {\n  [key: string]: V\n}\n\nexport interface SimpleList<V> {\n  [key: number]: V\n}\n\nexport const NO_OP = () => {}\n","import { css, DefaultTheme } from 'styled-components'\r\n\r\ninterface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer TODO: add shadow\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    transition-property: background-color;\r\n    transition-duration: ${theme.timings.transitionTime};\r\n\r\n    :hover {\r\n      background: ${theme.colors.layerBgHighlight};\r\n    }\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused TODO: rename\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColum() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    gap: ${theme.dimensions.gutter};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  return width && height\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : ''\r\n}\r\n","import TagDataClass from '../data/Tag'\nimport { Modifier, SimpleMap } from '../data/types'\n\nexport class API {\n  static pageSize = 20\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n  activeApi = API.apiUrl2\n\n  constructor() {\n    this.activeApi = API.apiUrl1\n\n    // Failover to apiUrl2\n    fetch(this.activeApi).catch(() => (this.activeApi = API.apiUrl2))\n  }\n\n  async getTags(searchTerm: string, limit: number = API.pageSize) {\n    const res = await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n\n    return await res.json()\n  }\n\n  async getPosts(tags: SimpleMap<TagDataClass>, limit: number = API.pageSize, pageNumber = 0, minScore = 0) {\n    const res = await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit))\n\n    return await res.json()\n  }\n\n  async getAliases(tagName: string) {\n    const res = await fetch(`${this.activeApi}/alias/${tagName}`)\n\n    return await res.json()\n  }\n\n  buildPostUrl(page: number, tags: SimpleMap<TagDataClass>, minScore: number, limit: number = API.pageSize) {\n    const normalTags = Object.values(tags).filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = Object.values(tags).filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    let tagString = normalTags\n      .map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)\n      .join(' + ')\n\n    if (orTags.length > 0) {\n      tagString += '+ ( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )'\n    }\n\n    if (tagString) {\n      url += `&tags=${tagString}`\n    }\n\n    if (minScore > 0) {\n      url += `+${encodeURIComponent('score:>=' + minScore)}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import { RatingType, PostType } from './types'\nimport TagDataClass from './Tag'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: string\n  change: string\n\n  constructor(\n    id: number,\n    score: number,\n    rating: string,\n    source: string,\n    tags: TagDataClass[],\n    media_type: string,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating as RatingType\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type as PostType\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = created_at\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/Post'\nimport TagDataClass from '../data/Tag'\nimport { TagType, Modifier, RatingType } from '../data/types'\n\ninterface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\ninterface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, primaryHover } from '../../styled/mixins'\n\nexport const TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n\n    transition: all ${theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    filter: ${theme.shadow.drop};\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-in-out;\n    }\n\n    :hover {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)(\n  ({ theme }) => css`\n    ${primaryHover({ theme })}\n  `\n)\n\nexport const BlockButton = styled(RedButton)(\n  ({ theme }) => css`\n    width: 100%;\n  `\n)\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-left-width: 0;\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AnyAction } from 'redux'\n\nexport default function useAction<T extends () => AnyAction>(actionCreator: T) {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(actionCreator()), [actionCreator, dispatch])\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst StyledSvg = styled.svg(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: ${theme.dimensions.bigSpacing};\n  `\n)\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      version='1.1'\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='26' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='46' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import { PreferenceKey } from '../data/types'\nimport TagDataClass from '../data/Tag'\nimport PostDataClass from '../data/Post'\n\n/////////////////////////////////////////////////////////\n\nexport const ADD_TAG = 'R34_ADD_TAG'\nexport const REMOVE_TAG = 'R34_REMOVE_TAG'\nexport const ADD_ALIASES = 'R34_ADD_ALIASES'\nexport const ADD_POSTS = 'R34_ADD_POSTS'\nexport const SET_POSTS = 'R34_SET_POSTS'\nexport const SET_OPTION = 'R34_SET_OPTION'\nexport const GET_RESULTS = 'R34_GET_RESULTS'\nexport const GET_MORE_RESULTS = 'R34_GET_MORE_RESULTS'\nexport const ALLOW_COOKIES = 'R34_ALLOW_COOKIES'\nexport const ENTER_FULLSCREEN = 'R34_ENTER_FULLSCREEN'\nexport const EXIT_FULLSCREEN = 'R34_EXIT_FULLSCREEN'\nexport const SET_FULLSCREEN_POST = 'R34_SET_FULLSCREEN_POST'\n\n/////////////////////////////////////////////////////////\n\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\ninterface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: string\n  pageNumber?: number\n}\n\ninterface SetOptionAction {\n  type: typeof SET_OPTION\n  key: PreferenceKey\n  value: any\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface AllowCookiesAction {\n  type: typeof ALLOW_COOKIES\n  value: boolean\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\n/////////////////////////////////////////////////////////\n\nexport const addTag = (tag: TagDataClass) => ({\n  type: ADD_TAG,\n  tag,\n})\n\nexport const removeTag = (tag: TagDataClass) => ({\n  type: REMOVE_TAG,\n  tag,\n})\n\nexport const addAliases = (aliases: TagDataClass[], forTag: string) => ({\n  type: ADD_ALIASES,\n  aliases,\n  forTag,\n})\n\nexport const addPosts = (posts: PostDataClass[]) => ({\n  type: ADD_POSTS,\n  posts,\n})\n\nexport const setPosts = (posts: PostDataClass[], count: string, pageNumber: number = 0) => ({\n  type: SET_POSTS,\n  posts,\n  count,\n  pageNumber,\n})\n\nexport const setOption = (key: PreferenceKey, value: any) => ({\n  type: SET_OPTION,\n  key,\n  value,\n})\n\nexport const getResults = (pageNumber: number = 0) => ({\n  type: GET_RESULTS,\n  pageNumber,\n})\n\nexport const getMoreResults = () => ({\n  type: GET_MORE_RESULTS,\n})\n\nexport const allowCookiesAction = () => ({\n  type: ALLOW_COOKIES,\n  value: true,\n})\n\nexport const enterFullscreen = (postId: number) => ({\n  type: ENTER_FULLSCREEN,\n  postId,\n})\n\nexport const exitFullscreen = () => ({\n  type: EXIT_FULLSCREEN,\n})\n\nexport const setFullScreenPost = (postId: number) => ({\n  type: SET_FULLSCREEN_POST,\n  postId,\n})\n\n/////////////////////////////////////////////////////////\n\nexport type AppAction =\n  | AddTagAction\n  | RemoveTagAction\n  | AddAliasesAction\n  | AddPostsAction\n  | SetPostsAction\n  | SetOptionAction\n  | GetResultsAction\n  | GetMoreResultsAction\n  | AllowCookiesAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | SetFullScreenPostAction\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport { useSelector } from 'react-redux'\nimport { allowCookiesAction } from '../../redux/actions'\nimport { selectCookies } from '../../redux/selectors'\nimport useAction from '../../hooks/useAction'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    color: ${theme.colors.backgroundColor2};\n    background: ${theme.colors.layerBgSolid};\n\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const cookies = useSelector(selectCookies)\n  const onClick = useAction(allowCookiesAction)\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={onClick} aria-label='Allow Cookies'>\n        Got it\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n        text-decoration: underline;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.backgroundColor2};\n      background-color: ${theme.colors.backgroundColor};\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    ::-webkit-scrollbar {\n      height: 8px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: transparent;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      background: ${theme.colors.layerBg};\n      border-radius: 1000px;\n\n      :hover {\n        background: ${theme.colors.layerBgHighlight};\n      }\n    }\n  `\n)\n","const theme = {\n  dimensions: {\n    borderRadius: '3px',\n    borderWidth: '2px',\n    spacing: '4px',\n    bigSpacing: '8px',\n    hugeSpacing: '16px',\n    gutter: '8px',\n    blockHeight: '32px',\n    bodyWidth: '1000px',\n  },\n  colors: {\n    accentColor: '#ee3344',\n    hoverAccent: '#ee3344',\n    backgroundColor: '#121212',\n    backgroundColor2: '#fff',\n    subduedText: '#ffffff80',\n    layerBg: '#ffffff11',\n    layerBgSolid: '#222222',\n    layerBgHighlight: '#ffffff22',\n  },\n  shadow: {\n    box: 'box-shadow: 0 0 8px #000',\n    drop: 'drop-shadow(0 0 4px #000)',\n  },\n  timings: {\n    transitionTime: '0.2s',\n    longTransitionTime: '0.2s',\n  },\n  misc: {\n    layer: '#ffffff11; :hover { background: #ffffff16;} transition: background-color 0.2s ease-in-out',\n  },\n  fontSizes: {\n    content: '15px',\n    bigTitle: '24px',\n  },\n}\n\nexport default theme\n\nexport type ThemeType = typeof theme\n","import produce from 'immer'\nimport { PreferenceKey, COOKIES, ResultLayout } from '../../data/types'\nimport { AppAction, SET_OPTION, ALLOW_COOKIES } from '../actions'\n\nexport interface PreferencesState {\n  infinite: boolean\n  rated: boolean\n  ratedTreshold: number\n  originals: boolean\n  cookies: boolean\n  preloadVideos: boolean\n  tagSuggestionsCount: number\n  resultsLayout: ResultLayout\n  pageSize: number\n}\n\nexport const initialPreferencesState: PreferencesState = {\n  infinite: true,\n  rated: false,\n  ratedTreshold: 1,\n  originals: false,\n  cookies: false,\n  preloadVideos: false,\n  tagSuggestionsCount: 20,\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\n  pageSize: 20,\n}\n\nfunction setOption<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\n  return produce(state, (draft) => {\n    draft[key] = value\n  })\n}\n\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\n  switch (action.type) {\n    case SET_OPTION:\n      return setOption(state, action.key, action.value)\n    case ALLOW_COOKIES:\n      return setOption(state, COOKIES, action.value)\n    default:\n      return state\n  }\n}\n\nexport default preferences\n","import produce from 'immer'\nimport PostDataClass from '../../data/Post'\nimport { SET_POSTS, ADD_POSTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nexport const initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: string, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = Number(postCount)\n    draft.pageNumber = pageNumber\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/Tag'\nimport { SimpleMap } from '../../data/types'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES } from '../actions'\n\nexport interface TagsState {\n  active: SimpleMap<TagDataClass>\n  aliases: SimpleMap<TagDataClass[]>\n}\n\nexport const initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nexport const initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\n\nexport default combineReducers({ tags, results, preferences, reader })\n","import { Modifier, SimpleMap } from '../data/types'\nimport TagDataClass from '../data/Tag'\nimport { PreferencesState } from '../redux/reducers/preferences'\n\nconst SEARCH = 'r34_search'\nconst ADD_TAG = 'r34_add_tag'\n\ninterface SearchEvent {\n  id: typeof SEARCH\n  payload: {\n    tags: string[]\n  }\n}\n\ninterface TagActivateEvent {\n  id: typeof ADD_TAG\n  payload: {\n    name: string\n    modifier: Modifier | undefined\n  }\n}\n\nexport const searchEvent = (\n  activeTags: SimpleMap<TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n) => ({\n  id: SEARCH,\n  payload: {\n    active_tags: Object.values(activeTags)\n      .map((tag) => `${tag.modifier}${tag.name}`)\n      .sort(),\n    page_number,\n    preferences,\n  },\n})\n\nexport const addTagEvent = (tag: TagDataClass) => ({\n  id: ADD_TAG,\n  payload: {\n    name: tag.name,\n    modifier: tag.modifier,\n  },\n})\n\nexport type EventType = SearchEvent | TagActivateEvent\n","import { ADD_TAG, AppAction, SET_POSTS, ADD_POSTS } from '../actions'\nimport firebase from 'firebase/app'\nimport 'firebase/analytics'\nimport { addTagEvent, searchEvent } from '../../analytics/events'\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\nimport { MiddlewareAPI, Dispatch } from 'redux'\n\nconst config = {\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\n  authDomain: 'r34-react.firebaseapp.com',\n  databaseURL: 'https://r34-react.firebaseio.com',\n  projectId: 'r34-react',\n  storageBucket: 'r34-react.appspot.com',\n  messagingSenderId: '844749417844',\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\n  measurementId: 'G-27J3QXZ8YR',\n}\n\nlet firebaseApp: firebase.app.App\nlet analytics: firebase.analytics.Analytics\n\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\n  const cookies = selectCookies(store.getState())\n\n  if (cookies) {\n    if (!firebaseApp) {\n      firebaseApp = firebase.initializeApp(config)\n      analytics = firebaseApp.analytics()\n    }\n\n    if (action.type === ADD_TAG) {\n      const { id, payload } = addTagEvent(action.tag)\n      analytics.logEvent<typeof id>(id, payload)\n    }\n\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\n      const activeTags = selectActiveTags(store.getState())\n      const pageNumber = selectPageNumber(store.getState())\n      const preferences = selectPreferences(store.getState())\n      const { id, payload } = searchEvent(activeTags, action.type === SET_POSTS ? 0 : pageNumber + 1, preferences)\n      analytics.logEvent<typeof id>(id, payload)\n    }\n  }\n\n  next(action)\n}\n\nexport default eventLogging\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport { AppAction, GET_RESULTS, GET_MORE_RESULTS, addPosts, setPosts } from '../actions'\nimport api from '../../misc/api'\nimport { preparePost } from '../../misc/prepare'\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectOutOfResults } from '../selectors'\n\nconst apiRequests = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(store.getState())\n    const { pageSize } = selectPreferences(store.getState())\n    const { rated, ratedTreshold } = selectPreferences(store.getState())\n\n    api.getPosts(activeTags, pageSize, action.pageNumber, rated ? ratedTreshold : 0).then((res) => {\n      store.dispatch(setPosts(res.posts.map(preparePost), res.count, action.pageNumber))\n    })\n  }\n\n  const isOutOfResults = selectOutOfResults(store.getState())\n  if (action.type === GET_MORE_RESULTS && !isOutOfResults) {\n    const activeTags = selectActiveTags(store.getState())\n    const { pageSize } = selectPreferences(store.getState())\n    const pageNumber = selectPageNumber(store.getState())\n    const { rated, ratedTreshold } = selectPreferences(store.getState())\n\n    api.getPosts(activeTags, pageSize, pageNumber + 1, rated ? ratedTreshold : 0).then((res) => {\n      store.dispatch(addPosts(res.posts.map(preparePost)))\n    })\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers'\nimport eventLogging from './middleware/eventLogging'\nimport apiRequests from './middleware/apiRequests'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst persistConfig = {\n  key: 'appstate',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(eventLogging, apiRequests)))\n\nexport const persistor = persistStore(store)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport CookieConfirmation from './components/features/CookieConfirmation'\nimport GlobalStyles from './GlobalStyles'\nimport theme from './misc/theme'\nimport { persistor, store } from './redux/store'\nimport { RouteName } from './data/types'\nimport LoadingScreen from './components/pages/LoadingScreen'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyles />\n          <HashRouter>\n            <Suspense fallback={<LoadingScreen />}>\n              <Switch>\n                <Route path={RouteName.HELP}>\n                  <Help />\n                </Route>\n                <Route path={RouteName.SETTINGS}>\n                  <Settings />\n                </Route>\n                <Route path={RouteName.SEARCH}>\n                  <Search />\n                </Route>\n              </Switch>\n            </Suspense>\n            <CookieConfirmation />\n          </HashRouter>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n","import { createSelector } from 'reselect'\nimport { PreferencesState } from './reducers/preferences'\nimport { ReaderState } from './reducers/reader'\nimport { ResultsState } from './reducers/results'\nimport { TagsState } from './reducers/tags'\n\ninterface RootState {\n  results: ResultsState\n  preferences: PreferencesState\n  tags: TagsState\n  reader: ReaderState\n}\n\n// Simple selectors\nexport const selectActiveTags = (state: RootState) => state.tags.active\nexport const selectResults = (state: RootState) => state.results\nexport const selectPosts = (state: RootState) => state.results.posts\nexport const selectCount = (state: RootState) => state.results.count\nexport const selectPageNumber = (state: RootState) => state.results.pageNumber\nexport const selectPreferences = (state: RootState) => state.preferences\nexport const selectInfinite = (state: RootState) => state.preferences.infinite\nexport const selectOriginals = (state: RootState) => state.preferences.originals\nexport const selectRated = (state: RootState) => state.preferences.rated\nexport const selectRatedThreshold = (state: RootState) => state.preferences.ratedTreshold\nexport const selectCookies = (state: RootState) => state.preferences.cookies\nexport const selectFullsceenState = (state: RootState) => state.reader.isEnabled\nexport const selectFullsceenPostId = (state: RootState) => state.reader.postId\nexport const selectAliases = (state: RootState) => state.tags.aliases\nexport const selectPageSize = (state: RootState) => state.preferences.pageSize\n\n// Memoized selectors\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\n\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\nexport const selectLastPage = createSelector(\n  selectCount,\n  selectPageSize,\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\n)\n\n// Parameterized selectors\nexport const selectAliasesByTagName = (tagName: string) => (state: RootState) => state.tags.aliases[tagName]\n"],"sourceRoot":""}