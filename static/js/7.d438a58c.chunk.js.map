{"version":3,"sources":["components/common/SmallInput.tsx","components/layout/infinite/InfiniteColumn.tsx","components/post/Rating.tsx","components/post/Score.tsx","components/post/source/FallbackSource.tsx","components/common/ColoredIconLink.tsx","components/post/source/LinkSource.tsx","components/post/source/SpecialLinkSource.tsx","components/post/source/Source.tsx","components/post/Details.tsx","components/player/FlexVideo.tsx","components/styled/animations.tsx","components/player/Overlay.tsx","components/player/media/Video.tsx","components/player/media/Gif.tsx","components/player/media/Picture.tsx","components/player/Player.tsx","components/player/utils.ts","components/post/Post.tsx","components/widgets/SearchButton.tsx","components/widgets/ActiveTags.tsx","components/features/Config.tsx","components/widgets/KofiButton.tsx","components/common/RandomTip.tsx","components/widgets/SearchPlaceholder.tsx","components/widgets/ResultsTitle.tsx","components/layout/LayoutHeader.tsx","components/layout/LayoutOutOfItems.tsx","components/layout/LayoutLoadingItem.tsx","components/layout/pages/PageNavigation.tsx","components/layout/pages/PageLayout.tsx","components/reader/Reader.tsx","components/pages/Search.tsx"],"names":["StyledInput","styled","input","theme","css","defaultBorder","colors","backgroundColor2","defaultBlock","SmallNumberInput","props","value","onSubmit","useState","toString","internalValue","setInternalValue","useEffect","onChange","useCallback","event","target","onBlur","Number","onKeyDown","key","type","InifinteColumn","Header","items","LoadingItem","hasMoreRows","ItemComponent","loadMore","OutOfItems","isLoading","setLoading","listRef","setListRef","cache","useMemo","CellMeasurerCache","fixedWidth","prependedRows","rowCount","length","isRowLoaded","index","listener","measureAllRows","recomputeRowHeights","forceUpdateGrid","window","addEventListener","removeEventListener","rowRenderer","parent","style","columnIndex","rowIndex","measure","registerChild","virtualRef","onLoad","console","warn","loadMoreRows","params","Promise","reject","resolve","setTimeout","onRowsRendered","ref","child","deferredMeasurementCache","overscanRowCount","rowHeight","width","innerWidth","height","innerHeight","Rating","FlexPair","color","toUpperCase","Score","FallbackSource","ColoredIconLink","a","flexRowWithGap","DefaultLinkSource","useTheme","accentColor","title","formatSource","href","rel","className","SpecialLinkSource","icon","extractFirstElement","split","sources","path","startsWith","extractSecondElement","Source","parseUrl","links","map","link","source","Object","keys","find","includes","getTitle","Bar","div","layer","dimensions","gutter","flexRowGap","hugeSpacing","borderRadius","DetailsTagList","TagList","Details","rating","score","tags","tagsForRendering","listToMap","loadAliases","FlexVideo","video","flexMedia","preserveAspectRatio","fadeOut","keyframes","Wrapper","isVisible","ProgressBar","OverlayButton","InvisButton","bigSpacing","FullScreenButton","LinkList","OpenExternalButton","PlayButton","PreviousButton","NextButton","DownloadButton","LengthDisplay","span","Overlay","togglePlay","NO_OP","isPaused","isPlayable","currentTime","duration","externalSrc","mediaRef","postId","posts","useSelector","selectPosts","useToggle","toggleVisible","isReaderOpen","selectFullsceenState","downloadSrc","selectPostById","big_src","onDownloadClick","stopPropagation","download","dispatch","useDispatch","onExpandClick","preventDefault","exitFullscreen","enterFullscreen","selectedIndex","selectFullScreenIndex","selectPostAt","postAtindex","setFullScreenPost","id","hasNext","selectNext","hasPrevious","selectPrevious","onClick","aria-label","size","isNaN","formatDuration","Video","src","videoRef","setVideoRef","Date","now","setTime","intervalId","setIntervalId","play","setInterval","pause","clearInterval","paused","preload","selectPreloadVideos","controls","loop","onLoadedMetadata","Gif","thumbnail_src","setPaused","usedSource","FlexImage","alt","loading","Picture","getMedia","PostType","VIDEO","MediaType","GIF","PICTURE","getMediaType","Player","URL","searchParams","get","getUrlParameter","MediaComponent","ItemWrapper","PositonWrapper","bodyWidth","PostWrapper","getCorrectSource","loadOriginal","small_src","Post","media_type","collapsed","toggleCollapsed","originals","selectOriginals","media_src","role","SearchButton","search","useAction","getResults","ActiveTags","activeTags","selectActiveTags","numberOfActiveTags","selectNumberOfActiveTags","ConfigWrapper","section","flexColumn","centeredMaxWidth","Config","htmlFor","Surface","TagSelector","Options","Container","AButton","layerBg","Text","Image","img","KofiButton","label","tips","Span","Faded","RandomTip","tip","Math","floor","random","Placeholder","flexColumnGap","SearchPlaceholder","ResultsTitle","fullNumber","toggleFullNumber","count","selectCount","formattedCount","toLocaleString","formatCount","LayoutHeader","Div","StyledSurface","StyledImage","LayoutOutOfItems","aliases","selectAliasesAsList","aliasesForRendering","reduce","result","alias","name","outOfResultsPicture","padding","LayoutLoadingItem","Loading","PageRow","PageNumber","RedButton","CurrentNumber","PageNavigation","currentPage","loadPage","lastPage","selectLastPage","loadSpecificPage","newPage","loadFirst","loadLast","loadPrevious","loadNext","FlexColumn","BaseFlexColumn","PageLayout","header","scrollAndLoadPage","document","getElementsByClassName","scrollIntoView","item","FullScreenDiv","backgroundColor","Reader","fullScreenPost","selectFullScreenPost","fullScreenIndex","getMoreResults","useThrottledEffect","Search","hasMorePosts","selectHasMoreResults","resultsLayout","selectResultsLayout","pageSize","selectPageSize","pageNumber","selectPageNumber","ResultLayout","INFINITE_COLUMN","hasMorePages"],"mappings":"sMAIA,MAAMA,EAAcC,IAAOC,OACzB,EAAGC,WAAYC,YAAd,IAAD,kHAEIC,YAAc,CAAEF,UACEA,EAAMG,OAAOC,iBAC/BC,YAAa,CAAEL,aAsCd,SAASM,EAAiBC,GAAiC,MACxDC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SADgD,EAErBC,mBAASF,EAAMG,YAFM,mBAExDC,EAFwD,KAEzCC,EAFyC,KAI/DC,qBAAU,KACJN,GACFK,EAAiBL,EAAMG,cAExB,CAACH,IAEJ,MAAMO,EAAiDC,uBAAaC,IAClEJ,EAAiBI,EAAMC,OAAOV,SAC7B,IAEGW,EAASH,uBAAY,KACzBP,EAASW,OAAOR,MACf,CAACA,EAAeH,IAEbY,EAAkCL,uBACrCC,IACmB,UAAdA,EAAMK,KACRb,EAASW,OAAOR,MAGpB,CAACA,EAAeH,IAGlB,OAAO,cAACZ,EAAD,CAAa0B,KAAK,SAASf,MAAOI,EAAeG,SAAUA,EAAUI,OAAQA,EAAQE,UAAWA,M,oIC1D1F,SAASG,EAAkBjB,GAAgC,MAEtEkB,EASElB,EATFkB,OAFqE,EAWnElB,EARFmB,aAHqE,MAG7D,GAH6D,EAIrEC,EAOEpB,EAPFoB,YACAC,EAMErB,EANFqB,YACAC,EAKEtB,EALFsB,cACAC,EAIEvB,EAJFuB,SACAC,EAGExB,EAHFwB,WACAC,EAEEzB,EAFFyB,UACAC,EACE1B,EADF0B,WAVqE,EAazCvB,mBAAsB,MAbmB,mBAahEwB,EAbgE,KAavDC,EAbuD,KAejEC,EAAQC,mBACZ,IACE,IAAIC,IAAkB,CACpBC,YAAY,KAEhB,IAGIC,EAAgBf,EAAS,EAAI,EAG7BgB,EAAWf,EAAMgB,OAASF,EAFZ,EAIdG,EAAc3B,uBAClB,EAAG4B,WAA+BA,EAAQJ,EAAgBd,EAAMgB,QAAUd,EAAc,EAAI,IAC5F,CAACA,EAAaF,EAAMgB,OAAQF,IAG9B1B,qBAAU,KACR,GAAIoB,EAAS,CACX,MAAMW,EAAW,KACfX,EAAQY,iBACRZ,EAAQa,sBACRb,EAAQc,mBAKV,OAFAC,OAAOC,iBAAiB,SAAUL,GAE3B,KACLI,OAAOE,oBAAoB,SAAUN,OAGxC,CAACX,IAEJ,MAAMkB,EAAcpC,uBAClB,EAAG4B,QAAOtB,MAAK+B,SAAQC,WAEnB,cAAC,IAAD,CAAclB,MAAOA,EAAOmB,YAAa,EAAaC,SAAUZ,EAAOS,OAAQA,EAA/E,SACG,EAAGI,UAASC,mBAEPjC,GAAUmB,EAAQJ,EACb,cAACf,EAAD,CAAQ6B,MAAOA,EAAOK,WAAYD,EAAeE,OAAQH,IAI9Db,EAAQJ,EAAgBd,EAAMgB,OAE9B,cAACb,EAAD,aACEyB,MAAOA,EACPK,WAAYD,EACZE,OAAQH,GACJ/B,EAAMkB,EAAQJ,KAMpBI,EAAQJ,EAAgBd,EAAMgB,OAhDxB,EAiDDd,GAAeI,EACpB,cAACL,EAAD,CAAa2B,MAAOA,EAAOK,WAAYD,EAAeE,OAAQH,IAC5D1B,GAAcL,EAAMgB,OAAS,EAC/B,cAACX,EAAD,CAAYuB,MAAOA,EAAOK,WAAYD,EAAeE,OAAQH,IAE7D,yBAIJI,QAAQC,KAAK,0CAA2ClB,GACjD,OA/BsCtB,IAoCrD,CAACc,EAAOX,EAAQe,EAAed,EAAOG,EAAeD,EAAaI,EAAWL,EAAaI,IAmB5F,OACE,cAAC,IAAD,CAAgBY,YAAaA,EAAaoB,aAjBtBC,GAChBhC,IAAcJ,EACTqC,QAAQC,OAAO,IAGxBjC,GAAW,GACXH,IAEO,IAAImC,SAASE,IAClBC,YAAW,KACTnC,GAAW,GACXkC,EAAQ,KACP,SAKiE1B,SAAUA,EAAhF,SACG,EAAG4B,iBAAgBX,mBAMhB,cAAC,IAAD,CACEY,IAN6BC,IAC/BpC,EAAWoC,GACXb,EAAca,IAKZF,eAAgBA,EAChBjB,YAAaA,EACboB,yBAA0BpC,EAC1BqC,iBAAkB,GAClBhC,SAAUf,EAAMgB,OAASF,EAjGf,EAkGVkC,UAAWtC,EAAMsC,UACjBC,MAAO1B,OAAO2B,WACdC,OAAQ5B,OAAO6B,gB,kDCvIZ,SAASC,EAAOxE,GAC7B,OACE,eAACyE,EAAA,EAAD,WACE,cAAC,IAAD,CAAYC,MAAM,UAClB,+BAAO1E,EAAMC,MAAM,GAAG0E,mBCLb,SAASC,EAAM5E,GAC5B,OACE,eAACyE,EAAA,EAAD,WACE,cAAC,IAAD,CAAWC,MAAM,UACjB,+BAAO1E,EAAMC,WCHJ,SAAS4E,GAAe,MAAE5E,IACvC,OACE,eAACwE,EAAA,EAAD,WACE,cAAC,IAAD,CAAYC,MAAM,UAClB,+BAAOzE,O,wBCKE6E,MAXSvF,IAAOwF,GAC7B,EAAGL,QAAOjF,WAAYC,YAArB,IAAD,4CACIsF,YAAe,CAAEvF,UACjBiF,EACEhF,YADG,qEAEQgF,GAEX,MCHO,SAASO,GAAkB,MAAEhF,IAC1C,MAAMyE,EAAQQ,cAAWtF,OAAOuF,YAC1BC,EAAQC,YAAapF,GAE3B,OACE,eAAC,EAAD,CAAiByE,MAAOA,EAAOY,KAAMrF,EAAOU,OAAO,SAAS4E,IAAI,sBAAsBC,UAAU,SAAhG,UACE,cAAC,IAAD,CAAUd,MAAOA,IAChBU,KCHQ,SAASK,EAAkBzF,GAAgC,MAChEC,EAA8BD,EAA9BC,MAAOyE,EAAuB1E,EAAvB0E,MAAOgB,EAAgB1F,EAAhB0F,KAAMN,EAAUpF,EAAVoF,MAC5B,OACE,eAAC,EAAD,CAAiBE,KAAMrF,EAAOU,OAAO,SAAS4E,IAAI,sBAAsBC,UAAU,SAASd,MAAOA,EAAlG,UACE,cAAC,IAAD,CAAWA,MAAOA,EAAOgB,KAAMA,IAC9BN,KCNP,SAASO,EAAoB1F,GAC3B,OAAOA,EAAM2F,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAStD,MAAMC,EAAyC,CAC7C,eAAgB,CAAC,UAAW,aAAe5F,GAAU0F,EAAoB1F,EAAM2F,MAAM,gBAAgB,KACrG,aAAc,CAAC,UAAW,QAAS,IAAM,SACzC,eAAgB,CACd,UACA,aACC3F,IACC,MAAM6F,EAAO7F,EAAM2F,MAAM,gBAAgB,GAEzC,OAAOE,EAAKC,WAAW,UAf7B,SAA8B9F,GAC5B,OAAOA,EAAM2F,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAcbI,CAAqBF,GAAQH,EAAoBG,KAGxF,kBAAmB,CAAC,UAAW,gBAAkB7F,GAAU0F,EAAoB1F,EAAM2F,MAAM,mBAAmB,KAC9G,kBAAmB,CAAC,UAAW,aAAc,IAAM,YAGtC,SAASK,GAAO,MAAEhG,IAC/B,GAAIiG,YAASjG,GAAQ,CAEnB,MAAMkG,EAAQlG,EAAM2F,MAAM,KAC1B,OACE,mCACGO,EAAMC,KAAKC,IACV,MAAMC,EAASC,OAAOC,KAAKX,GAASY,MAAM1F,GAAQsF,EAAKK,SAAS3F,KAEhE,GAAIuF,EAAQ,CAAC,MAAD,cACsBT,EAAQS,GAD9B,GACH5B,EADG,KACIgB,EADJ,KACUiB,EADV,KAGV,OAAO,cAAClB,EAAD,CAA8BxF,MAAOoG,EAAM3B,MAAOA,EAAOgB,KAAMA,EAAMN,MAAOuB,EAASN,IAA7DA,GAGjC,OAAO,cAACpB,EAAD,CAA8BhF,MAAOoG,GAAbA,QAMvC,OAAO,cAACxB,EAAD,CAAgB5E,MAAOA,I,QC9ChC,MAAM2G,EAAMrH,IAAOsH,KACjB,EAAGpH,WAAYC,YAAd,MAAD,mPAOIoH,YAAM,CAAErH,UACCA,EAAMsH,WAAWC,OAC1BC,YAAWxH,EAAMsH,WAAWG,aACTzH,EAAMsH,WAAWI,aAAgB1H,EAAMsH,WAAWI,gBAIrEC,EAAiB7H,YAAO8H,IAAP9H,EACrB,EAAGE,WAAYC,YAAd,MAAD,8DAEaD,EAAMsH,WAAWC,UAWjB,SAASM,EAAQtH,GAAsB,MAC5CuH,EAAgCvH,EAAhCuH,OAAQC,EAAwBxH,EAAxBwH,MAAOlB,EAAiBtG,EAAjBsG,OAAQmB,EAASzH,EAATyH,KACzBC,EAAmB5F,mBAAQ,IAAM6F,YAAUF,EAAM,SAAS,CAACA,IAEjE,OACE,qCACE,eAACb,EAAD,aACKW,GAAU,cAAC/C,EAAD,CAAQvE,MAAOsH,MACzBC,GAAS,cAAC5C,EAAD,CAAO3E,MAAOuH,MACvBlB,GAAU,cAACL,EAAD,CAAQhG,MAAOqG,OAE9B,cAACc,EAAD,CAAgBK,KAAMC,EAAkBE,aAAa,O,qBC1C5CC,I,IAAAA,EANGtI,IAAOuI,MAAV,gEACXC,IACAC,K,QCHG,MAAMC,EAAUC,YAAH,4FAUMA,YAAH,6f,6CCGvB,MAAMC,GAAU5I,IAAOsH,KACpB7G,GAAkCN,YAAlC,MAAD,0LAOKM,EAAMoI,UAKL,GAJA1I,YADF,sGAGiBuI,MAMjBI,GAAc9I,IAAOsH,KACxB7G,GAAUN,YAAV,IAAD,gGAGsBM,EAAMP,MAAMG,OAAOuF,eAIrCmD,GAAgB/I,YAAOgJ,KAAPhJ,EACnBS,GAAUN,YAAV,IAAD,+FAGaM,EAAMP,MAAMsH,WAAWyB,cAIhCC,GAAmBlJ,YAAO+I,GAAP/I,CAAH,+EAKhBmJ,GAAWnJ,IAAOsH,IAAV,+HAOR8B,GAAqBpJ,YAAO+I,GAAP/I,CAAH,0BAElBqJ,GAAarJ,YAAO+I,GAAP/I,CAAH,iFAKVsJ,GAAiBtJ,IAAOsH,IAAV,mDAIdiC,GAAavJ,IAAOsH,IAAV,mDAIVkC,GAAiBxJ,YAAO+I,GAAP/I,CAAH,0BAEdyJ,GAAgBzJ,IAAO0J,MAC1BjJ,GAAUN,YAAV,IAAD,sKAKaM,EAAMP,MAAMsH,WAAWC,OACxBhH,EAAMP,MAAMsH,WAAWC,UAoHtBkC,OArGf,SAAiBlJ,GAAsB,MAAD,EAUhCA,EARFmJ,kBAFkC,MAErBC,IAFqB,IAUhCpJ,EAPFqJ,gBAHkC,WAUhCrJ,EANFsJ,kBAJkC,WAUhCtJ,EALFuJ,mBALkC,MAKpB,EALoB,IAUhCvJ,EAJFwJ,gBANkC,MAMvB,KANuB,EAOlCC,EAGEzJ,EAHFyJ,YACAC,EAEE1J,EAFF0J,SACAC,EACE3J,EADF2J,OAGIC,EAAQC,YAAYC,KAZU,EAaDC,cAbC,mBAa7B3B,EAb6B,KAalB4B,EAbkB,KAc9BC,EAAeJ,YAAYK,KAI3BC,EAFON,YAAYO,YAAeT,IAEfU,QAEnBC,EAAqC7J,uBACxCC,IACCA,EAAM6J,kBACNC,YAASL,KAEX,CAACA,IAGGM,EAAWC,cACXC,EAAmClK,uBACtCC,IACCA,EAAMkK,iBACNlK,EAAM6J,kBAEJE,EADER,EACOY,eAEAC,aAAgBnB,MAG7B,CAACc,EAAUR,EAAcN,IAGrBoB,EAAgBlB,YAAYmB,KAE5BC,EAAexK,uBAClB4B,IACC,MAAM6I,EAActB,EAAMvH,GAEtB6I,GACFT,EAASU,aAAkBD,EAAYE,OAG3C,CAACX,EAAUb,IAGPyB,EAAUN,EAAgB,EAAInB,EAAMzH,OACpCmJ,EAAa7K,uBAAY,KAC7BwK,EAAaF,EAAgB,KAC5B,CAACE,EAAcF,IAEZQ,EAAcR,EAAgB,EAC9BS,EAAiB/K,uBAAY,KACjCwK,EAAaF,EAAgB,KAC5B,CAACE,EAAcF,IAElB,OACE,eAAC5C,GAAD,CAASC,UAAWiB,GAAYjB,EAAWqD,QAASzB,EAApD,UACE,cAACvB,GAAD,CAAkBgD,QAASd,EAAee,aAAW,kBAArD,SACGzB,EAAe,cAAC,IAAD,CAAWvF,MAAM,UAAa,cAAC,IAAD,CAAYA,MAAM,YAGlE,eAACgE,GAAD,WACE,cAACC,GAAD,UACE,mBAAGrD,KAAMmE,EAAa9I,OAAO,SAAS4E,IAAI,sBAAsBmG,aAAW,kBAA3E,SACE,cAAC,IAAD,CAAkBhH,MAAM,cAI5B,cAACqE,GAAD,CAAgB2C,aAAW,iBAAiBD,QAASnB,EAAiBlF,MAAO+E,EAA7E,SACE,cAAC,IAAD,CAAczF,MAAM,eAIvB4E,GACC,qCACE,cAACV,GAAD,CAAY6C,QAAStC,EAAYuC,aAAW,aAA5C,SACGrC,EAAW,cAAC,IAAD,CAAU3E,MAAM,QAAQiH,KAAM,KAAS,cAAC,IAAD,CAAWjH,MAAM,QAAQiH,KAAM,SAEjFnC,KAAcD,GAAe,cAAClB,GAAD,CAAatF,MAAO,CAAEqB,MAAM,GAAD,OAAMmF,EAAcC,EAAY,IAAhC,QAE1DE,IAAakC,MAAMlC,EAASF,WAAa,cAACR,GAAD,UAAgB6C,YAAenC,EAASF,YACjFC,EAAY/C,SAAS,SAAW,cAACsC,GAAD,qBAIpCiB,GAAgBsB,GAAe,cAAC1C,GAAD,CAAgB4C,QAASD,IACxDvB,GAAgBoB,GAAW,cAACvC,GAAD,CAAY2C,QAASH,QC3LxC,SAASQ,GAAM9L,GAAoB,MACxC+L,EAA4D/L,EAA5D+L,IADuC,EACqB/L,EAAvDqD,cADkC,MACzB+F,IADyB,EAClBK,EAAuCzJ,EAAvCyJ,YAAaE,EAA0B3J,EAA1B2J,OAAQvF,EAAkBpE,EAAlBoE,MAAOE,EAAWtE,EAAXsE,OADV,EAGfnE,mBAAkC,MAHnB,mBAGxC6L,EAHwC,KAG9BC,EAH8B,OAK3B9L,mBAAS+L,KAAKC,OAAzBC,EALsC,sBAMXjM,mBAAgC,MANrB,mBAMxCkM,EANwC,KAM5BC,EAN4B,KAQzCC,EAAO9L,uBAAY,KACvBuL,GAAYA,EAASO,OAGrB,MAAMnB,EAAKoB,aAAY,KACrBJ,EAAQF,KAAKC,SACZ,IAEHG,EAAclB,KACb,CAACY,IAEES,EAAQhM,uBAAY,KACxBuL,GAAYA,EAASS,QACrBC,cAAcL,GACdC,EAAc,QACb,CAACN,EAAUK,IAERlD,EAAa1I,uBAChBC,IACCA,EAAM6J,kBACNyB,IAAaA,EAASW,OAASJ,IAASE,OAE1C,CAACT,EAAUO,EAAME,IAGbG,EAAU/C,YAAYgD,KAAuB,OAAS,WAE5D,OACE,qCACE,cAAC,EAAD,CACEC,UAAU,EACVC,MAAI,EACJH,QAASA,EACT7I,IAAKkI,EACLe,iBAAkB3J,EAClBe,MAAOA,EACPE,OAAQA,EAPV,SASE,wBAAQyH,IAAKA,MAEf,cAAC,GAAD,CACErC,SAAUsC,EACV3C,UAAU2C,GAAWA,EAASW,OAC9BpD,YAAW,OAAEyC,QAAF,IAAEA,OAAF,EAAEA,EAAUzC,YACvBC,SAAQ,OAAEwC,QAAF,IAAEA,OAAF,EAAEA,EAAUxC,SACpBG,OAAQA,EACRR,WAAYA,EACZM,YAAaA,EACbH,YAAU,O,aC1DH,SAAS2D,GAAIjN,GAAoB,MACtC+L,EAA2E/L,EAA3E+L,IAAKmB,EAAsElN,EAAtEkN,cADgC,EACsClN,EAAvDqD,cADiB,MACR+F,IADQ,EACDK,EAAuCzJ,EAAvCyJ,YAAaE,EAA0B3J,EAA1B2J,OAAQvF,EAAkBpE,EAAlBoE,MAAOE,EAAWtE,EAAXsE,OAD3B,EAGfnE,oBAAS,GAHM,mBAGtCkJ,EAHsC,KAG5B8D,EAH4B,KAIvCC,EAAa/D,EAAW6D,EAAgBnB,EAE9C,OACE,qCACE,cAACsB,GAAA,EAAD,CAAWtB,IAAKqB,EAAYE,IAAKF,EAAYG,QAAQ,OAAOlK,OAAQA,EAAQe,MAAOA,EAAOE,OAAQA,IAClG,cAAC,GAAD,CACEgF,YAAU,EACVD,SAAUA,EACVF,WAAazI,IACXA,EAAM6J,kBACN4C,GAAW9D,IAEbI,YAAaA,EACbE,OAAQA,OCjBD,SAAS6D,GAAQxN,GAAoB,MAC1C+L,EAA4D/L,EAA5D+L,IADyC,EACmB/L,EAAvDqD,cADoC,MAC3B+F,IAD2B,EACpBK,EAAuCzJ,EAAvCyJ,YAAaE,EAA0B3J,EAA1B2J,OAAQvF,EAAkBpE,EAAlBoE,MAAOE,EAAWtE,EAAXsE,OAEzD,OACE,qCACE,cAAC+I,GAAA,EAAD,CAAWtB,IAAKA,EAAKuB,IAAKvB,EAAK1I,OAAQA,EAAQkK,QAAQ,OAAOnJ,MAAOA,EAAOE,OAAQA,IACpF,cAAC,GAAD,CAASgF,YAAY,EAAOG,YAAaA,EAAaE,OAAQA,OCMpE,MAAM8D,GAAW,CAACzM,EAAgB+K,KAChC,OCjB0B,EAAC/K,EAAgB+K,IACvC/K,IAAS0M,IAASC,MACbC,IAAUD,MAIf5B,EAAIrF,SAAS,QACRkH,IAAUC,IAGZD,IAAUE,QDOTC,CAAa/M,EAAM+K,IACzB,KAAK6B,IAAUD,MACb,OAAO7B,GACT,KAAK8B,IAAUC,IACb,OAAOZ,GACT,QACE,OAAOO,KAIE,SAASQ,GAAOhO,GAAqB,MAC1CgB,EAA4DhB,EAA5DgB,KAAM+K,EAAsD/L,EAAtD+L,IAAKmB,EAAiDlN,EAAjDkN,cAAe7J,EAAkCrD,EAAlCqD,OAAQsG,EAA0B3J,EAA1B2J,OAAQvF,EAAkBpE,EAAlBoE,MAAOE,EAAWtE,EAAXsE,OAEnDmF,EAAc3H,mBAAQ,ICjBvB,SAAyBiK,GAC9B,OAAO,IAAIkC,IAAIlC,GAAKmC,aAAaC,IAAI,QAAU,GDgBbC,CAAgBrC,IAAM,CAACA,IACnDsC,EAAiBZ,GAASzM,EAAM+K,GAEtC,OACE,cAACsC,EAAD,CACEtC,IAAKA,EACLmB,cAAeA,EACf7J,OAAQA,EACRoG,YAAaA,EACbE,OAAQA,EACRvF,MAAOA,EACPE,OAAQA,I,aE/Bd,MAAMgK,GAAc/O,IAAOsH,KACzB,EAAGpH,WAAYC,YAAd,QAAD,8CACiBD,EAAMsH,WAAWC,UAI9BuH,GAAiBhP,IAAOsH,KAC5B,EAAGpH,WAAYC,YAAd,QAAD,sGACeD,EAAMsH,WAAWC,OAEjBvH,EAAMsH,WAAWyH,aAK5BC,GAAclP,IAAOsH,KACzB,EAAGpH,WAAYC,YAAd,QAAD,8KAImBD,EAAMsH,WAAWI,aAEhCL,YAAM,CAAErH,aAIP,SAASiP,GAAiBC,EAAuBtE,EAAiBuE,GACvE,OAAOD,EAAetE,EAAUuE,EAGnB,SAASC,GAAK7O,GAA4C,MAErE8O,EAcE9O,EAdF8O,WACAF,EAaE5O,EAbF4O,UACAvE,EAYErK,EAZFqK,QACA6C,EAWElN,EAXFkN,cACA3F,EAUEvH,EAVFuH,OACAC,EASExH,EATFwH,MACAlB,EAQEtG,EARFsG,OACAmB,EAOEzH,EAPFyH,KACA1E,EAME/C,EANF+C,MAVoE,EAgBlE/C,EALFqD,cAXoE,MAW3D+F,IAX2D,EAYpEhG,EAIEpD,EAJFoD,WACAgI,EAGEpL,EAHFoL,GACAhH,EAEEpE,EAFFoE,MACAE,EACEtE,EADFsE,OAfoE,EAkBjCyF,aAAU,GAlBuB,mBAkB/DgF,EAlB+D,KAkBpDC,EAlBoD,KAoBhEC,EAAYpF,YAAYqF,KAExBC,EAAYrN,mBAAQ,IAAM4M,GAAiBO,EAAW5E,EAASuE,IAAY,CAACvE,EAAS4E,EAAWL,IAOtG,OAJArO,qBAAU,KACR8C,MACC,CAACA,EAAQ0L,IAGV,cAACT,GAAD,CAAavL,MAAOA,EAAOgB,IAAKX,EAAYoC,UAAU,WAAtD,SACE,cAAC+I,GAAD,UACE,eAACE,GAAD,CAAahD,QAASuD,EAAiBI,KAAK,MAA5C,UACE,cAACpB,GAAD,CACE3K,OAAQA,EACRrC,KAAM8N,EACN/C,IAAKoD,EACLjC,cAAeA,EACfvD,OAAQyB,EACRhH,MAAOA,EACPE,OAAQA,KAERyK,GAAa,cAACzH,EAAD,CAASC,OAAQA,EAAQC,MAAOA,EAAOlB,OAAQA,EAAQmB,KAAMA,W,sDC/EvE,SAAS4H,KACtB,MAAMC,EAASC,aAAUC,MAEzB,OACE,cAAC,KAAD,CAAa/D,QAAS6D,EAAQ5D,aAAW,SAAzC,oBCAW,SAAS+D,GAAWzP,GAAyB,MAClDQ,EAAaR,EAAbQ,SAEFkP,EAAa7F,YAAY8F,KACzBC,EAAqB/F,YAAYgG,KAMvC,OAFAtP,qBAAU,IAAMC,KAAY,CAACA,EAAUkP,IAEhCE,EAAqB,EAAI,cAACvI,EAAA,EAAD,CAASI,KAAMiI,EAAY9H,aAAW,IAAM,KCT9E,MAAMkI,GAAgBvQ,IAAOwQ,QAAV,kDACfC,IACAhJ,IACAiJ,KAGW,SAASC,GAAOlQ,GAAgC,MACrDqD,EAAWrD,EAAXqD,OAER,OACE,eAACyM,GAAD,WACE,cAAC,KAAD,UACE,uBAAOK,QAAQ,YAAf,sBAEF,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAACZ,GAAD,CAAYjP,SAAU6C,IACtB,cAACiN,GAAA,EAAD,IACA,cAACjB,GAAD,U,0BCzBR,MAAMkB,GAAYhR,IAAOsH,IAAV,qGAMT2J,GAAUjR,IAAOwF,GACrB,EAAGtF,WAAYC,YAAd,QAAD,m7BAKsBD,EAAMG,OAAO6Q,WAiC/BC,GAAOnR,IAAO0J,KAAV,wbAqBJ0H,GAAQpR,IAAOqR,IAAV,ovBAsCI,SAASC,GAAW7Q,GAAyB,MAClDoL,EAAcpL,EAAdoL,GAAI0F,EAAU9Q,EAAV8Q,MAEZ,OACE,cAACP,GAAD,UACE,cAACC,GAAD,CAASpL,MAAO0L,EAAOxL,KAAM,qBAAuB8F,EAAIzK,OAAO,SAAS4E,IAAI,sBAA5E,SACE,eAAC,GAAD,WACE,cAACoL,GAAD,CAAO5E,IAAI,uCAAuCvG,UAAU,UAAU8H,IAAI,iBACzEwD,S,OC/GX,MAAMC,GAAO,CACX,iDACA,8CACA,uDACA,kEACA,qDACA,4FACA,yDACA,6DACA,yJACA,0EACA,oCACA,kGACA,8EAGIC,GAAOzR,YAAO0R,KAAP1R,EACX,EAAGE,WAAYC,YAAd,QAAD,8GAGaD,EAAMsH,WAAWG,YACfzH,EAAMsH,WAAWyH,aAInB,SAAS0C,KACtB,MAAMC,EAAMrP,mBAAQ,IAAMiP,GAAKK,KAAKC,MAAMD,KAAKE,SAAWP,GAAK5O,UAAU,IAEzE,OAAO,cAAC6O,GAAD,UAAOG,I,OC1BhB,MAAMI,GAAchS,IAAOsH,KACzB,EAAGpH,WAAYC,YAAd,QAAD,sKACIsQ,cACAwB,YAAc/R,EAAMsH,WAAWG,aAEpBzH,EAAMsH,WAAWyH,aAQnB,SAASiD,KACtB,OACE,eAACF,GAAD,WACE,cAACL,GAAD,IACA,cAACL,GAAD,CAAYzF,GAAG,YAAY0F,MAAM,2BChBxB,SAASY,KAAgB,MAAD,EACE3H,cADF,mBAC9B4H,EAD8B,KAClBC,EADkB,KAE/BC,EAAQhI,YAAYiI,KAEpBC,EAAiBJ,EAAaE,EAAMG,iBAAmBC,YAAYJ,GAEzE,OAAO,eAAC,KAAD,CAAOpG,QAASmG,EAAhB,UAAmCG,EAAnC,cCHM,SAASG,IAAa,OAAE7O,EAAS+F,IAAX,WAAkBhG,EAAlB,MAA8BL,IACjE,MAAM8O,EAAQhI,YAAYiI,KAQ1B,OAJAvR,qBAAU,KACRsR,EAAQ,GAAKxO,MACZ,CAACwO,EAAOxO,IAGT,sBAAKA,OAAQA,EAAQU,IAAKX,EAAYL,MAAOA,EAAOqM,KAAK,MAAzD,UACE,cAAC,KAAD,IACA,cAACc,GAAD,CAAQ7M,OAAQA,IACfwO,EAAQ,EAAI,cAACH,GAAD,IAAmB,cAACD,GAAD,O,+BCTtC,MAAMU,GAAM5S,IAAOsH,KACjB,EAAGpH,WAAYC,YAAd,QAAD,0CACaD,EAAMsH,WAAWC,UAI1BoL,GAAgB7S,YAAO6Q,KAAP7Q,EACpB,EAAGE,WAAYC,YAAd,QAAD,wFACeD,EAAMsH,WAAWyH,aAM5B6D,GAAc9S,YAAO8N,KAAP9N,CAAH,mDAIF,SAAS+S,IAAiB,OAAEjP,EAAS+F,IAAX,WAAkBhG,EAAlB,MAA8BL,IACrE,MAAMwP,EAAU1I,YAAY2I,KACtBC,EAAsB3Q,mBAC1B,IACEyQ,EAAQG,QAAO,CAACC,EAAsCC,KACpDD,EAAOC,EAAMC,MAAQD,EACdD,IACN,KACL,CAACJ,IAGH,OACE,cAACJ,GAAD,CAAKpP,MAAOA,EAAOgB,IAAKX,EAAYC,OAAQA,EAAQ+L,KAAK,MAAzD,SACE,eAACgD,GAAD,WACE,cAACC,GAAD,CAAatG,IAAK+G,KAAqBxF,IAAI,kCAC3C,cAAC,KAAD,IACA,cAAC,KAAD,wCACA,4DACCiF,EAAQpQ,OAAS,GAChB,qCACE,yDACA,cAACkF,EAAA,EAAD,CAASI,KAAMgL,EAAqBM,SAAO,Y,gBC/CvD,MAAM5K,GAAU5I,IAAOsH,IAAV,wEAKE,SAASmM,IAAkB,OAAE3P,EAAS+F,IAAX,WAAkBhG,EAAlB,MAA8BL,IACtE,OACE,cAAC,GAAD,CAASM,OAAQA,EAAQU,IAAKX,EAAYL,MAAOA,EAAOqM,KAAK,MAA7D,SACE,cAAC6D,GAAA,EAAD,M,gCCPN,MAAMC,GAAU3T,IAAOsH,KACrB,EAAGpH,WAAYC,YAAd,QAAD,iPAKSD,EAAMsH,WAAWC,OACbvH,EAAMsH,WAAWC,OAEfvH,EAAMsH,WAAWyH,aAK5B2E,GAAa5T,YAAO6T,KAAP7T,CAAH,4BAEV8T,GAAgB9T,YAAOQ,KAAPR,CAAH,4BAOJ,SAAS+T,GAAetT,GAA6B,MAC1DuT,EAA0BvT,EAA1BuT,YAAaC,EAAaxT,EAAbwT,SAEfC,EAAW5J,YAAY6J,KAEvBC,EAAmBlT,uBAAamT,GAA6BJ,EAAS3S,OAAO+S,KAAW,CAACJ,IACzFK,EAAkDpT,uBAAY,IAAM+S,EAAS,IAAI,CAACA,IAClFM,EAAiDrT,uBAAY,IAAM+S,EAASC,IAAW,CAACD,EAAUC,IAClGM,EAAqDtT,uBAAY,IAAM+S,EAASD,EAAc,IAAI,CACtGA,EACAC,IAEIQ,EAAiDvT,uBAAY,IAAM+S,EAASD,EAAc,IAAI,CAClGA,EACAC,IAKF,OACE,eAACN,GAAD,CAAS1N,UAAU,kBAAnB,UACG+N,EAAc,EAAI,cAACJ,GAAD,CAAY1H,QAASoI,EAArB,eAAiD,wBACnEN,EAAc,EAAI,cAACJ,GAAD,CAAY1H,QAASsI,EAArB,SAAoCR,EAAc,IAAkB,wBACvF,cAACF,GAAD,CAAepT,MAAOsT,EAAarT,SAAUyT,IAC5CJ,EAAcE,EAAW,cAACN,GAAD,CAAY1H,QAASuI,EAArB,SAAgCT,EAAc,IAAkB,wBACzFA,EAAcE,EAAW,EAAI,cAACN,GAAD,CAAY1H,QAASqI,EAArB,SAAgCL,IAAyB,2B,OCjD7F,MAAMQ,GAAa1U,YAAO2U,KAAP3U,EACjB,EAAGE,WAAYC,YAAd,QAAD,iDACoBD,EAAMsH,WAAWC,UAiBxB,SAASmN,GAAWnU,GAAwC,MACjEoU,EAAwDpU,EAAxDoU,OAAQjT,EAAgDnB,EAAhDmB,MAAOG,EAAyCtB,EAAzCsB,cAAeiS,EAA0BvT,EAA1BuT,YAAaC,EAAaxT,EAAbwT,SAE7Ca,EAAoB5T,uBACvBR,IACCuT,EAASvT,GACTqU,SAASC,uBAAuB,mBAAmB,GAAGC,mBAExD,CAAChB,IAGH,OACE,eAAC,GAAD,WACGY,EACAjT,GAASA,EAAMgB,OAAS,GACvB,qCACE,cAACmR,GAAD,CAAgBC,YAAaA,EAAaC,SAAUA,IADtD,OAEGrS,QAFH,IAEGA,OAFH,EAEGA,EAAOiF,KAAKqO,GACX,cAACnT,EAAD,eAAiCmT,GAAbA,EAAKrJ,MAE3B,cAACkI,GAAD,CAAgBC,YAAaA,EAAaC,SAAUa,U,iBC3B9D,MAAMK,GAAgBnV,IAAOsH,KAC3B,EAAGpH,WAAYC,YAAd,QAAD,mPAWgBD,EAAMG,OAAO+U,mBAMhB,SAASC,KACtB,MAAMhL,EAAQC,YAAYC,KACpBmF,EAAYpF,YAAYqF,KACxBjF,EAAeJ,YAAYK,KAC3B2K,EAAiBhL,YAAYiL,KAC7BC,EAAkBlL,YAAYmB,KAE9BzJ,EAAWgO,aAAUyF,MAY3B,GAVAC,cACE,KACMF,EAAkB,EAAInL,EAAMzH,QAC9BZ,MAGJ,IACA,CAACwT,EAAiBxT,EAAUqI,EAAMzH,UAG/B8H,EACH,OAAO,KApBsB,MAuBvB6E,EAAqE+F,EAArE/F,WAAYF,EAAyDiG,EAAzDjG,UAAWvE,EAA8CwK,EAA9CxK,QAAS6C,EAAqC2H,EAArC3H,cAAe9B,EAAsByJ,EAAtBzJ,GAAIhH,EAAkByQ,EAAlBzQ,MAAOE,EAAWuQ,EAAXvQ,OAC5D6K,EAAYT,GAAiBO,EAAW5E,EAASuE,GAEvD,OACE,cAAC8F,GAAD,UACE,cAAC1G,GAAD,CACE3K,OAAQ+F,IACRpI,KAAM8N,EACN/C,IAAKoD,EACLjC,cAAeA,EACfvD,OAAQyB,EACRhH,MAAOA,EACPE,OAAQA,MClDD,SAAS4Q,KAAU,MAAD,EACC/U,oBAAS,GADV,mBACxBsB,EADwB,KACbC,EADa,KAGzBkI,EAAQC,YAAYC,KACpBqL,EAAetL,YAAYuL,KAC3BC,EAAgBxL,YAAYyL,KAC5BC,EAAW1L,YAAY2L,KACvBC,EAAa5L,YAAY6L,KAEzBjL,EAAWC,cACXnJ,EAAWgO,aAAUyF,MACrBxB,EAAW/S,uBAAa4B,GAAkBoI,EAAS+E,aAAWnN,KAAS,CAACoI,IAE9E,OACE,qCACE,cAACmK,GAAD,IACCS,IAAkBM,IAAaC,gBAC9B,cAAC3U,EAAD,CACEC,OAAQgR,GACR1Q,WAAY8Q,GACZnR,MAAOyI,EACPxI,YAAa4R,GACb3R,YAAa8T,EACb7T,cAAeuN,GACftN,SAAUA,EACVE,UAAWA,EACXC,WAAYA,IAGd,cAACyS,GAAD,CACEC,OAAQ,cAAClC,GAAD,IACRqD,SAAUA,EACVhC,YAAakC,EACbI,aAAcV,EACd3B,SAAUA,EACVlS,cAAeuN,GACfpN,UAAWA,EACXC,WAAYA,EACZP,MAAOyI","file":"static/js/7.d438a58c.chunk.js","sourcesContent":["import React, { ChangeEventHandler, KeyboardEventHandler, useCallback, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst StyledInput = styled.input(\n  ({ theme }) => css`\n    width: 50px;\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n    text-align: center;\n  `\n)\n\ninterface SmallInputProps<T> {\n  value: T\n  onSubmit: (value: T) => void\n}\n\nexport function SmallTextInput(props: SmallInputProps<string>) {\n  const { value, onSubmit } = props\n  const [internalValue, setInternalValue] = useState(value)\n\n  useEffect(() => {\n    setInternalValue(value)\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(internalValue)\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(internalValue)\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return <StyledInput type='text' value={internalValue} onChange={onChange} onBlur={onBlur} onKeyDown={onKeyDown} />\n}\n\nexport function SmallNumberInput(props: SmallInputProps<number>) {\n  const { value, onSubmit } = props\n  const [internalValue, setInternalValue] = useState(value.toString())\n\n  useEffect(() => {\n    if (value) {\n      setInternalValue(value.toString())\n    }\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(Number(internalValue))\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(Number(internalValue))\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return <StyledInput type='number' value={internalValue} onChange={onChange} onBlur={onBlur} onKeyDown={onKeyDown} />\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CellMeasurer, CellMeasurerCache, IndexRange, InfiniteLoader, List } from 'react-virtualized'\nimport LayoutElementProps from '../LayoutElementProps'\n\ninterface InfiniteColumnProps<T> {\n  Header?: (props: LayoutElementProps) => JSX.Element\n  OutOfItems?: (props: LayoutElementProps) => JSX.Element\n  items?: T[]\n  LoadingItem: (props: LayoutElementProps) => JSX.Element\n  hasMoreRows: boolean\n  loadMore: () => void\n  ItemComponent: (props: T & LayoutElementProps) => JSX.Element\n  isLoading: boolean\n  setLoading: (value: boolean) => void\n}\n\nexport default function InifinteColumn<T>(props: InfiniteColumnProps<T>) {\n  const {\n    Header,\n    items = [],\n    LoadingItem,\n    hasMoreRows,\n    ItemComponent,\n    loadMore,\n    OutOfItems,\n    isLoading,\n    setLoading,\n  } = props\n\n  const [listRef, setListRef] = useState<List | null>(null)\n\n  const cache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n      }),\n    []\n  )\n\n  const prependedRows = Header ? 1 : 0\n  const loadingRows = 1\n\n  const rowCount = items.length + prependedRows + loadingRows\n\n  const isRowLoaded = useCallback(\n    ({ index }: { index: number }) => index < prependedRows + items.length + (hasMoreRows ? 0 : 1),\n    [hasMoreRows, items.length, prependedRows]\n  )\n\n  useEffect(() => {\n    if (listRef) {\n      const listener = () => {\n        listRef.measureAllRows()\n        listRef.recomputeRowHeights()\n        listRef.forceUpdateGrid()\n      }\n\n      window.addEventListener('resize', listener)\n\n      return () => {\n        window.removeEventListener('resize', listener)\n      }\n    }\n  }, [listRef])\n\n  const rowRenderer = useCallback(\n    ({ index, key, parent, style }: { index: number; key: any; parent: any; style: any }) => {\n      return (\n        <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n          {({ measure, registerChild }) => {\n            // Index 0\n            if (Header && index < prependedRows) {\n              return <Header style={style} virtualRef={registerChild} onLoad={measure} />\n            }\n\n            // Index 1\n            if (index < prependedRows + items.length) {\n              return (\n                <ItemComponent\n                  style={style}\n                  virtualRef={registerChild}\n                  onLoad={measure}\n                  {...items[index - prependedRows]}\n                />\n              )\n            }\n\n            // Index 2\n            if (index < prependedRows + items.length + loadingRows) {\n              return hasMoreRows || isLoading ? (\n                <LoadingItem style={style} virtualRef={registerChild} onLoad={measure} />\n              ) : OutOfItems && items.length > 0 ? (\n                <OutOfItems style={style} virtualRef={registerChild} onLoad={measure} />\n              ) : (\n                <div></div>\n              )\n            }\n\n            console.warn('index not found / out of bounds. INDEX:', index)\n            return null\n          }}\n        </CellMeasurer>\n      )\n    },\n    [cache, Header, prependedRows, items, ItemComponent, hasMoreRows, isLoading, LoadingItem, OutOfItems]\n  )\n\n  const loadMoreRows = (params: IndexRange) => {\n    if (isLoading || !hasMoreRows) {\n      return Promise.reject(0)\n    }\n\n    setLoading(true)\n    loadMore()\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setLoading(false)\n        resolve(1)\n      }, 1000)\n    })\n  }\n\n  return (\n    <InfiniteLoader isRowLoaded={isRowLoaded} loadMoreRows={loadMoreRows} rowCount={rowCount}>\n      {({ onRowsRendered, registerChild }) => {\n        const registerChildHereAswell = (child: List) => {\n          setListRef(child)\n          registerChild(child)\n        }\n        return (\n          <List\n            ref={registerChildHereAswell}\n            onRowsRendered={onRowsRendered}\n            rowRenderer={rowRenderer}\n            deferredMeasurementCache={cache}\n            overscanRowCount={10}\n            rowCount={items.length + prependedRows + loadingRows}\n            rowHeight={cache.rowHeight}\n            width={window.innerWidth}\n            height={window.innerHeight}\n          />\n        )\n      }}\n    </InfiniteLoader>\n  )\n}\n","import { RatingType } from '../../data/types'\nimport React from 'react'\nimport { RatingIcon } from '../../icons/Icons'\nimport FlexPair from '../common/FlexPair'\n\nexport default function Rating(props: { value: RatingType }) {\n  return (\n    <FlexPair>\n      <RatingIcon color='white' />\n      <span>{props.value[0].toUpperCase()}</span>\n    </FlexPair>\n  )\n}\n","import React from 'react'\nimport { HeartIcon } from '../../icons/Icons'\nimport FlexPair from '../common/FlexPair'\n\nexport default function Score(props: { value: number }) {\n  return (\n    <FlexPair>\n      <HeartIcon color='white' />\n      <span>{props.value}</span>\n    </FlexPair>\n  )\n}\n","import React from 'react'\r\nimport { SourceIcon } from '../../../icons/Icons'\r\nimport FlexPair from '../../common/FlexPair'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function FallbackSource({ value }: SourceProps) {\r\n  return (\r\n    <FlexPair>\r\n      <SourceIcon color='white' />\r\n      <span>{value}</span>\r\n    </FlexPair>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components'\r\nimport { flexRowWithGap } from '../../styled/mixins'\r\n\r\nconst ColoredIconLink = styled.a(\r\n  ({ color, theme }) => css`\r\n    ${flexRowWithGap({ theme })}\r\n    ${color\r\n      ? css`\r\n          color: ${color} !important;\r\n        `\r\n      : ''};\r\n  `\r\n)\r\n\r\nexport default ColoredIconLink\r\n","import React from 'react'\r\nimport { useTheme } from 'styled-components'\r\nimport { LinkIcon } from '../../../icons/Icons'\r\nimport { formatSource } from '../../../misc/formatting'\r\nimport ColoredIconLink from '../../common/ColoredIconLink'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function DefaultLinkSource({ value }: SourceProps) {\r\n  const color = useTheme().colors.accentColor\r\n  const title = formatSource(value)\r\n\r\n  return (\r\n    <ColoredIconLink color={color} href={value} target='_blank' rel='noopener noreferrer' className='source'>\r\n      <LinkIcon color={color} />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BrandIcon } from '../../../icons/Icons'\r\nimport ColoredIconLink from '../../common/ColoredIconLink'\r\n\r\ninterface SpecialLinkSourceProps {\r\n  value: string\r\n  color: string\r\n  icon: string\r\n  title: string\r\n}\r\n\r\nexport default function SpecialLinkSource(props: SpecialLinkSourceProps) {\r\n  const { value, color, icon, title } = props\r\n  return (\r\n    <ColoredIconLink href={value} target='_blank' rel='noopener noreferrer' className='source' color={color}>\r\n      <BrandIcon color={color} icon={icon} />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import React from 'react'\nimport { parseUrl } from '../../../data/utils'\nimport FallbackSource from './FallbackSource'\nimport DefaultLinkSource from './LinkSource'\nimport SourceProps from './SourceProps'\nimport SpecialLinkSource from './SpecialLinkSource'\n\n/**\n * Cut away all the unnecessary parts of the link\n */\nfunction extractFirstElement(value: string) {\n  return value.split(' ')[0].split('?')[0].split('/')[0]\n}\n\nfunction extractSecondElement(value: string) {\n  return value.split(' ')[0].split('?')[0].split('/')[1]\n}\n\ntype SourceMapping = [string, string, (value: string) => string]\n\nconst sources: Record<string, SourceMapping> = {\n  'twitter.com/': ['#1da1f2', 'fa-twitter', (value) => extractFirstElement(value.split('twitter.com/')[1])],\n  'pixiv.net/': ['#0096FA', 'pixiv', () => 'Pixiv'],\n  'patreon.com/': [\n    '#FF424D',\n    'fa-patreon',\n    (value) => {\n      const path = value.split('patreon.com/')[1]\n\n      return path.startsWith('posts/') ? extractSecondElement(path) : extractFirstElement(path)\n    },\n  ],\n  'deviantart.com/': ['#00e59b', 'fa-deviantart', (value) => extractFirstElement(value.split('deviantart.com/')[1])],\n  'discordapp.com/': ['#7289DA', 'fa-discord', () => 'Discord'],\n}\n\nexport default function Source({ value }: SourceProps) {\n  if (parseUrl(value)) {\n    // Sources can contain multiple links\n    const links = value.split(' ')\n    return (\n      <>\n        {links.map((link) => {\n          const source = Object.keys(sources).find((key) => link.includes(key))\n\n          if (source) {\n            const [color, icon, getTitle] = sources[source]\n\n            return <SpecialLinkSource key={link} value={link} color={color} icon={icon} title={getTitle(link)} />\n          }\n\n          return <DefaultLinkSource key={link} value={link} />\n        })}\n      </>\n    )\n  }\n\n  return <FallbackSource value={value} />\n}\n","import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport TagList from '../tag/TagList'\nimport { RatingType } from '../../data/types'\nimport TagDataClass from '../../data/Tag'\nimport { listToMap } from '../../data/utils'\nimport Rating from './Rating'\nimport Score from './Score'\nimport Source from './source/Source'\nimport { flexRowGap, layer } from '../../styled/mixins'\n\nconst Bar = styled.div(\n  ({ theme }) => css`\n    grid-row: 2/3;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    ${layer({ theme })}\n    padding: ${theme.dimensions.gutter};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n    border-radius: 0 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius};\n  `\n)\n\nconst DetailsTagList = styled(TagList)(\n  ({ theme }) => css`\n    grid-row: 3/4;\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\ninterface DetailsProps {\n  rating: RatingType\n  score: number\n  source: string\n  tags: TagDataClass[]\n}\n\nexport default function Details(props: DetailsProps) {\n  const { rating, score, source, tags } = props\n  const tagsForRendering = useMemo(() => listToMap(tags, 'name'), [tags])\n\n  return (\n    <>\n      <Bar>\n        {!!rating && <Rating value={rating} />}\n        {!!score && <Score value={score} />}\n        {!!source && <Source value={source} />}\n      </Bar>\n      <DetailsTagList tags={tagsForRendering} loadAliases={false} />\n    </>\n  )\n}\n","import styled from 'styled-components'\nimport { flexMedia, preserveAspectRatio } from '../../styled/mixins'\n\nconst FlexVideo = styled.video`\n  ${flexMedia}\n  ${preserveAspectRatio}\n  grid-area: 1/1/2/2;\n`\n\nexport default FlexVideo\n","import { keyframes } from 'styled-components'\n\nexport const fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`\n\nexport const kofiWiggle = keyframes`\n  0% {\n    transform: rotate(0) scale(1);\n  }\n  60% {\n    transform: rotate(0) scale(1);\n  }\n  75% {\n    transform: rotate(0) scale(1.12);\n  }\n  80% {\n    transform: rotate(0) scale(1.1);\n  }\n  84% {\n    transform: rotate(-10deg) scale(1.1);\n  }\n  88% {\n    transform: rotate(10deg) scale(1.1);\n  }\n  92% {\n    transform: rotate(-10deg) scale(1.1);\n  }\n  96% {\n    transform: rotate(10deg) scale(1.1);\n  }\n  100% {\n    transform: rotate(0) scale(1);\n  }\n`\n","import React, { MouseEventHandler, useCallback } from 'react'\n\nimport { ExpandIcon, PlayIcon, PauseIcon, ExternalLinkIcon, CloseIcon, DownloadIcon } from '../../icons/Icons'\nimport styled, { css } from 'styled-components'\nimport useToggle from '../../hooks/useToggle'\nimport { fadeOut } from '../styled/animations'\nimport { InvisButton } from '../common/Buttons'\nimport { NO_OP } from '../../data/types'\nimport { formatDuration } from '../../misc/formatting'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectFullsceenState, selectFullScreenIndex, selectPostById, selectPosts } from '../../redux/selectors'\nimport { enterFullscreen, exitFullscreen, setFullScreenPost } from '../../redux/actions'\nimport PostDataClass from '../../data/Post'\nimport { download } from '../../data/utils'\n\nconst Wrapper = styled.div(\n  (props: { isVisible: boolean }) => css`\n    grid-area: 1/1/2/2;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: auto 1fr auto auto;\n    z-index: 1;\n\n    ${!props.isVisible\n      ? css`\n          opacity: 0;\n          animation: ${fadeOut} 0.4s ease-in-out;\n        `\n      : ''};\n  `\n)\n\nconst ProgressBar = styled.div(\n  (props) => css`\n    grid-area: 4/1/4/4;\n    height: 5px;\n    background-color: ${props.theme.colors.accentColor};\n  `\n)\n\nconst OverlayButton = styled(InvisButton)(\n  (props) => css`\n    width: max-content;\n    height: max-content;\n    padding: ${props.theme.dimensions.bigSpacing};\n  `\n)\n\nconst FullScreenButton = styled(OverlayButton)`\n  grid-area: 1/1/2/2;\n  place-self: start start;\n`\n\nconst LinkList = styled.div`\n  grid-area: 3/1/4/1;\n  place-self: end stretch;\n  display: flex;\n  place-items: start center;\n`\n\nconst OpenExternalButton = styled(OverlayButton)``\n\nconst PlayButton = styled(OverlayButton)`\n  grid-area: 2/2/3/3;\n  place-self: center center;\n`\n\nconst PreviousButton = styled.div`\n  grid-area: 2/1/3/2;\n`\n\nconst NextButton = styled.div`\n  grid-area: 2/3/3/4;\n`\n\nconst DownloadButton = styled(OverlayButton)``\n\nconst LengthDisplay = styled.span(\n  (props) => css`\n    grid-area: 3/3/4/4;\n    place-self: end end;\n    background: #00000080;\n    border-radius: 4px;\n    padding: ${props.theme.dimensions.gutter};\n    margin: ${props.theme.dimensions.gutter};\n  `\n)\n\ninterface OverlayProps {\n  postId: number\n  externalSrc: string\n  togglePlay?: MouseEventHandler\n  isPaused?: boolean\n  isPlayable: boolean\n  currentTime?: number\n  duration?: number\n  mediaRef?: HTMLVideoElement | null\n}\n\nfunction Overlay(props: OverlayProps) {\n  const {\n    togglePlay = NO_OP,\n    isPaused = true,\n    isPlayable = false,\n    currentTime = 0,\n    duration = null,\n    externalSrc,\n    mediaRef,\n    postId,\n  } = props\n\n  const posts = useSelector(selectPosts)\n  const [isVisible, toggleVisible] = useToggle()\n  const isReaderOpen = useSelector(selectFullsceenState)\n\n  const post = useSelector(selectPostById(postId)) as PostDataClass\n\n  const downloadSrc = post.big_src\n\n  const onDownloadClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      download(downloadSrc)\n    },\n    [downloadSrc]\n  )\n\n  const dispatch = useDispatch()\n  const onExpandClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.preventDefault()\n      event.stopPropagation()\n      if (isReaderOpen) {\n        dispatch(exitFullscreen())\n      } else {\n        dispatch(enterFullscreen(postId))\n      }\n    },\n    [dispatch, isReaderOpen, postId]\n  )\n\n  const selectedIndex = useSelector(selectFullScreenIndex)\n\n  const selectPostAt = useCallback(\n    (index: number) => {\n      const postAtindex = posts[index]\n\n      if (postAtindex) {\n        dispatch(setFullScreenPost(postAtindex.id))\n      }\n    },\n    [dispatch, posts]\n  )\n\n  const hasNext = selectedIndex + 1 < posts.length\n  const selectNext = useCallback(() => {\n    selectPostAt(selectedIndex + 1)\n  }, [selectPostAt, selectedIndex])\n\n  const hasPrevious = selectedIndex > 0\n  const selectPrevious = useCallback(() => {\n    selectPostAt(selectedIndex - 1)\n  }, [selectPostAt, selectedIndex])\n\n  return (\n    <Wrapper isVisible={isPaused || isVisible} onClick={toggleVisible}>\n      <FullScreenButton onClick={onExpandClick} aria-label='Open Fullscreen'>\n        {isReaderOpen ? <CloseIcon color='white' /> : <ExpandIcon color='white' />}\n      </FullScreenButton>\n\n      <LinkList>\n        <OpenExternalButton>\n          <a href={externalSrc} target='_blank' rel='noopener noreferrer' aria-label='Open In New Tab'>\n            <ExternalLinkIcon color='white' />\n          </a>\n        </OpenExternalButton>\n\n        <DownloadButton aria-label='Download Image' onClick={onDownloadClick} title={downloadSrc}>\n          <DownloadIcon color='white' />\n        </DownloadButton>\n      </LinkList>\n\n      {isPlayable && (\n        <>\n          <PlayButton onClick={togglePlay} aria-label='Play/Pause'>\n            {isPaused ? <PlayIcon color='white' size={50} /> : <PauseIcon color='white' size={50} />}\n          </PlayButton>\n          {!!duration && !!currentTime && <ProgressBar style={{ width: `${(currentTime / duration) * 100}%` }} />}\n\n          {mediaRef && !isNaN(mediaRef.duration) && <LengthDisplay>{formatDuration(mediaRef.duration)}</LengthDisplay>}\n          {externalSrc.includes('.gif') && <LengthDisplay>gif</LengthDisplay>}\n        </>\n      )}\n\n      {isReaderOpen && hasPrevious && <PreviousButton onClick={selectPrevious}></PreviousButton>}\n      {isReaderOpen && hasNext && <NextButton onClick={selectNext}></NextButton>}\n    </Wrapper>\n  )\n}\n\nexport default Overlay\n","import React, { useState, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { NO_OP } from '../../../data/types'\nimport { selectPreloadVideos } from '../../../redux/selectors'\nimport FlexVideo from '../FlexVideo'\nimport MediaProps from './MediaProps'\nimport Overlay from '../Overlay'\n\nexport default function Video(props: MediaProps) {\n  const { src, onLoad = NO_OP, externalSrc, postId, width, height } = props\n\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null)\n\n  const [, setTime] = useState(Date.now())\n  const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null)\n\n  const play = useCallback(() => {\n    videoRef && videoRef.play()\n\n    // ~30 fps\n    const id = setInterval(() => {\n      setTime(Date.now())\n    }, 34)\n\n    setIntervalId(id)\n  }, [videoRef])\n\n  const pause = useCallback(() => {\n    videoRef && videoRef.pause()\n    clearInterval(intervalId as NodeJS.Timeout)\n    setIntervalId(null)\n  }, [videoRef, intervalId])\n\n  const togglePlay = useCallback(\n    (event) => {\n      event.stopPropagation()\n      videoRef && (videoRef.paused ? play() : pause())\n    },\n    [videoRef, play, pause]\n  )\n\n  const preload = useSelector(selectPreloadVideos) ? 'auto' : 'metadata'\n\n  return (\n    <>\n      <FlexVideo\n        controls={false}\n        loop\n        preload={preload}\n        ref={setVideoRef}\n        onLoadedMetadata={onLoad}\n        width={width}\n        height={height}\n      >\n        <source src={src} />\n      </FlexVideo>\n      <Overlay\n        mediaRef={videoRef}\n        isPaused={videoRef ? videoRef.paused : true}\n        currentTime={videoRef?.currentTime}\n        duration={videoRef?.duration}\n        postId={postId}\n        togglePlay={togglePlay}\n        externalSrc={externalSrc}\n        isPlayable\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { NO_OP } from '../../../data/types'\nimport FlexImage from '../FlexImage'\nimport MediaProps from './MediaProps'\nimport Overlay from '../Overlay'\n\nexport default function Gif(props: MediaProps) {\n  const { src, thumbnail_src, onLoad = NO_OP, externalSrc, postId, width, height } = props\n\n  const [isPaused, setPaused] = useState(true)\n  const usedSource = isPaused ? thumbnail_src : src\n\n  return (\n    <>\n      <FlexImage src={usedSource} alt={usedSource} loading='lazy' onLoad={onLoad} width={width} height={height} />\n      <Overlay\n        isPlayable\n        isPaused={isPaused}\n        togglePlay={(event) => {\n          event.stopPropagation()\n          setPaused(!isPaused)\n        }}\n        externalSrc={externalSrc}\n        postId={postId}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { NO_OP } from '../../../data/types'\nimport FlexImage from '../FlexImage'\nimport MediaProps from './MediaProps'\nimport Overlay from '../Overlay'\n\nexport default function Picture(props: MediaProps) {\n  const { src, onLoad = NO_OP, externalSrc, postId, width, height } = props\n\n  return (\n    <>\n      <FlexImage src={src} alt={src} onLoad={onLoad} loading='lazy' width={width} height={height} />\n      <Overlay isPlayable={false} externalSrc={externalSrc} postId={postId} />\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport Video from './media/Video'\nimport Gif from './media/Gif'\nimport Picture from './media/Picture'\n\nimport { getMediaType, getUrlParameter } from './utils'\nimport { MediaType, PostType } from '../../data/types'\n\ninterface PlayerProps {\n  postId: number\n  type: PostType\n  src: string\n  thumbnail_src: string\n  onLoad: () => void\n  width: number\n  height: number\n}\n\nconst getMedia = (type: PostType, src: string) => {\n  switch (getMediaType(type, src)) {\n    case MediaType.VIDEO:\n      return Video\n    case MediaType.GIF:\n      return Gif\n    default:\n      return Picture\n  }\n}\n\nexport default function Player(props: PlayerProps) {\n  const { type, src, thumbnail_src, onLoad, postId, width, height } = props\n\n  const externalSrc = useMemo(() => getUrlParameter(src), [src])\n  const MediaComponent = getMedia(type, src)\n\n  return (\n    <MediaComponent\n      src={src}\n      thumbnail_src={thumbnail_src}\n      onLoad={onLoad}\n      externalSrc={externalSrc}\n      postId={postId}\n      width={width}\n      height={height}\n    />\n  )\n}\n","import { PostType, MediaType } from '../../data/types'\n\nexport const getMediaType = (type: PostType, src: string) => {\n  if (type === PostType.VIDEO) {\n    return MediaType.VIDEO\n  }\n\n  // can't use .endsWith because of queryString\n  if (src.includes('.gif')) {\n    return MediaType.GIF\n  }\n\n  return MediaType.PICTURE\n}\n\nexport function getUrlParameter(src: string) {\n  return new URL(src).searchParams.get('url') || ''\n}\n","import React, { useEffect, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport Details from './Details'\nimport Player from '../player/Player'\nimport { useSelector } from 'react-redux'\nimport { selectOriginals } from '../../redux/selectors'\nimport PostDataClass from '../../data/Post'\nimport LayoutElementProps from '../layout/LayoutElementProps'\nimport { NO_OP } from '../../data/types'\nimport useToggle from '../../hooks/useToggle'\nimport { layer } from '../../styled/mixins'\n\nconst ItemWrapper = styled.div(\n  ({ theme }) => css`\n    padding-top: ${theme.dimensions.gutter};\n  `\n)\n\nconst PositonWrapper = styled.div(\n  ({ theme }) => css`\n    padding: 0 ${theme.dimensions.gutter};\n    width: 100%;\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n  `\n)\n\nconst PostWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    border-radius: ${theme.dimensions.borderRadius};\n    overflow: hidden;\n    ${layer({ theme })}\n  `\n)\n\nexport function getCorrectSource(loadOriginal: boolean, big_src: string, small_src: string) {\n  return loadOriginal ? big_src : small_src\n}\n\nexport default function Post(props: PostDataClass & LayoutElementProps) {\n  const {\n    media_type,\n    small_src,\n    big_src,\n    thumbnail_src,\n    rating,\n    score,\n    source,\n    tags,\n    style,\n    onLoad = NO_OP,\n    virtualRef,\n    id,\n    width,\n    height,\n  } = props\n\n  const [collapsed, toggleCollapsed] = useToggle(true)\n\n  const originals = useSelector(selectOriginals)\n\n  const media_src = useMemo(() => getCorrectSource(originals, big_src, small_src), [big_src, originals, small_src])\n\n  // re-measure when collapsed state changes\n  useEffect(() => {\n    onLoad()\n  }, [onLoad, collapsed])\n\n  return (\n    <ItemWrapper style={style} ref={virtualRef} className='list-div'>\n      <PositonWrapper>\n        <PostWrapper onClick={toggleCollapsed} role='row'>\n          <Player\n            onLoad={onLoad}\n            type={media_type}\n            src={media_src}\n            thumbnail_src={thumbnail_src}\n            postId={id}\n            width={width}\n            height={height}\n          />\n          {!collapsed && <Details rating={rating} score={score} source={source} tags={tags} />}\n        </PostWrapper>\n      </PositonWrapper>\n    </ItemWrapper>\n  )\n}\n","import React from 'react'\nimport useAction from '../../hooks/useAction'\nimport { getResults } from '../../redux/actions'\nimport { BlockButton } from '../common/Buttons'\n\nexport default function SearchButton() {\n  const search = useAction(getResults)\n\n  return (\n    <BlockButton onClick={search} aria-label='Search'>\n      Search\n    </BlockButton>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectActiveTags, selectNumberOfActiveTags } from '../../redux/selectors'\nimport TagList from '../tag/TagList'\n\ninterface ActiveTagsProps {\n  onChange: () => void\n}\n\nexport default function ActiveTags(props: ActiveTagsProps) {\n  const { onChange } = props\n\n  const activeTags = useSelector(selectActiveTags)\n  const numberOfActiveTags = useSelector(selectNumberOfActiveTags)\n\n  // Fire change event when tags change\n  // This is used to re-measure the height\n  useEffect(() => onChange(), [onChange, activeTags])\n\n  return numberOfActiveTags > 0 ? <TagList tags={activeTags} loadAliases /> : null\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TagSelector from '../tagSelector/TagSelector'\nimport Options from './Options'\nimport { Title } from '../common/Text'\nimport Surface from '../common/Surface'\nimport SearchButton from '../widgets/SearchButton'\nimport ActiveTags from '../widgets/ActiveTags'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst ConfigWrapper = styled.section`\n  ${flexColumn}\n  ${gutter}\n  ${centeredMaxWidth}\n`\n\nexport default function Config(props: { onLoad: () => void }) {\n  const { onLoad } = props\n\n  return (\n    <ConfigWrapper>\n      <Title>\n        <label htmlFor='tag-input'>Search</label>\n      </Title>\n      <Surface>\n        <TagSelector />\n        <ActiveTags onChange={onLoad} />\n        <Options />\n        <SearchButton />\n      </Surface>\n    </ConfigWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Container = styled.div`\n  display: inline-block;\n  white-space: nowrap;\n  min-width: 160px;\n`\n\nconst AButton = styled.a(\n  ({ theme }) => css`\n    box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\n    line-height: 36px !important;\n    min-width: 150px;\n    display: inline-block !important;\n    background-color: ${theme.colors.layerBg};\n    padding: 2px 12px !important;\n    text-align: center !important;\n    border-radius: 3px;\n    color: #fff;\n    cursor: pointer;\n    overflow-wrap: break-word;\n    vertical-align: middle;\n    border: 0 none #fff !important;\n    font-family: 'Quicksand', Helvetica, Century Gothic, sans-serif !important;\n    text-decoration: none;\n    text-shadow: none;\n    font-weight: 700 !important;\n    font-size: 14px !important;\n\n    :visited {\n      color: #fff !important;\n      text-decoration: none !important;\n    }\n\n    :hover {\n      opacity: 0.85;\n      color: #f5f5f5 !important;\n      text-decoration: none !important;\n    }\n\n    :active {\n      color: #f5f5f5 !important;\n      text-decoration: none !important;\n    }\n  `\n)\n\nconst Text = styled.span`\n  color: #fff !important;\n  letter-spacing: -0.15px !important;\n  vertical-align: middle;\n  line-height: 33px !important;\n  padding: 0;\n  text-align: center;\n  text-decoration: none !important;\n  text-shadow: 0 1px 1px rgba(34, 34, 34, 0.05);\n\n  a {\n    color: #fff !important;\n    text-decoration: none !important;\n  }\n\n  a:hover {\n    color: #fff !important;\n    text-decoration: none;\n  }\n`\n\nconst Image = styled.img`\n  display: initial !important;\n  vertical-align: middle;\n  height: 13px !important;\n  width: 20px !important;\n  padding-top: 0;\n  padding-bottom: 0;\n  border: none;\n  margin-top: 0;\n  margin-right: 5px;\n  margin-left: 0;\n  margin-bottom: 3px;\n  content: url('https://ko-fi.com/img/cup-border.png');\n\n  :after {\n    vertical-align: middle;\n    height: 25px;\n    padding-top: 0;\n    padding-bottom: 0;\n    border: none;\n    margin-top: 0;\n    margin-right: 6px;\n    margin-left: 0;\n    margin-bottom: 4px !important;\n    content: url('https://ko-fi.com/img/whitelogo.svg');\n\n    height: 15px !important;\n    width: 22px !important;\n    display: initial;\n    animation: kofi-wiggle 3s infinite;\n  }\n`\n\ninterface KofiButtonProps {\n  id: string\n  label: string\n}\n\nexport default function KofiButton(props: KofiButtonProps) {\n  const { id, label } = props\n\n  return (\n    <Container>\n      <AButton title={label} href={'https://ko-fi.com/' + id} target='_blank' rel='noopener noreferrer'>\n        <Text>\n          <Image src='https://ko-fi.com/img/cup-border.png' className='kofiimg' alt='Ko-Fi button' />\n          {label}\n        </Text>\n      </AButton>\n    </Container>\n  )\n}\n","import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Faded } from './Text'\n\nconst tips = [\n  'Try tapping the little plus in the tag search.',\n  \"You can exclude tags with the '-' modifier.\",\n  \"Each result will have at least one of your '~' tags.\",\n  'Check out the settings. There are lots of uesful options there.',\n  'Starting a tag search with a * gives more results.',\n  'When filtering rated posts, you can configure the minimum score by taping the red number.',\n  'You can get more info about a post be tapping it once.',\n  'Tapping on a tag below a post adds it to your active tags.',\n  \"Large gifs and videos can take a while to load in the app. Try clicking the 'Open in new tab' icon in the bottom left corner for faster loading times.\",\n  'If anything stops working or gets weird. Reset the app in the settings.',\n  'I hope you are having a nice day!',\n  'If a tag is ambiguous, it will have a little arrow on the right. Tapping it shows related tags.',\n  'Tapping the icon in the top left of posts brings you into fullscreen mode.',\n]\n\nconst Span = styled(Faded)(\n  ({ theme }) => css`\n    text-align: center;\n    font-size: 16px;\n    padding: ${theme.dimensions.hugeSpacing};\n    max-width: ${theme.dimensions.bodyWidth};\n  `\n)\n\nexport default function RandomTip() {\n  const tip = useMemo(() => tips[Math.floor(Math.random() * tips.length)], [])\n\n  return <Span>{tip}</Span>\n}\n","import React from 'react'\r\nimport KofiButton from './KofiButton'\r\nimport styled, { css } from 'styled-components'\r\nimport RandomTip from '../common/RandomTip'\r\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\r\n\r\nconst Placeholder = styled.div(\r\n  ({ theme }) => css`\r\n    ${flexColumn()}\r\n    ${flexColumnGap(theme.dimensions.hugeSpacing)}\r\n      align-items: center;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin: auto;\r\n\r\n    height: calc(100vh - 400px);\r\n    padding: 0 10%;\r\n  `\r\n)\r\n\r\nexport default function SearchPlaceholder() {\r\n  return (\r\n    <Placeholder>\r\n      <RandomTip />\r\n      <KofiButton id='V7V73PWW9' label='Support Me on Ko-fi' />\r\n    </Placeholder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { formatCount } from '../../misc/formatting'\r\nimport { selectCount } from '../../redux/selectors'\r\nimport { Title } from '../common/Text'\r\n\r\nexport default function ResultsTitle() {\r\n  const [fullNumber, toggleFullNumber] = useToggle()\r\n  const count = useSelector(selectCount)\r\n\r\n  const formattedCount = fullNumber ? count.toLocaleString() : formatCount(count)\r\n\r\n  return <Title onClick={toggleFullNumber}>{formattedCount} results</Title>\r\n}\r\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectCount } from '../../redux/selectors'\nimport Config from '../features/Config'\nimport Header from '../features/Header'\nimport LayoutElementProps from './LayoutElementProps'\nimport { NO_OP } from '../../data/types'\nimport SearchPlaceholder from '../widgets/SearchPlaceholder'\nimport ResultsTitle from '../widgets/ResultsTitle'\n\nexport default function LayoutHeader({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  const count = useSelector(selectCount)\n\n  // Trigger load event when count is > 0\n  // This is used to re-measure the element\n  useEffect(() => {\n    count > 0 && onLoad()\n  }, [count, onLoad])\n\n  return (\n    <div onLoad={onLoad} ref={virtualRef} style={style} role='row'>\n      <Header />\n      <Config onLoad={onLoad} />\n      {count > 0 ? <ResultsTitle /> : <SearchPlaceholder />}\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport Surface from '../common/Surface'\nimport { Title } from '../common/Text'\nimport TagList from '../tag/TagList'\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\nimport { useSelector } from 'react-redux'\nimport { selectAliasesAsList } from '../../redux/selectors'\nimport TagDataClass from '../../data/Tag'\nimport { NO_OP } from '../../data/types'\nimport LayoutElementProps from './LayoutElementProps'\nimport { HorizontalLine } from '../common/Lines'\nimport styled, { css } from 'styled-components'\nimport FlexImage from '../player/FlexImage'\n\nconst Div = styled.div(\n  ({ theme }) => css`\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSurface = styled(Surface)(\n  ({ theme }) => css`\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n    text-align: center;\n  `\n)\n\nconst StyledImage = styled(FlexImage)`\n  max-height: 50vh;\n`\n\nexport default function LayoutOutOfItems({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  const aliases = useSelector(selectAliasesAsList)\n  const aliasesForRendering = useMemo(\n    () =>\n      aliases.reduce((result: Record<string, TagDataClass>, alias) => {\n        result[alias.name] = alias\n        return result\n      }, {}),\n    [aliases]\n  )\n\n  return (\n    <Div style={style} ref={virtualRef} onLoad={onLoad} role='row'>\n      <StyledSurface>\n        <StyledImage src={outOfResultsPicture} alt='Shironeko does not understand' />\n        <HorizontalLine />\n        <Title>You have reached the end!</Title>\n        <p>Go look for something else!</p>\n        {aliases.length > 0 && (\n          <>\n            <p>How about some of these?</p>\n            <TagList tags={aliasesForRendering} padding />\n          </>\n        )}\n      </StyledSurface>\n    </Div>\n  )\n}\n","import React from 'react'\nimport LayoutElementProps from './LayoutElementProps'\nimport LoadingIcon from '../../icons/Loading'\nimport styled from 'styled-components'\nimport { NO_OP } from '../../data/types'\n\nconst Wrapper = styled.div`\n  display: grid;\n  place-items: center;\n`\n\nexport default function LayoutLoadingItem({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  return (\n    <Wrapper onLoad={onLoad} ref={virtualRef} style={style} role='row'>\n      <LoadingIcon />\n    </Wrapper>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport { selectLastPage } from '../../../redux/selectors'\nimport { RedButton } from '../../common/Buttons'\nimport { SmallNumberInput } from '../../common/SmallInput'\n\nconst PageRow = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    justify-content: center;\n    place-items: center;\n    gap: ${theme.dimensions.gutter};\n    padding: ${theme.dimensions.gutter};\n    padding-bottom: 0;\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n  `\n)\n\nconst PageNumber = styled(RedButton)``\n\nconst CurrentNumber = styled(SmallNumberInput)``\n\ninterface PageNavigationProps {\n  currentPage: number\n  loadPage: (pageNumber: number) => void\n}\n\nexport default function PageNavigation(props: PageNavigationProps) {\n  const { currentPage, loadPage } = props\n\n  const lastPage = useSelector(selectLastPage)\n\n  const loadSpecificPage = useCallback((newPage: number | string) => loadPage(Number(newPage)), [loadPage])\n  const loadFirst: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(0), [loadPage])\n  const loadLast: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(lastPage), [loadPage, lastPage])\n  const loadPrevious: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(currentPage - 1), [\n    currentPage,\n    loadPage,\n  ])\n  const loadNext: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(currentPage + 1), [\n    currentPage,\n    loadPage,\n  ])\n\n  // Render Empty divs to keep everything lined up\n  // Could achive the same with grid-column (might do that in the future)\n  return (\n    <PageRow className='page-navigation'>\n      {currentPage > 1 ? <PageNumber onClick={loadFirst}>0</PageNumber> : <div></div>}\n      {currentPage > 0 ? <PageNumber onClick={loadPrevious}>{currentPage - 1}</PageNumber> : <div></div>}\n      <CurrentNumber value={currentPage} onSubmit={loadSpecificPage} />\n      {currentPage < lastPage ? <PageNumber onClick={loadNext}>{currentPage + 1}</PageNumber> : <div></div>}\n      {currentPage < lastPage - 1 ? <PageNumber onClick={loadLast}>{lastPage}</PageNumber> : <div></div>}\n    </PageRow>\n  )\n}\n","import React, { useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport PostDataClass from '../../../data/Post'\nimport BaseFlexColumn from '../../common/FlexColumn'\nimport PageNavigation from './PageNavigation'\n\nconst FlexColumn = styled(BaseFlexColumn)(\n  ({ theme }) => css`\n    padding-bottom: ${theme.dimensions.gutter};\n  `\n)\n\ninterface PageLayoutProps<T> {\n  header?: JSX.Element\n  outOfItems?: JSX.Element\n  items?: T[]\n  pageSize: number\n  currentPage: number\n  hasMorePages: boolean\n  loadPage: (pageNumber: number) => void\n  ItemComponent: (props: T) => JSX.Element\n  isLoading: boolean\n  setLoading: (value: boolean) => void\n}\n\nexport default function PageLayout(props: PageLayoutProps<PostDataClass>) {\n  const { header, items, ItemComponent, currentPage, loadPage } = props\n\n  const scrollAndLoadPage = useCallback(\n    (value: number) => {\n      loadPage(value)\n      document.getElementsByClassName('page-navigation')[0].scrollIntoView()\n    },\n    [loadPage]\n  )\n\n  return (\n    <FlexColumn>\n      {header}\n      {items && items.length > 0 && (\n        <>\n          <PageNavigation currentPage={currentPage} loadPage={loadPage} />\n          {items?.map((item) => (\n            <ItemComponent key={item.id} {...item} />\n          ))}\n          <PageNavigation currentPage={currentPage} loadPage={scrollAndLoadPage} />\n        </>\n      )}\n    </FlexColumn>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport PostDataClass from '../../data/Post'\nimport { NO_OP } from '../../data/types'\nimport useAction from '../../hooks/useAction'\nimport useThrottledEffect from '../../hooks/useThrottledEffect'\nimport { getMoreResults } from '../../redux/actions'\nimport {\n  selectFullsceenState,\n  selectFullScreenIndex,\n  selectFullScreenPost,\n  selectOriginals,\n  selectPosts,\n} from '../../redux/selectors'\nimport Player from '../player/Player'\nimport { getCorrectSource } from '../post/Post'\n\nconst FullScreenDiv = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    left: 0;\n    top: 0;\n\n    display: grid;\n    grid-template-columns: 100vw;\n    grid-template-rows: 100vh;\n\n    background: ${theme.colors.backgroundColor};\n\n    z-index: 5;\n  `\n)\n\nexport default function Reader() {\n  const posts = useSelector(selectPosts)\n  const originals = useSelector(selectOriginals)\n  const isReaderOpen = useSelector(selectFullsceenState)\n  const fullScreenPost = useSelector(selectFullScreenPost) as PostDataClass\n  const fullScreenIndex = useSelector(selectFullScreenIndex)\n\n  const loadMore = useAction(getMoreResults)\n\n  useThrottledEffect(\n    () => {\n      if (fullScreenIndex + 3 > posts.length) {\n        loadMore()\n      }\n    },\n    2000,\n    [fullScreenIndex, loadMore, posts.length]\n  )\n\n  if (!isReaderOpen) {\n    return null\n  }\n\n  const { media_type, small_src, big_src, thumbnail_src, id, width, height } = fullScreenPost\n  const media_src = getCorrectSource(originals, big_src, small_src)\n\n  return (\n    <FullScreenDiv>\n      <Player\n        onLoad={NO_OP}\n        type={media_type}\n        src={media_src}\n        thumbnail_src={thumbnail_src}\n        postId={id}\n        width={width}\n        height={height}\n      />\n    </FullScreenDiv>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport InifinteColumn from '../layout/infinite/InfiniteColumn'\nimport Post from '../post/Post'\nimport { getMoreResults, getResults } from '../../redux/actions'\nimport {\n  selectHasMoreResults,\n  selectPageNumber,\n  selectPageSize,\n  selectPosts,\n  selectResultsLayout,\n} from '../../redux/selectors'\nimport LayoutHeader from '../layout/LayoutHeader'\nimport LayoutOutOfItems from '../layout/LayoutOutOfItems'\nimport LayoutLoadingItem from '../layout/LayoutLoadingItem'\nimport useAction from '../../hooks/useAction'\nimport { ResultLayout } from '../../data/types'\nimport PageLayout from '../layout/pages/PageLayout'\n\nimport Reader from '../reader/Reader'\n\nexport default function Search() {\n  const [isLoading, setLoading] = useState(false)\n\n  const posts = useSelector(selectPosts)\n  const hasMorePosts = useSelector(selectHasMoreResults)\n  const resultsLayout = useSelector(selectResultsLayout)\n  const pageSize = useSelector(selectPageSize)\n  const pageNumber = useSelector(selectPageNumber)\n\n  const dispatch = useDispatch()\n  const loadMore = useAction(getMoreResults)\n  const loadPage = useCallback((index: number) => dispatch(getResults(index)), [dispatch])\n\n  return (\n    <>\n      <Reader />\n      {resultsLayout === ResultLayout.INFINITE_COLUMN ? (\n        <InifinteColumn\n          Header={LayoutHeader}\n          OutOfItems={LayoutOutOfItems}\n          items={posts}\n          LoadingItem={LayoutLoadingItem}\n          hasMoreRows={hasMorePosts}\n          ItemComponent={Post}\n          loadMore={loadMore}\n          isLoading={isLoading}\n          setLoading={setLoading}\n        />\n      ) : (\n        <PageLayout\n          header={<LayoutHeader />}\n          pageSize={pageSize}\n          currentPage={pageNumber}\n          hasMorePages={hasMorePosts}\n          loadPage={loadPage}\n          ItemComponent={Post}\n          isLoading={isLoading}\n          setLoading={setLoading}\n          items={posts}\n        />\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}