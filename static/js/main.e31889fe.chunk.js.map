{"version":3,"sources":["redux/selectors.ts","data/utils.ts","components/common/Text.tsx","components/common/Lines.tsx","data/browserUtils.ts","data/TagDataClass.ts","components/common/Buttons.tsx","components/common/FlexColumn.tsx","redux/actions.ts","misc/formatting.ts","components/common/Surface.tsx","components/features/Header.tsx","components/styled/FlexImage.tsx","hooks/usePreference.tsx","components/widgets/ResetButton.tsx","icons/OutOfResults.png","data/types.ts","icons/Loading.tsx","icons/R34Icon.tsx","data/PostDataClass.ts","misc/prepare.ts","styled/mixins.tsx","components/features/ErrorBoundary.tsx","styled/themes/dark.ts","styled/themes/light.ts","styled/themes/coffee.ts","styled/themes/electric.ts","styled/themes/index.ts","GlobalStyles.tsx","components/pages/ErrorScreen.tsx","components/pages/LoadingScreen.tsx","components/widgets/CookieConfirmation.tsx","analytics/events.ts","redux/middleware/analytics.ts","redux/middleware/persistence.ts","misc/api.ts","data/CommentDataClass.ts","redux/middleware/requests.ts","redux/middleware/index.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/likes.ts","redux/reducers/suggestions.ts","redux/reducers/index.ts","redux/store.ts","components/pages/Terms.tsx","App.tsx","index.tsx"],"names":["selectActiveTags","state","tags","active","selectPosts","results","posts","selectCount","count","selectPageNumber","pageNumber","selectPreferences","preferences","selectResultsLayout","resultsLayout","selectPreloadVideos","selectOriginals","originals","selectCookies","cookies","selectFullsceenState","reader","isEnabled","selectAliases","aliases","selectPageSize","pageSize","selectTagSuggestionCount","tagSuggestionsCount","selectUseCorsProxy","useCorsProxy","selectShowMetadata","showMetadata","selectShowComments","showComments","selectSort","sort","selectSuggestions","suggestions","entries","selectActiveThemeId","themeId","selectNumberOfActiveTags","createSelector","Object","keys","length","selectAliasesAsList","values","flat","selectOutOfResults","selectHasMoreResults","outOfResults","selectLastPage","Math","ceil","selectFullScreenPost","postId","fullScreenPostId","find","post","id","selectFullScreenIndex","fullScreenPost","indexOf","selectMinRating","rated","ratedThreshold","selectNextIndex","selectedIndex","undefined","selectPreviousIndex","selectPostById","defaultMemoize","selectAliasesByTagName","tagName","selectLikedByPostId","likes","getMediaType","type","PostType","VIDEO","MediaType","small_src","includes","big_src","GIF","PICTURE","listToMap","list","keyProp","reduce","result","current","tagsToString","map","tag","modifier","name","parseUrl","value","URL","err","versionToNumber","majorMinorPatch","Number","split","join","download","url","filename","pop","fetch","headers","Headers","Origin","window","location","origin","mode","then","response","blob","a","document","createElement","href","createObjectURL","body","appendChild","click","remove","catch","e","console","error","getVersion","process","REACT_APP_VERSION","getVersionString","version","getCorrectSource","loadOriginal","getCorrectSourceOrigin","source","searchParams","get","boolToNumber","Title","styled","h2","theme","css","fontSizes","bigTitle","BigTitle","h1","flexRowWithGap","SmallTitle","h3","content","Faded","span","colors","subduedText","HorizontalLine","div","props","layerBg","VerticalLine","supportsFlexGap","flex","style","display","flexDirection","rowGap","isSupported","scrollHeight","parentNode","removeChild","supportsGap","supportsAspectRatio","supportsObjectFit","supportsFullscreen","fullscreenEnabled","openFullscreen","element","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","TagDataClass","types","Modifier","PLUS","this","TextButton","button","dimensions","blockHeight","bigSpacing","defaultBorder","gutter","timings","longTransitionTime","RedButton","dropShadow","transitionTime","primaryHover","BlockButton","AddButton","borderRadius","ModifierButton","FlexColumn","flexColumn","FlexColumnWithSpacing","centeredMaxWidth","ADD_ALIASES","ADD_POSTS","ADD_TAG","ENTER_FULLSCREEN","EXIT_FULLSCREEN","FETCH_COMMENTS","FETCH_PREFERENCES","FETCH_SUGGESTIONS","GET_MORE_RESULTS","GET_RESULTS","LIKE_POST","REMOVE_TAG","SAVE_PREFERENCES","SET_COMMENTS","SET_FULLSCREEN_POST","SET_POSTS","SET_PREFERENCE","SET_PREFERENCES","SET_SUGGESTIONS","addTag","removeTag","addAliases","forTag","addPosts","setPosts","setComments","comments","fetchComments","setPreference","key","setPreferences","getResults","getMoreResults","enterFullscreen","exitFullscreen","setFullScreenPost","likePost","setSuggestions","fetchSuggestions","fetchPreferences","savePreferences","formatCount","numberString","number","toFixed","formatSource","host","formatDuration","duration","min","trunc","sec","formatTagname","tagname","replace","serializeTagname","toLowerCase","formatTagnameAndCount","formatDateTime","date","toLocaleDateString","toLocaleTimeString","formatTime","milliseconds","formatUnit","unitSize","unit","unitString","layer","boxShadow","HeaderWrapper","header","flexColumnGap","TitleBar","layerBgSolid","MenuBar","nav","flexRowGap","hugeSpacing","LocationStyledLink","Link","to","accentColor","text","Header","useLocation","pathname","role","size","RouteName","SEARCH","HELP","SETTINGS","ABOUT","FlexImage","img","flexMedia","preserveAspectRatio","usePreference","dispatch","useDispatch","useSelector","setValue","useCallback","ResetButton","reset","localStorage","clear","hash","reload","onClick","TagType","ResultLayout","ThemeId","RatingType","PreferenceKey","NO_OP","StyledSvg","svg","Loading","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","R34Icon","useTheme","width","height","className","transform","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","PostDataClass","score","rating","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","Date","parse","prepareTag","dirtyTag","preparePost","sample_url","preview_url","t","Boolean","borderWidth","backgroundColor","backgroundColor2","flexColumnWithGap","gridWithGap","gap","amount","bodyWidth","defaultBlock","shadow","radius","color","mediaStyle","ErrorBoundary","hasError","fallback","children","React","Component","dark","spacing","hoverAccent","layerBgHighlight","liked","light","coffee","electric","themes","DARK","LIGHT","COFFEE","ELECTRIC","defaultThemeId","createGlobalStyle","FullScreenCentered","ErrorScreen","GlobalStyles","src","outOfResultsPicture","alt","LoadingScreen","CookieWrapper","StyledSpan","CookieConfirmation","COOKIES","setCookies","handleAccept","aria-label","AnalyticsEventId","firebaseApp","analytics","saveTimeout","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","eventLogging","store","next","action","getState","firebase","initializeApp","activeTags","page_number","payload","active_tags","searchEvent","logEvent","persistence","clearTimeout","setTimeout","auth","gapi","auth2","getAuthInstance","isSignedIn","load","client","init","drive","files","spaces","appDataResponse","fileId","preferenceFile","log","Promise","resolve","create","fields","resource","parents","mimeType","res","method","Authorization","getToken","access_token","JSON","stringify","sourceTags","SOURCE","ratingTags","RATING","API","activeApi","apiUrl2","apiUrl1","searchTerm","limit","defaultPageSize","json","startsWith","matchingRating","filter","matchingSourceTags","minScore","buildPostUrl","encodeURIComponent","page","tagList","normalTags","OR","orTags","tagParts","push","parseComment","rawComment","CommentDataClass","creator","apiRequests","hasMoreResults","minRating","api","getPosts","getAliases","sanitizedAliases","b","alias","getTags","warn","rawComments","middleware","composeWithDevTools","applyMiddleware","requests","initialPreferencesState","infinite","preloadVideos","INFINITE_COLUMN","produce","draft","assign","initialResultsState","postCount","postIndex","findIndex","p","initialTagsState","newTag","tagToRemove","initialReaderState","setPostId","now","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","persistor","persistStore","SectionBody","Surface","Section","Terms","title","Help","lazy","Settings","Search","About","Privacy","App","useEffect","client_id","scope","loading","ThemedApp","exact","path","PRIVACY","TERMS","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e31889fe.chunk.js","sourcesContent":["import { createSelector, defaultMemoize } from 'reselect'\r\nimport { DefaultRootState } from '../react-redux'\r\n\r\n// Simple selectors\r\nexport const selectActiveTags = (state: DefaultRootState) => state.tags.active\r\nexport const selectResults = (state: DefaultRootState) => state.results\r\nexport const selectPosts = (state: DefaultRootState) => state.results.posts\r\nexport const selectCount = (state: DefaultRootState) => state.results.count\r\nexport const selectPageNumber = (state: DefaultRootState) => state.results.pageNumber\r\nexport const selectPreferences = (state: DefaultRootState) => state.preferences\r\nexport const selectResultsLayout = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectPreloadVideos = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectInfinite = (state: DefaultRootState) => state.preferences.infinite\r\nexport const selectOriginals = (state: DefaultRootState) => state.preferences.originals\r\nexport const selectRated = (state: DefaultRootState) => state.preferences.rated\r\nexport const selectRatedThreshold = (state: DefaultRootState) => state.preferences.ratedThreshold\r\nexport const selectCookies = (state: DefaultRootState) => state.preferences.cookies\r\nexport const selectFullsceenState = (state: DefaultRootState) => state.reader.isEnabled\r\nexport const selectFullsceenPostId = (state: DefaultRootState) => state.reader.postId\r\nexport const selectAliases = (state: DefaultRootState) => state.tags.aliases\r\nexport const selectPageSize = (state: DefaultRootState) => state.preferences.pageSize\r\nexport const selectTagSuggestionCount = (state: DefaultRootState) => state.preferences.tagSuggestionsCount\r\nexport const selectUseCorsProxy = (state: DefaultRootState) => state.preferences.useCorsProxy\r\nexport const selectShowMetadata = (state: DefaultRootState) => state.preferences.showMetadata\r\nexport const selectShowComments = (state: DefaultRootState) => state.preferences.showComments\r\nexport const selectSort = (state: DefaultRootState) => state.preferences.sort\r\nexport const selectSuggestions = (state: DefaultRootState) => state.suggestions.entries\r\nexport const selectActiveThemeId = (state: DefaultRootState) => state.preferences.themeId\r\n\r\n// Memoized selectors\r\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\r\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\r\n\r\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\r\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\r\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\r\nexport const selectLastPage = createSelector(\r\n  selectCount,\r\n  selectPageSize,\r\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\r\n)\r\nexport const selectFullScreenPost = createSelector(selectPosts, selectFullsceenPostId, (posts, fullScreenPostId) =>\r\n  posts.find((post) => post.id === fullScreenPostId)\r\n)\r\nexport const selectFullScreenIndex = createSelector(selectPosts, selectFullScreenPost, (posts, fullScreenPost) =>\r\n  fullScreenPost ? posts.indexOf(fullScreenPost) : -1\r\n)\r\nexport const selectMinRating = createSelector(selectRated, selectRatedThreshold, (rated, ratedThreshold) =>\r\n  rated ? ratedThreshold : 0\r\n)\r\nexport const selectNextIndex = createSelector(selectPosts, selectFullScreenIndex, (posts, selectedIndex) =>\r\n  selectedIndex + 1 < posts.length ? selectedIndex + 1 : undefined\r\n)\r\nexport const selectPreviousIndex = createSelector(selectFullScreenIndex, (selectedIndex) =>\r\n  selectedIndex > 0 ? selectedIndex - 1 : undefined\r\n)\r\n\r\n// Parameterized selectors\r\nexport const selectPostById = defaultMemoize((id: number) => {\r\n  return createSelector(selectPosts, (posts) => {\r\n    return posts.find((post) => post.id === id)\r\n  })\r\n})\r\n\r\nexport const selectAliasesByTagName = defaultMemoize((tagName: string) => {\r\n  return createSelector(selectAliases, (aliases) => {\r\n    return aliases[tagName]\r\n  })\r\n})\r\n\r\nexport const selectLikedByPostId = defaultMemoize((id: number) => (state: DefaultRootState) => id in state.likes)\r\n","import PostDataClass from './PostDataClass'\nimport TagDataClass from './TagDataClass'\nimport { PostType, MediaType } from './types'\n\nexport const getMediaType = (type: PostType, post: PostDataClass) => {\n  if (type === PostType.VIDEO) {\n    return MediaType.VIDEO\n  }\n\n  // can't use .endsWith because of queryString\n  if (post.small_src.includes('.gif') || post.big_src.includes('.gif')) {\n    return MediaType.GIF\n  }\n\n  return MediaType.PICTURE\n}\n\nexport function getUrlParameter(src: string) {\n  return new URL(src).searchParams.get('url') || ''\n}\n\n/**\n * Converts a list of objects into a map.\n * @param list The original list\n * @param keyProp The keyProp parameter defines which property of the objects will be used as the index for the map\n */\nexport const listToMap = <T>(list: T[], keyProp: string): Record<string, T> => {\n  return list.reduce((result: Record<string, T>, current: any) => {\n    result[current[keyProp]] = current\n    return result\n  }, {})\n}\n\n/**\n * Joins tags together for analytics event\n */\nexport function tagsToString(tags: Record<string, TagDataClass>) {\n  return Object.values(tags)\n    .map((tag) => `${tag.modifier}${tag.name}`)\n    .sort()\n}\n\n/**\n * Returns a URL object when the value is a hyperlink. Else undefined\n */\nexport function parseUrl(value: string) {\n  try {\n    return new URL(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * converts a version like \"1.2.7\" into 127\n */\nexport function versionToNumber(majorMinorPatch: string) {\n  return Number(majorMinorPatch.split('.').join(''))\n}\n\n/**\n * Hacky ass way to download images cross origin. Could solve this by hosting both the app and the api on the same domain.\n */\nexport function download(url: string) {\n  const filename = url.split('/').pop() || ''\n\n  fetch(url, {\n    headers: new Headers({\n      Origin: window.location.origin,\n    }),\n    mode: 'cors',\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      var a = document.createElement('a')\n      a.download = filename\n      a.href = window.URL.createObjectURL(blob)\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    })\n    .catch((e) => console.error(e))\n}\n\n/**\n * Returns the current version of the project\n */\nexport function getVersion() {\n  // Some browsers fail to get environment variables. In that case return unknown.\n  if (process?.env?.REACT_APP_VERSION) {\n    return process.env.REACT_APP_VERSION\n  }\n\n  return 'unknown'\n}\n\n/**\n * Render ready version.\n */\nexport function getVersionString() {\n  const version = getVersion()\n\n  return version === 'unknown' ? 'Latest Release' : `Version ${version}`\n}\n\n/**\n * Returns the correct source based on preferences\n */\nexport function getCorrectSource(loadOriginal: boolean, useCorsProxy: boolean, big_src: string, small_src: string) {\n  const source = loadOriginal ? big_src : small_src\n  return getCorrectSourceOrigin(useCorsProxy, source)\n}\n\n/**\n * Returns the proxy source or direct depending on prefererence\n */\nexport function getCorrectSourceOrigin(useCorsProxy: boolean, source: string) {\n  return useCorsProxy ? source : getUrlParameter(source)\n}\n\nexport function boolToNumber(value: boolean) {\n  return value ? 1 : 0\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n","export const supportsFlexGap = (() => {\r\n  // create flex container with row-gap set\r\n  var flex = document.createElement('div')\r\n  flex.style.display = 'flex'\r\n  flex.style.flexDirection = 'column'\r\n  flex.style.rowGap = '1px'\r\n\r\n  // create two, elements inside it\r\n  flex.appendChild(document.createElement('div'))\r\n  flex.appendChild(document.createElement('div'))\r\n\r\n  // append to the DOM (needed to obtain scrollHeight)\r\n  document.body.appendChild(flex)\r\n  var isSupported = flex.scrollHeight === 1 // flex container should be 1px high from the row-gap\r\n  //@ts-expect-error\r\n  flex.parentNode.removeChild(flex)\r\n\r\n  return isSupported\r\n})()\r\n\r\nexport const supportsGap = 'gap' in document.body.style\r\nexport const supportsAspectRatio = 'aspect-ratio' in document.body.style\r\nexport const supportsObjectFit = 'object-fit' in document.body.style\r\nexport const supportsFullscreen = document.fullscreenEnabled\r\n\r\nexport function openFullscreen(element: Element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.webkitRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.webkitRequestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.msRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.msRequestFullscreen()\r\n  }\r\n}\r\n\r\nexport function closeFullscreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.webkitExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.webkitExitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.msExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.msExitFullscreen()\r\n  }\r\n}\r\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, dropShadow, primaryHover } from '../../styled/mixins'\n\nconst TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n    display: inline-flex;\n    gap: ${theme.dimensions.gutter};\n    align-items: center;\n    place-content: center;\n\n    transition: all ${theme.timings.longTransitionTime} ease-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    ${dropShadow({ theme })}\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-out;\n    }\n\n    :active {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)`\n  ${primaryHover}\n`\n\nexport const BlockButton = styled(RedButton)`\n  width: 100%;\n\n  :active {\n    transform: scaleX(1.03) scaleY(1.1);\n  }\n`\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import { PreferenceKey, TagLike } from '../data/types'\nimport TagDataClass from '../data/TagDataClass'\nimport PostDataClass from '../data/PostDataClass'\nimport CommentDataClass from '../data/CommentDataClass'\n\n// Action Names\nexport const ADD_ALIASES = `r34-react/ADD_ALIASES`\nexport const ADD_POSTS = `r34-react/ADD_POSTS`\nexport const ADD_TAG = `r34-react/ADD_TAG`\nexport const ENTER_FULLSCREEN = `r34-react/ENTER_FULLSCREEN`\nexport const EXIT_FULLSCREEN = 'r34-react/EXIT_FULLSCREEN'\nexport const FETCH_COMMENTS = `r34-react/FETCH_COMMENTS`\nexport const FETCH_PREFERENCES = `r34-react/FETCH_PREFERENCES`\nexport const FETCH_SUGGESTIONS = `r34-react/FETCH_SUGGESTIONS`\nexport const GET_MORE_RESULTS = `r34-react/GET_MORE_RESULTS`\nexport const GET_RESULTS = `r34-react/GET_RESULTS`\nexport const LIKE_POST = `r34-react/LIKE_POST`\nexport const REMOVE_TAG = `r34-react/REMOVE_TAG`\nexport const SAVE_PREFERENCES = 'r34-react/SAVE_PREFERENCES'\nexport const SET_COMMENTS = `r34-react/SET_COMMENTS`\nexport const SET_FULLSCREEN_POST = `r34-react/SET_FULLSCREEN_POST`\nexport const SET_POSTS = `r34-react/SET_POSTS`\nexport const SET_PREFERENCE = `r34-react/SET_PREFERENCE`\nexport const SET_PREFERENCES = `r34-react/SET_PREFERENCES`\nexport const SET_SUGGESTIONS = `r34-react/SET_SUGGESTIONS`\n\n// Action Types\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\ninterface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: number\n  pageNumber?: number\n}\n\ninterface SetCommentsAction {\n  type: typeof SET_COMMENTS\n  postId: number\n  comments: CommentDataClass[]\n}\n\ninterface FetchCommentsAction {\n  type: typeof FETCH_COMMENTS\n  postId: number\n}\n\ninterface SetPreferenceAction {\n  type: typeof SET_PREFERENCE\n  key: PreferenceKey\n  value: any\n}\n\ninterface SetPreferencesAction {\n  type: typeof SET_PREFERENCES\n  preferences: Partial<Record<PreferenceKey, any>>\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\ninterface LikePostAction {\n  type: typeof LIKE_POST\n  postId: number\n}\n\ninterface SetSuggestionsAction {\n  type: typeof SET_SUGGESTIONS\n  suggestions: TagLike[]\n}\n\ninterface FetchSuggestionsAction {\n  type: typeof FETCH_SUGGESTIONS\n  value: string\n}\n\ninterface FetchPreferencesAction {\n  type: typeof FETCH_PREFERENCES\n}\n\ninterface SavePreferencesAction {\n  type: typeof SAVE_PREFERENCES\n}\n\nexport type AppAction =\n  | AddAliasesAction\n  | AddPostsAction\n  | AddTagAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | FetchCommentsAction\n  | FetchPreferencesAction\n  | FetchSuggestionsAction\n  | GetMoreResultsAction\n  | GetResultsAction\n  | LikePostAction\n  | RemoveTagAction\n  | SavePreferencesAction\n  | SetCommentsAction\n  | SetFullScreenPostAction\n  | SetPostsAction\n  | SetPreferenceAction\n  | SetPreferencesAction\n  | SetSuggestionsAction\n\n// Action Creators\nexport function addTag(tag: TagDataClass): AddTagAction {\n  return {\n    type: ADD_TAG,\n    tag,\n  }\n}\n\nexport function removeTag(tag: TagDataClass): RemoveTagAction {\n  return {\n    type: REMOVE_TAG,\n    tag,\n  }\n}\n\nexport function addAliases(aliases: TagDataClass[], forTag: string): AddAliasesAction {\n  return {\n    type: ADD_ALIASES,\n    aliases,\n    forTag,\n  }\n}\n\nexport function addPosts(posts: PostDataClass[]): AddPostsAction {\n  return {\n    type: ADD_POSTS,\n    posts,\n  }\n}\n\nexport function setPosts(posts: PostDataClass[], count: number, pageNumber: number = 0): SetPostsAction {\n  return {\n    type: SET_POSTS,\n    posts,\n    count,\n    pageNumber,\n  }\n}\n\nexport function setComments(postId: number, comments: CommentDataClass[]): SetCommentsAction {\n  return {\n    type: SET_COMMENTS,\n    postId,\n    comments,\n  }\n}\n\nexport function fetchComments(postId: number): FetchCommentsAction {\n  return {\n    type: FETCH_COMMENTS,\n    postId,\n  }\n}\n\nexport function setPreference(key: PreferenceKey, value: any): SetPreferenceAction {\n  return {\n    type: SET_PREFERENCE,\n    key,\n    value,\n  }\n}\n\nexport function setPreferences(preferences: Partial<Record<PreferenceKey, any>>): SetPreferencesAction {\n  return {\n    type: SET_PREFERENCES,\n    preferences,\n  }\n}\n\nexport function getResults(pageNumber: number = 0): GetResultsAction {\n  return {\n    type: GET_RESULTS,\n    pageNumber,\n  }\n}\n\nexport function getMoreResults(): GetMoreResultsAction {\n  return {\n    type: GET_MORE_RESULTS,\n  }\n}\n\nexport function enterFullscreen(postId: number): EnterFullcreenAction {\n  return {\n    type: ENTER_FULLSCREEN,\n    postId,\n  }\n}\n\nexport function exitFullscreen(): ExitFullscreenAction {\n  return {\n    type: EXIT_FULLSCREEN,\n  }\n}\n\nexport function setFullScreenPost(postId: number): SetFullScreenPostAction {\n  return {\n    type: SET_FULLSCREEN_POST,\n    postId,\n  }\n}\n\nexport function likePost(postId: number): LikePostAction {\n  return {\n    type: LIKE_POST,\n    postId,\n  }\n}\n\nexport function setSuggestions(suggestions: TagLike[]): SetSuggestionsAction {\n  return {\n    type: SET_SUGGESTIONS,\n    suggestions,\n  }\n}\n\nexport function fetchSuggestions(value: string): FetchSuggestionsAction {\n  return {\n    type: FETCH_SUGGESTIONS,\n    value,\n  }\n}\n\nexport function fetchPreferences(): FetchPreferencesAction {\n  return {\n    type: FETCH_PREFERENCES,\n  }\n}\n\nexport function savePreferences(): SavePreferencesAction {\n  return {\n    type: SAVE_PREFERENCES,\n  }\n}\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname\n    .replace(/_/g, ' ')\n    .replace(/source:/g, ' ')\n    .replace(/rating:/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n\nexport function formatDateTime(date: Date) {\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\nexport function formatTime(milliseconds: number) {\n  if (milliseconds >= 315576e5) {\n    return formatUnit(milliseconds, 315576e5, 'year')\n  }\n  if (milliseconds >= 26297568e2) {\n    return formatUnit(milliseconds, 26297568e2, 'month')\n  }\n\n  if (milliseconds >= 6048e5) {\n    return formatUnit(milliseconds, 6048e5, 'week')\n  }\n\n  if (milliseconds >= 854e5) {\n    return formatUnit(milliseconds, 854e5, 'day')\n  }\n\n  if (milliseconds >= 36e5) {\n    return formatUnit(milliseconds, 36e5, 'hour')\n  }\n\n  if (milliseconds >= 6e4) {\n    return formatUnit(milliseconds, 6e4, 'minute')\n  }\n\n  if (milliseconds >= 1e3) {\n    return formatUnit(milliseconds, 1e3, 'second')\n  }\n\n  return `${milliseconds} ms`\n}\n\nfunction formatUnit(value: number, unitSize: number, unit: string) {\n  const result = (value / unitSize).toFixed(0)\n\n  const unitString = result === '1' ? unit : `${unit}s`\n\n  return `${result} ${unitString}`\n}\n","import styled from 'styled-components'\nimport { borderRadius, boxShadow, gutter, layer } from '../../styled/mixins'\n\nexport default styled.div`\n  display: grid;\n  ${gutter}\n  ${layer}\n  ${boxShadow}\n  ${borderRadius}\n  width: 100%;\n`\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { boxShadow, flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${boxShadow({ theme })}\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.text};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.ABOUT}>\n          About\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { preserveAspectRatio, flexMedia } from '../../styled/mixins'\n\nconst FlexImage = styled.img`\n  ${flexMedia}\n  ${preserveAspectRatio}\n`\n\nexport default FlexImage\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setPreference } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setValue = useCallback((value: any) => dispatch(setPreference(key, value)), [dispatch, key])\n\n  return [preferences[key], setValue]\n}\n","import React, { useCallback } from 'react'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetButton(props: any) {\r\n  const reset = useCallback(() => {\r\n    localStorage.clear()\r\n    window.location.hash = ''\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <BlockButton onClick={reset} {...props}>\r\n      Reset Application\r\n    </BlockButton>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OutOfResults.9c71691c.png\";","/**\r\n * Metadata. Describes the kind of tag.\r\n */\r\nexport enum TagType {\r\n  GENERAL = 'general',\r\n  CHARACTER = 'character',\r\n  AMBIGUOUS = 'ambiguous',\r\n  ARTIST = 'artist',\r\n  COPYRIGHT = 'copyright',\r\n  RATING = 'rating',\r\n  SOURCE = 'source',\r\n  METADATA = 'metadata',\r\n}\r\n\r\n/**\r\n * Describes how the tag should influence the search.\r\n */\r\nexport enum Modifier {\r\n  PLUS = '+',\r\n  MINUS = '-',\r\n  OR = '~',\r\n}\r\n\r\n/**\r\n * Type of a post according to the backend.\r\n */\r\nexport enum PostType {\r\n  VIDEO = 'video',\r\n  IMAGE = 'image',\r\n}\r\n\r\n/**\r\n * Derived form PostType. On the frontend I split PostType.IMAGE into GIF and PICTURE.\r\n */\r\nexport enum MediaType {\r\n  VIDEO = 'video',\r\n  PICTURE = 'picture',\r\n  GIF = 'gif',\r\n}\r\n\r\n/**\r\n * The possible layouts.\r\n */\r\nexport enum ResultLayout {\r\n  INFINITE_COLUMN = 'infinite_column',\r\n  PAGES = 'pages',\r\n}\r\n\r\n/**\r\n * The possible themes.\r\n */\r\nexport enum ThemeId {\r\n  DARK = 'dark',\r\n  LIGHT = 'light',\r\n  COFFEE = 'coffee',\r\n  ELECTRIC = 'electric',\r\n}\r\n\r\n/**\r\n * All routes of the app.\r\n */\r\nexport enum RouteName {\r\n  SEARCH = '/',\r\n  HELP = '/help',\r\n  SETTINGS = '/settings',\r\n  ABOUT = '/about',\r\n  PRIVACY = '/privacy',\r\n  TERMS = '/terms',\r\n}\r\n\r\n/**\r\n * Explicity rating as provided by the backend.\r\n */\r\nexport enum RatingType {\r\n  SAFE = 'safe',\r\n  QUESTIONABLE = 'questionable',\r\n  EXPLICIT = 'explicit',\r\n}\r\n\r\n/**\r\n * All preferences.\r\n */\r\n\r\nexport enum PreferenceKey {\r\n  INFINITE = 'infinite',\r\n  RATED = 'rated',\r\n  RATEDThreshold = 'ratedThreshold',\r\n  ORIGINALS = 'originals',\r\n  COOKIES = 'cookies',\r\n  PRELOAD_VIDEOS = 'preloadVideos',\r\n  TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount',\r\n  RESULTS_LAYOUT = 'resultsLayout',\r\n  PAGE_SIZE = 'pageSize',\r\n  USE_CORS_PROXY = 'useCorsProxy',\r\n  SHOW_METADATA = 'showMetadata',\r\n  SHOW_COMMENTS = 'showComments',\r\n  SORT = 'sort',\r\n  THEME_ID = 'themeId',\r\n}\r\n\r\n/**\r\n * One-time definition of an empty function. Reusing this improves React's performance as it does not break memoization.\r\n */\r\nexport const NO_OP = () => {}\r\n\r\n/**\r\n * Same data as a tag but different names\r\n */\r\nexport type TagLike = {\r\n  name: string\r\n  posts: number\r\n  types: TagType[]\r\n}\r\n\r\nexport type ActiveTab = 'tags' | 'comments' | 'metadata'\r\n","import React from 'react'\nimport styled from 'styled-components'\n\n// Don't use theme here so the loadingScreen is independent\nconst StyledSvg = styled.svg`\n  height: 32px;\n  padding: 8px;\n`\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='25' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='44' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number; className?: string }) {\n  const theme = useTheme()\n\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={props.size}\n      height={props.size}\n      viewBox='0 0 12.7 12.7'\n      className={props.className}\n    >\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import { RatingType, PostType } from './types'\nimport TagDataClass from './TagDataClass'\nimport CommentDataClass from './CommentDataClass'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: number\n  change: string\n\n  comments?: CommentDataClass[]\n\n  constructor(\n    id: number,\n    score: number,\n    rating: RatingType,\n    source: string,\n    tags: TagDataClass[],\n    media_type: PostType,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = Date.parse(created_at)\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { TagType, Modifier, RatingType, PostType } from '../data/types'\n\n/**\n * A tag as received from the backend.\n * All strings\n */\ninterface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\n/**\n * A post as received from the backend.\n * All strings\n */\ninterface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\n/**\n * Introduce types for nicer use later\n */\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\n/**\n * Introduce types for nicer use later and parse tag names to tag objects.\n */\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type as PostType,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","import { css, DefaultTheme } from 'styled-components'\r\nimport { supportsAspectRatio, supportsFlexGap, supportsGap } from '../data/browserUtils'\r\n\r\nexport interface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    ${borderRadius({ theme })}\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    ${boxShadow({ theme })}\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColumn() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\nexport function flexColumnWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gridWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: grid;\r\n    ${gap(theme.dimensions.gutter)}\r\n  `\r\n}\r\n\r\nexport function flexRowWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n    ${flexRowGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gap(amount: string) {\r\n  return supportsGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexRowGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexColumnGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    ${gap(theme.dimensions.gutter)};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  if (!width || !height) {\r\n    return ''\r\n  }\r\n\r\n  return supportsAspectRatio\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : css`\r\n        max-width: 100%;\r\n        height: auto;\r\n      `\r\n}\r\n\r\nexport function borderRadius({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n}\r\n\r\nexport function boxShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    box-shadow: 0 0 ${theme.shadow.radius} ${theme.shadow.color};\r\n  `\r\n}\r\n\r\nexport function dropShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    filter: drop-shadow(0 0 ${theme.shadow.radius} ${theme.shadow.color});\r\n  `\r\n}\r\n\r\nexport function mediaStyle() {\r\n  return css`\r\n    ${borderRadius}\r\n    ${boxShadow}\r\n    grid-area: 1/1/2/2;\r\n    z-index: 1;\r\n  `\r\n}\r\n","import React from 'react'\r\n\r\ninterface ErrorBoundaryProps {\r\n  fallback: JSX.Element\r\n  children: JSX.Element\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","const dark = {\r\n  dimensions: {\r\n    borderRadius: '3px',\r\n    borderWidth: '2px',\r\n    spacing: '4px',\r\n    bigSpacing: '8px',\r\n    hugeSpacing: '16px',\r\n    gutter: '8px',\r\n    blockHeight: '32px',\r\n    bodyWidth: '1000px',\r\n  },\r\n  colors: {\r\n    text: '#fff',\r\n    accentColor: '#ee3344',\r\n    hoverAccent: '#ee3344',\r\n    backgroundColor: '#121212',\r\n    backgroundColor2: '#fff',\r\n    subduedText: '#ffffff80',\r\n    layerBg: '#ffffff11',\r\n    layerBgSolid: '#222222',\r\n    layerBgHighlight: '#ffffff22',\r\n    liked: '#ff0d50',\r\n  },\r\n  shadow: {\r\n    radius: '4px',\r\n    color: '#000',\r\n  },\r\n  timings: {\r\n    transitionTime: '0.2s',\r\n    longTransitionTime: '0.2s',\r\n  },\r\n  fontSizes: {\r\n    content: '15px',\r\n    bigTitle: '24px',\r\n  },\r\n}\r\n\r\nexport default dark\r\n","import dark from './dark'\r\n\r\nconst light = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    text: '#000',\r\n    backgroundColor: '#fff',\r\n    backgroundColor2: '#fff',\r\n    subduedText: '#00000080',\r\n    layerBg: '#00000011',\r\n    layerBgSolid: '#dddddd',\r\n    layerBgHighlight: '#00000022',\r\n  },\r\n}\r\n\r\nexport default light\r\n","import dark from './dark'\r\n\r\nconst coffee = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    backgroundColor: '#161410',\r\n    backgroundColor2: '#fff',\r\n    layerBg: '#ffffff11',\r\n    layerBgSolid: '#262420',\r\n    layerBgHighlight: '#ffffff22',\r\n  },\r\n}\r\n\r\nexport default coffee\r\n","import dark from './dark'\r\n\r\nconst electric = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    accentColor: '#2ae',\r\n    hoverAccent: '#2ae',\r\n  },\r\n}\r\n\r\nexport default electric\r\n","import { DefaultTheme } from 'styled-components'\r\nimport { ThemeId } from '../../data/types'\r\nimport light from './light'\r\nimport dark from './dark'\r\nimport coffee from './coffee'\r\nimport electric from './electric'\r\n\r\nconst themes: Record<ThemeId, DefaultTheme> = {\r\n  [ThemeId.DARK]: dark,\r\n  [ThemeId.LIGHT]: light,\r\n  [ThemeId.COFFEE]: coffee,\r\n  [ThemeId.ELECTRIC]: electric,\r\n}\r\n\r\nexport default themes\r\n\r\nexport const defaultThemeId = ThemeId.DARK\r\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.text};\n      background-color: ${theme.colors.backgroundColor};\n      transition: color 0.4s, background-color 0.4s;\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    // Not a touch device\n    // Touch devices have nice scrollbars by default\n    @media (pointer: fine) {\n      // Underline stuff that is focused on non-touch devices\n      // makes keyboard navigation clearer\n      :focus {\n        text-decoration: underline;\n      }\n\n      ::-webkit-scrollbar {\n        height: 8px;\n        transition: all ${theme.timings.transitionTime} ease-in-out;\n\n        :hover {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      /* Track */\n      ::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      /* Handle */\n      :hover {\n        ::-webkit-scrollbar {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: ${theme.colors.layerBg};\n        border-radius: 1000px;\n\n        :hover {\n          background: ${theme.colors.layerBgHighlight};\n        }\n      }\n    }\n  `\n)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\r\nimport FlexImage from '../styled/FlexImage'\r\nimport themes, { defaultThemeId } from '../../styled/themes'\r\nimport GlobalStyles from '../../GlobalStyles'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  align-content: center;\r\n  padding: 30px;\r\n  background: ${({ theme }) => theme.colors.backgroundColor};\r\n\r\n  > * {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default function ErrorScreen() {\r\n  const theme = themes[defaultThemeId]\r\n  return (\r\n    <FullScreenCentered theme={theme}>\r\n      <GlobalStyles theme={theme} />\r\n      <FlexImage src={outOfResultsPicture} alt='Shironeko does not understand' />\r\n      <h1>Sorry about that...</h1>\r\n      <ResetButton theme={theme} />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport usePreference from '../../hooks/usePreference'\nimport { PreferenceKey } from '../../data/types'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: ${theme.colors.text};\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter};\n    z-index: 100;\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const [cookies, setCookies] = usePreference(PreferenceKey.COOKIES)\n\n  const handleAccept = useCallback(() => setCookies(true), [setCookies])\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={handleAccept} aria-label='Allow Cookies'>\n        Okay\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import TagDataClass from '../data/TagDataClass'\nimport { tagsToString } from '../data/utils'\nimport { PreferencesState } from '../redux/reducers/preferences'\n\nenum AnalyticsEventId {\n  SEARCH = 'r34_search',\n}\n\n/**\n * Should be called whenever a new search is started.\n */\nexport const searchEvent = (\n  activeTags: Record<string, TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n) => ({\n  id: AnalyticsEventId.SEARCH,\n  payload: {\n    active_tags: tagsToString(activeTags),\n    page_number,\n    preferences,\n  },\n})\n","import { AppAction, SET_POSTS, ADD_POSTS } from '../actions'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport { searchEvent } from '../../analytics/events'\r\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\r\nimport { MiddlewareAPI, Dispatch } from 'redux'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\r\n  authDomain: 'r34-react.firebaseapp.com',\r\n  databaseURL: 'https://r34-react.firebaseio.com',\r\n  projectId: 'r34-react',\r\n  storageBucket: 'r34-react.appspot.com',\r\n  messagingSenderId: '844749417844',\r\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\r\n  measurementId: 'G-27J3QXZ8YR',\r\n}\r\n\r\nlet firebaseApp: firebase.app.App\r\nlet analytics: firebase.analytics.Analytics\r\n\r\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\r\n  const state = store.getState()\r\n  const cookies = selectCookies(state)\r\n\r\n  // Only send analytics if the user consented\r\n  if (cookies) {\r\n    if (!firebaseApp) {\r\n      firebaseApp = firebase.initializeApp(config)\r\n      analytics = firebaseApp.analytics()\r\n    }\r\n\r\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\r\n      const activeTags = selectActiveTags(state)\r\n      const pageNumber = selectPageNumber(state)\r\n      const preferences = selectPreferences(state)\r\n      const { id, payload } = searchEvent(activeTags, pageNumber, preferences)\r\n      analytics.logEvent<typeof id>(id, payload)\r\n    }\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default eventLogging\r\n","import { MiddlewareAPI } from 'redux'\r\nimport { Dispatch } from 'react'\r\nimport {\r\n  AppAction,\r\n  FETCH_PREFERENCES,\r\n  savePreferences,\r\n  SAVE_PREFERENCES,\r\n  setPreferences,\r\n  SET_PREFERENCE,\r\n} from '../actions'\r\nimport { PreferenceKey } from '../../data/types'\r\n\r\nlet saveTimeout: NodeJS.Timeout\r\n\r\nconst persistence = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\r\n  if (action.type === SET_PREFERENCE) {\r\n    if (saveTimeout) {\r\n      clearTimeout(saveTimeout)\r\n    }\r\n\r\n    saveTimeout = setTimeout(() => {\r\n      store.dispatch(savePreferences())\r\n    }, 1000)\r\n  }\r\n\r\n  if (action.type === FETCH_PREFERENCES) {\r\n    const auth = gapi?.auth2?.getAuthInstance()\r\n    if (auth) {\r\n      if (auth.isSignedIn) {\r\n        gapi.load('client', async () => {\r\n          await gapi.client.init({})\r\n          await gapi.client.load('drive', 'v3')\r\n\r\n          const appDataResponse = await gapi.client.drive.files.list({ spaces: 'appDataFolder' })\r\n          const fileId = appDataResponse.result?.files?.[0].id\r\n\r\n          if (fileId) {\r\n            const preferenceFile = await gapi.client.drive.files.get({ fileId, alt: 'media' })\r\n\r\n            store.dispatch(setPreferences(preferenceFile.result as Record<PreferenceKey, any>))\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  if (action.type === SAVE_PREFERENCES) {\r\n    console.log('Saving')\r\n    const auth = gapi?.auth2?.getAuthInstance()\r\n    if (auth) {\r\n      if (auth.isSignedIn) {\r\n        gapi.load('client', async () => {\r\n          await gapi.client.init({})\r\n          await gapi.client.load('drive', 'v3')\r\n\r\n          const preferences = store.getState().preferences\r\n\r\n          const appDataResponse = await gapi.client.drive.files.list({ spaces: 'appDataFolder' })\r\n\r\n          const fileId: string | undefined = await new Promise(async (resolve) => {\r\n            if (appDataResponse.result.files?.length === 0) {\r\n              const res = await gapi.client.drive.files.create({\r\n                fields: 'id',\r\n                resource: {\r\n                  name: 'r34-mobile-preferences.json',\r\n                  parents: ['appDataFolder'],\r\n                  mimeType: 'application/json',\r\n                },\r\n              })\r\n\r\n              resolve(res.result.id)\r\n            } else {\r\n              resolve(appDataResponse.result?.files?.[0].id)\r\n            }\r\n          })\r\n\r\n          if (fileId) {\r\n            await fetch(`https://www.googleapis.com/upload/drive/v3/files/${fileId}?uploadType=media`, {\r\n              method: 'PATCH',\r\n              headers: new Headers({ Authorization: `Bearer ${gapi.auth.getToken().access_token}` }),\r\n              body: JSON.stringify(preferences),\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default persistence\r\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { Modifier, TagLike, TagType } from '../data/types'\nimport { preparePost } from './prepare'\n\nconst sourceTags: TagLike[] = [\n  { name: 'source:*patreon*', posts: 12711, types: [TagType.SOURCE] },\n  { name: 'source:*twitter*', posts: 99927, types: [TagType.SOURCE] },\n  { name: 'source:*pixiv*', posts: 185080, types: [TagType.SOURCE] },\n]\n\nconst ratingTags: TagLike[] = [\n  { name: 'rating:safe', posts: 14293, types: [TagType.RATING] },\n  { name: 'rating:questionable', posts: 219552, types: [TagType.RATING] },\n  { name: 'rating:explicit', posts: 3821144, types: [TagType.RATING] },\n]\n\nclass API {\n  static defaultPageSize = 20\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n\n  activeApi = API.apiUrl2\n\n  constructor() {\n    this.activeApi = API.apiUrl1\n\n    // Failover to apiUrl2\n    fetch(this.activeApi).catch(() => (this.activeApi = API.apiUrl2))\n  }\n\n  async getTags(searchTerm: string, limit: number = API.defaultPageSize) {\n    const tags: TagLike[] = await (\n      await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n    ).json()\n\n    // HACKY: Inject suggestions for ratings and some sources\n    if (searchTerm.startsWith('rating:')) {\n      const matchingRating = ratingTags.filter((tag) => tag.name.includes(searchTerm.replace('rating:', '')))\n      return [...tags, ...matchingRating]\n    }\n\n    if (searchTerm.startsWith('source:')) {\n      const matchingSourceTags = sourceTags.filter((tag) => tag.name.includes(searchTerm.replace('source:', '')))\n      return [...tags, ...matchingSourceTags]\n    }\n\n    return tags\n  }\n\n  async getPosts(\n    tags: Record<string, TagDataClass>,\n    limit: number = API.defaultPageSize,\n    pageNumber = 0,\n    minScore = 0,\n    sort: 'score' | 'date' = 'date'\n  ) {\n    const res = await (await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit, sort))).json()\n\n    return {\n      posts: res.posts.map(preparePost) as PostDataClass[],\n      count: Number(res.count),\n    }\n  }\n\n  async getAliases(tagName: string) {\n    const aliases: TagLike[] = await (await fetch(`${this.activeApi}/alias/${encodeURIComponent(tagName)}`)).json()\n\n    return aliases\n  }\n\n  buildPostUrl(\n    page: number,\n    tags: Record<string, TagDataClass>,\n    minScore: number,\n    limit: number = API.defaultPageSize,\n    sort: 'score' | 'date'\n  ) {\n    const tagList = Object.values(tags)\n\n    const normalTags = tagList.filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = tagList.filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    const tagParts = [...normalTags.map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)]\n\n    if (orTags.length > 0) {\n      tagParts.push('( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )')\n    }\n\n    if (minScore > 0) {\n      tagParts.push(encodeURIComponent('score:>=' + minScore))\n    }\n\n    if (sort !== 'date') {\n      tagParts.push(encodeURIComponent('sort:' + sort + ':desc'))\n    }\n\n    if (tagParts.length > 0) {\n      url += `&tags=${tagParts.join(' + ')}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","interface RawComment {\r\n  created_at: string\r\n  body: string\r\n  creator: string\r\n  id: string\r\n  creator_id: string\r\n}\r\n\r\nexport function parseComment(rawComment: RawComment) {\r\n  return new CommentDataClass(\r\n    rawComment.created_at,\r\n    rawComment.body,\r\n    rawComment.creator,\r\n    rawComment.id,\r\n    rawComment.creator_id\r\n  )\r\n}\r\n\r\nexport default class CommentDataClass {\r\n  created_at: number\r\n  body: string\r\n  creator: string\r\n  id: number\r\n  creator_id: number\r\n\r\n  constructor(created_at: string, body: string, creator: string, id: string, creator_id: string) {\r\n    this.created_at = Date.parse(created_at)\r\n    this.body = body\r\n    this.creator = creator\r\n    this.id = Number(id)\r\n    this.creator_id = Number(creator_id)\r\n  }\r\n}\r\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport {\n  AppAction,\n  GET_RESULTS,\n  GET_MORE_RESULTS,\n  addPosts,\n  setPosts,\n  ADD_TAG,\n  addAliases,\n  LIKE_POST,\n  FETCH_SUGGESTIONS,\n  setSuggestions,\n  FETCH_COMMENTS,\n  setComments,\n} from '../actions'\nimport api from '../../misc/api'\nimport {\n  selectActiveTags,\n  selectPageNumber,\n  selectHasMoreResults,\n  selectMinRating,\n  selectPageSize,\n  selectSort,\n  selectTagSuggestionCount,\n  selectPostById,\n} from '../selectors'\nimport TagDataClass from '../../data/TagDataClass'\nimport { serializeTagname } from '../../misc/formatting'\nimport { parseComment } from '../../data/CommentDataClass'\n\nconst apiRequests = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\n  const state = store.getState()\n  const hasMoreResults = selectHasMoreResults(state)\n\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const result = await api.getPosts(activeTags, pageSize, action.pageNumber, minRating, sort)\n\n    store.dispatch(setPosts(result.posts, result.count, action.pageNumber))\n  }\n\n  if (action.type === GET_MORE_RESULTS && hasMoreResults) {\n    const activeTags = selectActiveTags(state)\n    const pageNumber = selectPageNumber(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const res = await api.getPosts(activeTags, pageSize, pageNumber + 1, minRating, sort)\n\n    store.dispatch(addPosts(res.posts))\n  }\n\n  if (action.type === ADD_TAG) {\n    const activeTags = selectActiveTags(state)\n    const aliases = await api.getAliases(action.tag.name)\n\n    const sanitizedAliases = aliases\n      .sort((a, b) => b.posts - a.posts)\n      .filter((alias) => !(alias.name in activeTags))\n      .map((alias) => new TagDataClass(alias.name, [], alias.posts))\n\n    store.dispatch(addAliases(sanitizedAliases, action.tag.name))\n\n    // Request types for newly added tag\n    if (action.tag.types?.length === 0) {\n      const tags = await api.getTags(action.tag.name)\n      const tag = tags.find((tag) => (tag.name = action.tag.name))\n\n      if (tag) {\n        action.tag.types = tag.types\n        action.tag.count = tag.posts\n      }\n    }\n  }\n\n  if (action.type === LIKE_POST) {\n    fetch(`https://rule34.xxx/index.php?page=post&s=vote&id=${action.postId}&type=up`, { mode: 'no-cors' })\n      .then(() => {\n        // nothing to do, I update the state in advance\n      })\n      .catch((err) => {\n        console.warn('Upvote rejected', err)\n      })\n  }\n\n  if (action.type === FETCH_SUGGESTIONS) {\n    const limit = selectTagSuggestionCount(state)\n    const suggestions = await api.getTags(serializeTagname(action.value), limit)\n\n    store.dispatch(setSuggestions(suggestions))\n  }\n\n  if (action.type === FETCH_COMMENTS) {\n    const post = selectPostById(action.postId)(state)\n\n    if (post) {\n      const rawComments = (await (await fetch(post.comments_url)).json()) as any[]\n      const comments = rawComments.map(parseComment)\n\n      store.dispatch(setComments(action.postId, comments))\n    }\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { applyMiddleware } from 'redux'\r\nimport analytics from './analytics'\r\nimport persistence from './persistence'\r\nimport requests from './requests'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst middleware = composeWithDevTools(applyMiddleware(analytics, requests, persistence))\r\n\r\nexport default middleware\r\n","import produce from 'immer'\r\nimport { PreferenceKey, ResultLayout, ThemeId } from '../../data/types'\r\nimport { AppAction, SET_PREFERENCE, SET_PREFERENCES } from '../actions'\r\n\r\nexport interface PreferencesState {\r\n  infinite: boolean\r\n  rated: boolean\r\n  ratedThreshold: number\r\n  originals: boolean\r\n  cookies: boolean\r\n  preloadVideos: boolean\r\n  tagSuggestionsCount: number\r\n  resultsLayout: ResultLayout\r\n  pageSize: number\r\n  useCorsProxy: boolean\r\n  showMetadata: boolean\r\n  showComments: boolean\r\n  sort: 'score' | 'date'\r\n  themeId: ThemeId\r\n}\r\n\r\nconst initialPreferencesState: PreferencesState = {\r\n  infinite: true,\r\n  rated: false,\r\n  ratedThreshold: 1,\r\n  originals: false,\r\n  cookies: false,\r\n  preloadVideos: false,\r\n  tagSuggestionsCount: 20,\r\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\r\n  pageSize: 20,\r\n  useCorsProxy: false,\r\n  showMetadata: false,\r\n  showComments: false,\r\n  sort: 'date',\r\n  themeId: ThemeId.DARK,\r\n}\r\n\r\nfunction setPreference<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\r\n  return produce(state, (draft) => {\r\n    draft[key] = value\r\n  })\r\n}\r\n\r\nfunction setPreferences(state: PreferencesState, preferences: Partial<Record<PreferenceKey, any>>) {\r\n  return produce(state, (draft) => {\r\n    Object.assign(draft, preferences)\r\n  })\r\n}\r\n\r\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_PREFERENCE:\r\n      return setPreference(state, action.key, action.value)\r\n    case SET_PREFERENCES:\r\n      return setPreferences(state, action.preferences)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default preferences\r\n","import produce from 'immer'\nimport CommentDataClass from '../../data/CommentDataClass'\nimport PostDataClass from '../../data/PostDataClass'\nimport { SET_POSTS, ADD_POSTS, SET_COMMENTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nconst initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: number, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = postCount\n    draft.pageNumber = pageNumber\n  })\n\nconst setComments = (state: ResultsState, postId: number, comments: CommentDataClass[]) =>\n  produce(state, (draft) => {\n    const postIndex = state.posts.findIndex((p) => p.id === postId)\n    if (postIndex >= 0) {\n      draft.posts[postIndex].comments = comments\n    }\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    case SET_COMMENTS:\n      return setComments(state, action.postId, action.comments)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/TagDataClass'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES } from '../actions'\n\nexport interface TagsState {\n  active: Record<string, TagDataClass>\n  aliases: Record<string, TagDataClass[]>\n}\n\nconst initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nconst initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import produce from 'immer'\r\nimport { AppAction, LIKE_POST } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport type LikesState = Record<number, number>\r\n\r\nconst initialReaderState: LikesState = {}\r\n\r\nconst likePost = (state: LikesState, postId: number) =>\r\n  produce(state, (draft) => {\r\n    if (!(postId in state)) {\r\n      draft[postId] = Date.now()\r\n    }\r\n\r\n    // NOTE: Might need to introduce a cap here...\r\n    // Like 1000 likes max, delete oldest when more are added?\r\n  })\r\n\r\nconst likes = (state: LikesState = initialReaderState, action: AppAction): LikesState => {\r\n  switch (action.type) {\r\n    case LIKE_POST:\r\n      return likePost(state, action.postId)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default likes\r\n","import produce from 'immer'\r\nimport { TagLike } from '../../data/types'\r\nimport { AppAction, SET_SUGGESTIONS } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport interface SuggestionsState {\r\n  entries: TagLike[]\r\n}\r\n\r\nconst initialReaderState: SuggestionsState = {\r\n  entries: [],\r\n}\r\n\r\nconst setSuggestions = (state: SuggestionsState, suggestions: TagLike[]) =>\r\n  produce(state, (draft) => {\r\n    draft.entries = suggestions\r\n  })\r\n\r\nconst suggestions = (state: SuggestionsState = initialReaderState, action: AppAction): SuggestionsState => {\r\n  switch (action.type) {\r\n    case SET_SUGGESTIONS:\r\n      return setSuggestions(state, action.suggestions)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default suggestions\r\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\nimport likes from './likes'\nimport suggestions from './suggestions'\n\nexport default combineReducers({ tags, results, preferences, reader, likes, suggestions })\n","import { createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { getVersion, versionToNumber } from '../data/utils'\nimport middleware from './middleware'\nimport rootReducer from './reducers'\n\nconst version = getVersion()\n\nconst persistConfig = {\n  key: 'appstate',\n  version: versionToNumber(version),\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, middleware)\n\nexport const persistor = persistStore(store)\n","import styled, { css, useTheme } from 'styled-components'\r\nimport { gap } from '../../styled/mixins'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../common/FlexColumn'\r\nimport Surface from '../common/Surface'\r\nimport { Faded, Title } from '../common/Text'\r\nimport Header from '../features/Header'\r\n\r\nconst SectionBody = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    ${gap(theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\nconst Section = styled(FlexColumnWithSpacing)`\r\n  flex-grow: 1;\r\n`\r\n\r\nexport default function Terms() {\r\n  document.title = 'R34 React - Terms of Service'\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <Section>\r\n        <Title>Terms of Service</Title>\r\n        <SectionBody>\r\n          <p>\r\n            This website does not impose any additional terms on you. However, terms for the technologies this app uses\r\n            still apply. Therefore, you should read the following terms.\r\n          </p>\r\n          <a href='https://policies.google.com/terms'>Google - Privacy & Terms</a>\r\n          <a href='https://rule34.xxx/tos.php'>Rule34 - Terms of Serivce</a>\r\n          <Faded>If you have any questions feel free to contact me via Discord. See \"about\" section.</Faded>\r\n        </SectionBody>\r\n      </Section>\r\n    </FlexColumn>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect } from 'react'\nimport { Provider, useSelector } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport ErrorBoundary from './components/features/ErrorBoundary'\nimport ErrorScreen from './components/pages/ErrorScreen'\nimport LoadingScreen from './components/pages/LoadingScreen'\nimport CookieConfirmation from './components/widgets/CookieConfirmation'\nimport { RouteName } from './data/types'\nimport GlobalStyles from './GlobalStyles'\nimport themes, { defaultThemeId } from './styled/themes'\nimport { selectActiveThemeId } from './redux/selectors'\nimport { persistor, store } from './redux/store'\nimport { fetchPreferences } from './redux/actions'\nimport Terms from './components/pages/Terms'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\nconst About = React.lazy(() => import('./components/pages/About'))\nconst Privacy = React.lazy(() => import('./components/pages/Privacy'))\n\nexport default function App() {\n  useEffect(() => {\n    gapi.load('auth2', function () {\n      gapi.auth2\n        .init({\n          client_id: '305691674169-siad1mgnmg2lhrctg2jaqusuv2kj1nd1.apps.googleusercontent.com',\n          scope: 'https://www.googleapis.com/auth/drive.appdata',\n        })\n        .then(() => {\n          if (gapi.auth2.getAuthInstance().isSignedIn.get()) {\n            store.dispatch(fetchPreferences())\n          }\n        })\n    })\n  }, [])\n\n  return (\n    <ErrorBoundary fallback={<ErrorScreen />}>\n      <Provider store={store}>\n        <PersistGate loading={<LoadingScreen />} persistor={persistor}>\n          <ThemedApp />\n        </PersistGate>\n      </Provider>\n    </ErrorBoundary>\n  )\n}\n\nfunction ThemedApp() {\n  const themeId = useSelector(selectActiveThemeId)\n\n  return (\n    <ThemeProvider theme={themes[themeId] || defaultThemeId}>\n      <GlobalStyles />\n      <HashRouter>\n        <Suspense fallback={<LoadingScreen />}>\n          <Switch>\n            <Route exact path={RouteName.HELP}>\n              <Help />\n            </Route>\n            <Route exact path={RouteName.SETTINGS}>\n              <Settings />\n            </Route>\n            <Route exact path={RouteName.ABOUT}>\n              <About />\n            </Route>\n            <Route exact path={RouteName.PRIVACY}>\n              <Privacy />\n            </Route>\n            <Route exact path={RouteName.TERMS}>\n              <Terms />\n            </Route>\n            <Route path={RouteName.SEARCH}>\n              <Search />\n            </Route>\n          </Switch>\n        </Suspense>\n        <CookieConfirmation />\n      </HashRouter>\n    </ThemeProvider>\n  )\n}\n","// Polyfills\nimport 'whatwg-fetch'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n"],"sourceRoot":""}