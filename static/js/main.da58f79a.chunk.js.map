{"version":3,"sources":["data/types.ts","styled/mixins.tsx","data/utils.ts","data/browserUtils.ts","data/Tag.ts","misc/api.ts","components/common/Buttons.tsx","hooks/useAction.tsx","components/player/FlexImage.tsx","icons/Loading.tsx","components/widgets/ResetButton.tsx","icons/OutOfResults.png","data/Post.ts","misc/prepare.ts","redux/actions.ts","components/widgets/CookieConfirmation.tsx","GlobalStyles.tsx","misc/theme.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/index.ts","analytics/events.ts","redux/middleware/eventLogging.ts","redux/middleware/apiRequests.ts","redux/store.ts","components/pages/LoadingScreen.tsx","components/features/AppCrashHandler.tsx","components/pages/ErrorScreen.tsx","App.tsx","index.tsx","redux/selectors.ts"],"names":["TagType","Modifier","PostType","MediaType","ResultLayout","RouteName","RatingType","PreferenceKey","NO_OP","defaultBorder","theme","css","colors","accentColor","dimensions","borderWidth","borderRadius","layer","layerBg","shadow","box","primaryHover","backgroundColor","backgroundColor2","flexColumn","flexColumnWithGap","flexColumnGap","gutter","gridWithGap","gap","flexRowWithGap","flexRowGap","amount","supportsGap","supportsFlexGap","centeredMaxWidth","bodyWidth","defaultBlock","blockHeight","flexMedia","preserveAspectRatio","width","height","supportsAspectRatio","listToMap","list","keyProp","reduce","result","current","tagsToString","tags","Object","values","map","tag","modifier","name","sort","parseUrl","value","URL","err","versionToNumber","majorMinorPatch","Number","split","join","download","url","filename","pop","fetch","headers","Headers","Origin","window","location","origin","mode","then","response","blob","a","document","createElement","href","createObjectURL","body","appendChild","click","remove","catch","e","console","error","getVersion","process","REACT_APP_VERSION","flex","style","display","flexDirection","rowGap","isSupported","scrollHeight","parentNode","removeChild","supportsObjectFit","TagDataClass","constructor","types","count","PLUS","this","API","activeApi","apiUrl2","apiUrl1","getTags","searchTerm","limit","defaultPageSize","json","getPosts","pageNumber","minScore","buildPostUrl","res","posts","preparePost","getAliases","tagName","aliases","page","tagList","normalTags","filter","OR","orTags","tagString","encodeURIComponent","length","TextButton","styled","button","bigSpacing","fontSizes","content","timings","longTransitionTime","InvisButton","drop","transitionTime","RedButton","BlockButton","AddButton","ModifierButton","useAction","actionCreator","dispatch","useDispatch","useCallback","FlexImage","img","StyledSvg","svg","Loading","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","ResetButton","props","reset","localStorage","clear","hash","reload","onClick","PostDataClass","id","score","rating","source","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","small_src","big_src","prepareTag","dirtyTag","post","type","sample_url","preview_url","t","Boolean","ADD_TAG","REMOVE_TAG","ADD_ALIASES","ADD_TYPES","ADD_POSTS","SET_POSTS","SET_OPTION","GET_RESULTS","GET_MORE_RESULTS","ALLOW_COOKIES","ENTER_FULLSCREEN","EXIT_FULLSCREEN","SET_FULLSCREEN_POST","addTag","removeTag","addAliases","forTag","addPosts","setPosts","setOption","key","getResults","getMoreResults","allowCookiesAction","enterFullscreen","postId","exitFullscreen","setFullScreenPost","CookieWrapper","div","layerBgSolid","StyledSpan","span","CookieConfirmation","cookies","useSelector","selectCookies","aria-label","createGlobalStyle","layerBgHighlight","spacing","hugeSpacing","hoverAccent","subduedText","bigTitle","initialPreferencesState","infinite","rated","ratedThreshold","originals","preloadVideos","tagSuggestionsCount","resultsLayout","INFINITE_COLUMN","pageSize","state","produce","draft","preferences","action","COOKIES","initialResultsState","results","postCount","initialTagsState","active","newTag","tagToRemove","addTypes","initialReaderState","isEnabled","reader","setPostId","combineReducers","AnalyticsEventId","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","analytics","eventLogging","store","next","getState","firebase","initializeApp","activeTags","page_number","SEARCH","payload","active_tags","searchEvent","selectActiveTags","selectPageNumber","selectPreferences","logEvent","apiRequests","hasMoreResults","selectHasMoreResults","selectPageSize","minRating","selectMinRating","api","sanitizedAliases","b","alias","find","version","log","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","FullScreenCentered","LoadingScreen","AppCrashHandler","React","Component","super","hasError","render","fallback","children","ErrorScreen","GlobalStyles","src","outOfResultsPicture","alt","Help","lazy","Settings","Search","App","loading","path","HELP","SETTINGS","ReactDOM","getElementById","selectPosts","selectCount","selectResultsLayout","selectPreloadVideos","selectOriginals","selectFullsceenState","selectTagSuggestionCount","selectNumberOfActiveTags","createSelector","keys","selectAliasesAsList","flat","selectOutOfResults","outOfResults","selectLastPage","Math","ceil","selectFullScreenPost","fullScreenPostId","selectFullScreenIndex","fullScreenPost","indexOf","selectAliasesByTagName","selectPostById"],"mappings":"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","file":"static/js/main.da58f79a.chunk.js","sourcesContent":["/**\n * Metadata. Describes the kind of tag.\n */\nexport enum TagType {\n  GENERAL = 'general',\n  CHARACTER = 'character',\n  AMBIGUOUS = 'ambiguous',\n  ARTIST = 'artist',\n  COPYRIGHT = 'copyright',\n}\n\n/**\n * Describes how the tag should influence the search.\n */\nexport enum Modifier {\n  PLUS = '+',\n  MINUS = '-',\n  OR = '~',\n}\n\n/**\n * Type of a post according to the backend.\n */\nexport enum PostType {\n  VIDEO = 'video',\n  IMAGE = 'image',\n}\n\n/**\n * Derived form PostType. On the frontend I split PostType.IMAGE into GIF and PICTURE.\n */\nexport enum MediaType {\n  VIDEO = 'video',\n  PICTURE = 'picture',\n  GIF = 'gif',\n}\n\n/**\n * The possible layouts.\n */\nexport enum ResultLayout {\n  INFINITE_COLUMN = 'infinite_column',\n  PAGES = 'pages',\n}\n\n/**\n * All routes of the app.\n */\nexport enum RouteName {\n  SEARCH = '/',\n  HELP = '/help',\n  SETTINGS = '/settings',\n}\n\n/**\n * Explicity rating as provided by the backend.\n */\nexport enum RatingType {\n  SAFE = 'safe',\n  QUESTIONABLE = 'questionable',\n  EXPLICIT = 'explicit',\n}\n\n/**\n * All preferences.\n */\nexport enum PreferenceKey {\n  INFINITE = 'infinite',\n  RATED = 'rated',\n  RATEDThreshold = 'ratedThreshold',\n  ORIGINALS = 'originals',\n  COOKIES = 'cookies',\n  PRELOAD_VIDEOS = 'preloadVideos',\n  TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount',\n  RESULTS_LAYOUT = 'resultsLayout',\n  PAGE_SIZE = 'pageSize',\n}\n\n/**\n * One-time definition of an empty function. Reusing this improves React's performance as it does not break memoization.\n */\nexport const NO_OP = () => {}\n\n/**\n * Same data as a tag but different names\n */\nexport type TagLike = {\n  name: string\n  posts: number\n  types: TagType[]\n}\n","import { css, DefaultTheme } from 'styled-components'\r\nimport { supportsAspectRatio, supportsFlexGap, supportsGap } from '../data/browserUtils'\r\n\r\ninterface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    ${theme.shadow.box}\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColumn() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\nexport function flexColumnWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gridWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: grid;\r\n    ${gap(theme.dimensions.gutter)}\r\n  `\r\n}\r\n\r\nexport function flexRowWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n    ${flexRowGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gap(amount: string) {\r\n  return supportsGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexRowGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexColumnGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    ${gap(theme.dimensions.gutter)};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  if (!width || !height) {\r\n    return ''\r\n  }\r\n\r\n  return supportsAspectRatio\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : css`\r\n        max-width: 100%;\r\n        height: auto;\r\n      `\r\n}\r\n","import TagDataClass from './Tag'\n\n/**\n * Converts a list of objects into a map.\n * @param list The original list\n * @param keyProp The keyProp parameter defines which property of the objects will be used as the index for the map\n */\nexport const listToMap = <T>(list: T[], keyProp: string): Record<string, T> => {\n  return list.reduce((result: Record<string, T>, current: any) => {\n    result[current[keyProp]] = current\n    return result\n  }, {})\n}\n\n/**\n * Joins tags together for analytics event\n */\nexport function tagsToString(tags: Record<string, TagDataClass>) {\n  return Object.values(tags)\n    .map((tag) => `${tag.modifier}${tag.name}`)\n    .sort()\n}\n\n/**\n * Returns a URL object when the value is a hyperlink. Else undefined\n */\nexport function parseUrl(value: string) {\n  try {\n    return new URL(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * converts a version like \"1.2.7\" into 127\n */\nexport function versionToNumber(majorMinorPatch: string) {\n  return Number(majorMinorPatch.split('.').join(''))\n}\n\n/**\n * Hacky ass way to download images cross origin. Could solve this by hosting both the app and the api on the same domain.\n */\nexport function download(url: string) {\n  const filename = url.split('/').pop() || ''\n\n  fetch(url, {\n    headers: new Headers({\n      Origin: window.location.origin,\n    }),\n    mode: 'cors',\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      var a = document.createElement('a')\n      a.download = filename\n      a.href = window.URL.createObjectURL(blob)\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    })\n    .catch((e) => console.error(e))\n}\n\n/**\n * Returns the current version of the project\n */\nexport function getVersion() {\n  if (process?.env?.REACT_APP_VERSION) {\n    return process.env.REACT_APP_VERSION\n  }\n\n  return 'unknown'\n}\n","export const supportsFlexGap = (() => {\r\n  // create flex container with row-gap set\r\n  var flex = document.createElement('div')\r\n  flex.style.display = 'flex'\r\n  flex.style.flexDirection = 'column'\r\n  flex.style.rowGap = '1px'\r\n\r\n  // create two, elements inside it\r\n  flex.appendChild(document.createElement('div'))\r\n  flex.appendChild(document.createElement('div'))\r\n\r\n  // append to the DOM (needed to obtain scrollHeight)\r\n  document.body.appendChild(flex)\r\n  var isSupported = flex.scrollHeight === 1 // flex container should be 1px high from the row-gap\r\n  //@ts-expect-error\r\n  flex.parentNode.removeChild(flex)\r\n\r\n  return isSupported\r\n})()\r\n\r\nexport const supportsGap = 'gap' in document.body.style\r\nexport const supportsAspectRatio = 'aspect-ratio' in document.body.style\r\nexport const supportsObjectFit = 'object-fit' in document.body.style\r\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import PostDataClass from '../data/Post'\nimport TagDataClass from '../data/Tag'\nimport { Modifier, TagLike } from '../data/types'\nimport { preparePost } from './prepare'\n\nexport class API {\n  static defaultPageSize = 20\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n\n  activeApi = API.apiUrl2\n\n  constructor() {\n    this.activeApi = API.apiUrl1\n\n    // Failover to apiUrl2\n    fetch(this.activeApi).catch(() => (this.activeApi = API.apiUrl2))\n  }\n\n  async getTags(searchTerm: string, limit: number = API.defaultPageSize) {\n    const tags: TagLike[] = await (\n      await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n    ).json()\n\n    return tags\n  }\n\n  async getPosts(\n    tags: Record<string, TagDataClass>,\n    limit: number = API.defaultPageSize,\n    pageNumber = 0,\n    minScore = 0\n  ) {\n    const res = await (await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit))).json()\n\n    return {\n      posts: res.posts.map(preparePost) as PostDataClass[],\n      count: Number(res.count),\n    }\n  }\n\n  async getAliases(tagName: string) {\n    const aliases: TagLike[] = await (await fetch(`${this.activeApi}/alias/${tagName}`)).json()\n\n    return aliases\n  }\n\n  buildPostUrl(\n    page: number,\n    tags: Record<string, TagDataClass>,\n    minScore: number,\n    limit: number = API.defaultPageSize\n  ) {\n    const tagList = Object.values(tags)\n\n    const normalTags = tagList.filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = tagList.filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    let tagString = normalTags\n      .map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)\n      .join(' + ')\n\n    if (orTags.length > 0) {\n      tagString += '+ ( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )'\n    }\n\n    if (tagString) {\n      url += `&tags=${tagString}`\n    }\n\n    if (minScore > 0) {\n      url += `+${encodeURIComponent('score:>=' + minScore)}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, primaryHover } from '../../styled/mixins'\n\nexport const TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n\n    transition: all ${theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    filter: ${theme.shadow.drop};\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-in-out;\n    }\n\n    :hover {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)(\n  ({ theme }) => css`\n    ${primaryHover({ theme })}\n  `\n)\n\nexport const BlockButton = styled(RedButton)(\n  ({ theme }) => css`\n    width: 100%;\n  `\n)\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-left-width: 0;\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AnyAction } from 'redux'\n\n/**\n * A hook that simplifies usage of simple (unparameterized) Redux actions\n */\nexport default function useAction<T extends () => AnyAction>(actionCreator: T) {\n  const dispatch = useDispatch()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(() => dispatch(actionCreator()), [actionCreator, dispatch])\n}\n","import styled from 'styled-components'\nimport { preserveAspectRatio, flexMedia } from '../../styled/mixins'\n\nconst FlexImage = styled.img`\n  ${flexMedia}\n  ${preserveAspectRatio}\n  grid-area: 1/1/2/2;\n`\n\nexport default FlexImage\n","import React from 'react'\nimport styled from 'styled-components'\n\n// Don't use theme here so the loadingScreen is independent\nconst StyledSvg = styled.svg`\n  height: 32px;\n  padding: 8px;\n`\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='25' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='44' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import React, { useCallback } from 'react'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetButton(props: any) {\r\n  const reset = useCallback(() => {\r\n    localStorage.clear()\r\n    window.location.hash = ''\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <BlockButton onClick={reset} {...props}>\r\n      Reset Application\r\n    </BlockButton>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OutOfResults.9c71691c.png\";","import { RatingType, PostType } from './types'\nimport TagDataClass from './Tag'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: string\n  change: string\n\n  constructor(\n    id: number,\n    score: number,\n    rating: RatingType,\n    source: string,\n    tags: TagDataClass[],\n    media_type: PostType,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = created_at\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/Post'\nimport TagDataClass from '../data/Tag'\nimport { TagType, Modifier, RatingType, PostType } from '../data/types'\n\n/**\n * A tag as received from the backend.\n * All strings\n */\nexport interface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\n/**\n * A post as received from the backend.\n * All strings\n */\nexport interface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\n/**\n * Introduce types for nicer use later\n */\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\n/**\n * Introduce types for nicer use later and parse tag names to tag objects.\n */\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type as PostType,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","import { PreferenceKey, TagType } from '../data/types'\nimport TagDataClass from '../data/Tag'\nimport PostDataClass from '../data/Post'\n\n// Action Names\nexport const ADD_TAG = 'R34_ADD_TAG'\nexport const REMOVE_TAG = 'R34_REMOVE_TAG'\nexport const ADD_ALIASES = 'R34_ADD_ALIASES'\nexport const ADD_TYPES = 'R34_ADD_TYPES'\nexport const ADD_POSTS = 'R34_ADD_POSTS'\nexport const SET_POSTS = 'R34_SET_POSTS'\nexport const SET_OPTION = 'R34_SET_OPTION'\nexport const GET_RESULTS = 'R34_GET_RESULTS'\nexport const GET_MORE_RESULTS = 'R34_GET_MORE_RESULTS'\nexport const ALLOW_COOKIES = 'R34_ALLOW_COOKIES'\nexport const ENTER_FULLSCREEN = 'R34_ENTER_FULLSCREEN'\nexport const EXIT_FULLSCREEN = 'R34_EXIT_FULLSCREEN'\nexport const SET_FULLSCREEN_POST = 'R34_SET_FULLSCREEN_POST'\n\n// Action Types\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\ninterface AddTypesAction {\n  type: typeof ADD_TYPES\n  types: TagType[]\n  forTag: string\n}\n\ninterface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: number\n  pageNumber?: number\n}\n\ninterface SetOptionAction {\n  type: typeof SET_OPTION\n  key: PreferenceKey\n  value: any\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface AllowCookiesAction {\n  type: typeof ALLOW_COOKIES\n  value: boolean\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\nexport type AppAction =\n  | AddTagAction\n  | RemoveTagAction\n  | AddAliasesAction\n  | AddTypesAction\n  | AddPostsAction\n  | SetPostsAction\n  | SetOptionAction\n  | GetResultsAction\n  | GetMoreResultsAction\n  | AllowCookiesAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | SetFullScreenPostAction\n\n// Action Creators\nexport function addTag(tag: TagDataClass): AddTagAction {\n  return {\n    type: ADD_TAG,\n    tag,\n  }\n}\n\nexport function removeTag(tag: TagDataClass): RemoveTagAction {\n  return {\n    type: REMOVE_TAG,\n    tag,\n  }\n}\n\nexport function addAliases(aliases: TagDataClass[], forTag: string): AddAliasesAction {\n  return {\n    type: ADD_ALIASES,\n    aliases,\n    forTag,\n  }\n}\n\nexport function addTypes(types: TagType[], forTag: string): AddTypesAction {\n  return {\n    type: ADD_TYPES,\n    types,\n    forTag,\n  }\n}\n\nexport function addPosts(posts: PostDataClass[]): AddPostsAction {\n  return {\n    type: ADD_POSTS,\n    posts,\n  }\n}\n\nexport function setPosts(posts: PostDataClass[], count: number, pageNumber: number = 0): SetPostsAction {\n  return {\n    type: SET_POSTS,\n    posts,\n    count,\n    pageNumber,\n  }\n}\n\nexport function setOption(key: PreferenceKey, value: any): SetOptionAction {\n  return {\n    type: SET_OPTION,\n    key,\n    value,\n  }\n}\n\nexport function getResults(pageNumber: number = 0): GetResultsAction {\n  return {\n    type: GET_RESULTS,\n    pageNumber,\n  }\n}\n\nexport function getMoreResults(): GetMoreResultsAction {\n  return {\n    type: GET_MORE_RESULTS,\n  }\n}\n\nexport function allowCookiesAction(): AllowCookiesAction {\n  return {\n    type: ALLOW_COOKIES,\n    value: true,\n  }\n}\n\nexport function enterFullscreen(postId: number): EnterFullcreenAction {\n  return {\n    type: ENTER_FULLSCREEN,\n    postId,\n  }\n}\n\nexport function exitFullscreen(): ExitFullscreenAction {\n  return {\n    type: EXIT_FULLSCREEN,\n  }\n}\n\nexport function setFullScreenPost(postId: number): SetFullScreenPostAction {\n  return {\n    type: SET_FULLSCREEN_POST,\n    postId,\n  }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport { useSelector } from 'react-redux'\nimport { allowCookiesAction } from '../../redux/actions'\nimport { selectCookies } from '../../redux/selectors'\nimport useAction from '../../hooks/useAction'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    color: ${theme.colors.backgroundColor2};\n    background: ${theme.colors.layerBgSolid};\n\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const cookies = useSelector(selectCookies)\n  const onClick = useAction(allowCookiesAction)\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={onClick} aria-label='Allow Cookies'>\n        Got it\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n        text-decoration: underline;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.backgroundColor2};\n      background-color: ${theme.colors.backgroundColor};\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    // Not a touch device\n    // Touch devices have nice scrollbars by default\n    @media (not(pointer: coarse)) {\n      ::-webkit-scrollbar {\n        height: 8px;\n\n        :hover {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      /* Track */\n      ::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      /* Handle */\n      :hover {\n        ::-webkit-scrollbar {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: ${theme.colors.layerBg};\n        border-radius: 1000px;\n\n        :hover {\n          background: ${theme.colors.layerBgHighlight};\n        }\n      }\n    }\n  `\n)\n","const theme = {\n  dimensions: {\n    borderRadius: '3px',\n    borderWidth: '2px',\n    spacing: '4px',\n    bigSpacing: '8px',\n    hugeSpacing: '16px',\n    gutter: '8px',\n    blockHeight: '32px',\n    bodyWidth: '1000px',\n  },\n  colors: {\n    accentColor: '#ee3344',\n    hoverAccent: '#ee3344',\n    backgroundColor: '#121212',\n    backgroundColor2: '#fff',\n    subduedText: '#ffffff80',\n    layerBg: '#ffffff11',\n    layerBgSolid: '#222222',\n    layerBgHighlight: '#ffffff22',\n  },\n  shadow: {\n    box: 'box-shadow: 0 0 8px #000;',\n    drop: 'drop-shadow(0 0 4px #000)',\n  },\n  timings: {\n    transitionTime: '0.2s',\n    longTransitionTime: '0.2s',\n  },\n  fontSizes: {\n    content: '15px',\n    bigTitle: '24px',\n  },\n}\n\nexport default theme\n\nexport type ThemeType = typeof theme\n","import produce from 'immer'\nimport { PreferenceKey, ResultLayout } from '../../data/types'\nimport { AppAction, SET_OPTION, ALLOW_COOKIES } from '../actions'\n\nexport interface PreferencesState {\n  infinite: boolean\n  rated: boolean\n  ratedThreshold: number\n  originals: boolean\n  cookies: boolean\n  preloadVideos: boolean\n  tagSuggestionsCount: number\n  resultsLayout: ResultLayout\n  pageSize: number\n}\n\nexport const initialPreferencesState: PreferencesState = {\n  infinite: true,\n  rated: false,\n  ratedThreshold: 1,\n  originals: false,\n  cookies: false,\n  preloadVideos: false,\n  tagSuggestionsCount: 20,\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\n  pageSize: 20,\n}\n\nfunction setOption<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\n  return produce(state, (draft) => {\n    draft[key] = value\n  })\n}\n\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\n  switch (action.type) {\n    case SET_OPTION:\n      return setOption(state, action.key, action.value)\n    case ALLOW_COOKIES:\n      return setOption(state, PreferenceKey.COOKIES, action.value)\n    default:\n      return state\n  }\n}\n\nexport default preferences\n","import produce from 'immer'\nimport PostDataClass from '../../data/Post'\nimport { SET_POSTS, ADD_POSTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nexport const initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: number, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = postCount\n    draft.pageNumber = pageNumber\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/Tag'\nimport { TagType } from '../../data/types'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES, ADD_TYPES } from '../actions'\n\nexport interface TagsState {\n  active: Record<string, TagDataClass>\n  aliases: Record<string, TagDataClass[]>\n}\n\nexport const initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst addTypes = (state: TagsState, types: TagType[], forTag: string) =>\n  produce(state, (draft) => {\n    debugger\n    draft.active[forTag].types = types\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    case ADD_TYPES:\n      return addTypes(state, action.types, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nexport const initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\n\nexport default combineReducers({ tags, results, preferences, reader })\n","import TagDataClass from '../data/Tag'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { tagsToString } from '../data/utils'\n\nexport enum AnalyticsEventId {\n  SEARCH = 'r34_search',\n}\n\n/**\n * Should be called whenever a new search is started.\n */\nexport const searchEvent = (\n  activeTags: Record<string, TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n) => ({\n  id: AnalyticsEventId.SEARCH,\n  payload: {\n    active_tags: tagsToString(activeTags),\n    page_number,\n    preferences,\n  },\n})\n","import { AppAction, SET_POSTS, ADD_POSTS } from '../actions'\nimport firebase from 'firebase/app'\nimport 'firebase/analytics'\nimport { searchEvent } from '../../analytics/events'\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\nimport { MiddlewareAPI, Dispatch } from 'redux'\n\nconst config = {\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\n  authDomain: 'r34-react.firebaseapp.com',\n  databaseURL: 'https://r34-react.firebaseio.com',\n  projectId: 'r34-react',\n  storageBucket: 'r34-react.appspot.com',\n  messagingSenderId: '844749417844',\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\n  measurementId: 'G-27J3QXZ8YR',\n}\n\nlet firebaseApp: firebase.app.App\nlet analytics: firebase.analytics.Analytics\n\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\n  const state = store.getState()\n  const cookies = selectCookies(state)\n\n  // Only send analytics if the user consented\n  if (cookies) {\n    if (!firebaseApp) {\n      firebaseApp = firebase.initializeApp(config)\n      analytics = firebaseApp.analytics()\n    }\n\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\n      const activeTags = selectActiveTags(state)\n      const pageNumber = selectPageNumber(state)\n      const preferences = selectPreferences(state)\n      const { id, payload } = searchEvent(activeTags, pageNumber, preferences)\n      analytics.logEvent<typeof id>(id, payload)\n    }\n  }\n\n  next(action)\n}\n\nexport default eventLogging\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport { AppAction, GET_RESULTS, GET_MORE_RESULTS, addPosts, setPosts, ADD_TAG, addAliases, addTypes } from '../actions'\nimport api from '../../misc/api'\nimport { selectActiveTags, selectPageNumber, selectHasMoreResults, selectMinRating, selectPageSize } from '../selectors'\nimport TagDataClass from '../../data/Tag'\n\nconst apiRequests = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\n  const state = store.getState()\n  const hasMoreResults = selectHasMoreResults(state)\n\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n\n    const result = await api.getPosts(activeTags, pageSize, action.pageNumber, minRating)\n\n    store.dispatch(setPosts(result.posts, result.count, action.pageNumber))\n  }\n\n  if (action.type === GET_MORE_RESULTS && hasMoreResults) {\n    const activeTags = selectActiveTags(state)\n    const pageNumber = selectPageNumber(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n\n    const res = await api.getPosts(activeTags, pageSize, pageNumber + 1, minRating)\n\n    store.dispatch(addPosts(res.posts))\n  }\n\n  if (action.type === ADD_TAG) {\n    const activeTags = selectActiveTags(state)\n    const aliases = await api.getAliases(action.tag.name)\n\n    const sanitizedAliases = aliases\n      .sort((a, b) => b.posts - a.posts)\n      .filter((alias) => !(alias.name in activeTags))\n      .map((alias) => new TagDataClass(alias.name, [], alias.posts))\n\n    store.dispatch(addAliases(sanitizedAliases, action.tag.name))\n\n    // Request types for newly added tag\n    if (action.tag.types?.length === 0) {\n      const tags = await api.getTags(action.tag.name)\n      const tag = tags.find((tag) => (tag.name = action.tag.name))\n\n      if (tag) {\n        action.tag.types = tag.types\n      }\n    }\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers'\nimport eventLogging from './middleware/eventLogging'\nimport apiRequests from './middleware/apiRequests'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { getVersion, versionToNumber } from '../data/utils'\n\nconst version = getVersion()\n\nconsole.log(`Running version ${version} of R34 React.`)\n\nconst persistConfig = {\n  key: 'appstate',\n  version: versionToNumber(version),\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(eventLogging, apiRequests)))\n\nexport const persistor = persistStore(store)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ninterface AppCrashHandlerProps {\r\n  fallback: JSX.Element\r\n  children: JSX.Element\r\n}\r\n\r\ninterface AppCrashHandlerState {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class AppCrashHandler extends React.Component<AppCrashHandlerProps, AppCrashHandlerState> {\r\n  constructor(props: AppCrashHandlerProps) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    console.log('hi')\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\r\nimport FlexImage from '../player/FlexImage'\r\nimport theme from '../../misc/theme'\r\nimport GlobalStyles from '../../GlobalStyles'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  align-content: center;\r\n  padding: 30px;\r\n  background: ${({ theme }) => theme.colors.backgroundColor};\r\n\r\n  > * {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default function ErrorScreen() {\r\n  return (\r\n    <FullScreenCentered theme={theme}>\r\n      <GlobalStyles theme={theme} />\r\n      <FlexImage src={outOfResultsPicture} alt='Shironeko does not understand' />\r\n      <h1>Sorry about that...</h1>\r\n      <ResetButton theme={theme} />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport CookieConfirmation from './components/widgets/CookieConfirmation'\nimport GlobalStyles from './GlobalStyles'\nimport theme from './misc/theme'\nimport { persistor, store } from './redux/store'\nimport { RouteName } from './data/types'\nimport LoadingScreen from './components/pages/LoadingScreen'\nimport AppCrashHandler from './components/features/AppCrashHandler'\nimport ErrorScreen from './components/pages/ErrorScreen'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\n\nexport default function App() {\n  return (\n    <AppCrashHandler fallback={<ErrorScreen />}>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <PersistGate loading={<LoadingScreen />} persistor={persistor}>\n            <GlobalStyles />\n            <HashRouter>\n              <Suspense fallback={<LoadingScreen />}>\n                <Switch>\n                  <Route path={RouteName.HELP}>\n                    <Help />\n                  </Route>\n                  <Route path={RouteName.SETTINGS}>\n                    <Settings />\n                  </Route>\n                  <Route path={RouteName.SEARCH}>\n                    <Search />\n                  </Route>\n                </Switch>\n              </Suspense>\n              <CookieConfirmation />\n            </HashRouter>\n          </PersistGate>\n        </Provider>\n      </ThemeProvider>\n    </AppCrashHandler>\n  )\n}\n","// Polyfills\nimport 'whatwg-fetch'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n","import { createSelector } from 'reselect'\nimport { DefaultRootState } from '../react-redux'\n\n// Simple selectors\nexport const selectActiveTags = (state: DefaultRootState) => state.tags.active\nexport const selectResults = (state: DefaultRootState) => state.results\nexport const selectPosts = (state: DefaultRootState) => state.results.posts\nexport const selectCount = (state: DefaultRootState) => state.results.count\nexport const selectPageNumber = (state: DefaultRootState) => state.results.pageNumber\nexport const selectPreferences = (state: DefaultRootState) => state.preferences\nexport const selectResultsLayout = (state: DefaultRootState) => state.preferences.resultsLayout\nexport const selectPreloadVideos = (state: DefaultRootState) => state.preferences.resultsLayout\nexport const selectInfinite = (state: DefaultRootState) => state.preferences.infinite\nexport const selectOriginals = (state: DefaultRootState) => state.preferences.originals\nexport const selectRated = (state: DefaultRootState) => state.preferences.rated\nexport const selectRatedThreshold = (state: DefaultRootState) => state.preferences.ratedThreshold\nexport const selectCookies = (state: DefaultRootState) => state.preferences.cookies\nexport const selectFullsceenState = (state: DefaultRootState) => state.reader.isEnabled\nexport const selectFullsceenPostId = (state: DefaultRootState) => state.reader.postId\nexport const selectAliases = (state: DefaultRootState) => state.tags.aliases\nexport const selectPageSize = (state: DefaultRootState) => state.preferences.pageSize\nexport const selectTagSuggestionCount = (state: DefaultRootState) => state.preferences.tagSuggestionsCount\n\n// Memoized selectors\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\n\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\nexport const selectLastPage = createSelector(\n  selectCount,\n  selectPageSize,\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\n)\nexport const selectFullScreenPost = createSelector(selectPosts, selectFullsceenPostId, (posts, fullScreenPostId) =>\n  posts.find((post) => post.id === fullScreenPostId)\n)\nexport const selectFullScreenIndex = createSelector(selectPosts, selectFullScreenPost, (posts, fullScreenPost) =>\n  fullScreenPost ? posts.indexOf(fullScreenPost) : -1\n)\nexport const selectMinRating = createSelector(selectRated, selectRatedThreshold, (rated, ratedThreshold) =>\n  rated ? ratedThreshold : 0\n)\n\n// Parameterized selectors\nexport const selectAliasesByTagName = (tagName: string) => (state: DefaultRootState) => state.tags.aliases[tagName]\nexport const selectPostById = (id: number) => (state: DefaultRootState) =>\n  state.results.posts.find((post) => post.id === id)\n"],"sourceRoot":""}