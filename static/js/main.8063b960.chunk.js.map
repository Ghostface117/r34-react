{"version":3,"sources":["icons/OutOfResults.png","redux/actions.ts","redux/reducers/misc.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/index.ts","redux/store.ts","icons/R34Icon.tsx","redux/selectors.ts","components/common/Button.tsx","components/common/Title.tsx","components/features/Header.tsx","data/types.ts","components/features/Footer.tsx","components/common/Surface.tsx","misc/api.ts","data/Post.ts","data/Tag.ts","misc/prepare.ts","components/tagSelector/TagInput.tsx","components/tag/tagUtils.ts","misc/formatting.ts","components/tag/Tag.tsx","icons/Icons.tsx","data/constants.ts","icons/TypeIcon.tsx","components/tagSelector/DropdownList.tsx","components/tagSelector/TagSelector.tsx","components/common/Toggle.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/tag/TagList.tsx","pages/Help.tsx","pages/Settings.tsx","components/features/Config.tsx","components/post/widgets/Rating.tsx","components/post/widgets/Score.tsx","components/post/widgets/Source.tsx","components/post/Details.tsx","data/utils.ts","components/player/Overlay.tsx","components/player/Video.tsx","components/player/utils.ts","components/player/Gif.tsx","components/player/Picture.tsx","components/player/Player.tsx","components/post/Post.tsx","components/post/PostList.tsx","components/features/Results.tsx","pages/Search.tsx","AppContent.tsx","misc/theme.ts","App.tsx","index.tsx"],"names":["module","exports","setActiveMenu","menu","type","toggleTag","tag","setOption","key","value","initialMiscState","activeMenu","initialPreferencesState","infinite","rated","ratedTreshold","originals","initialResultsState","posts","pageNumber","count","initialTagsState","active","addTag","state","newTag","produce","draft","name","removeTag","tagToRemove","combineReducers","tags","action","tagToToggle","results","addPosts","postCount","setPosts","preferences","misc","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","R34Icon","props","theme","useTheme","xmlns","width","size","height","viewBox","transform","id","cx","cy","fill","stroke","colors","accentColor","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","selectActiveMenu","selectHasResults","Object","keys","length","selectPreferences","selectActiveTags","selectResults","BasicButton","styled","button","InvisibleButton","css","shadow","drop","MenuButton","backgroundColor2","ActiveMenuButton","TopLeftButton","BottomLeftButton","CenterButton","RedButton","backgroundColor","dimensions","borderWidth","BlockButton","borderRadius","AddButton","ModifierButton","Button","children","onClick","disabled","label","TypedButton","getButtonByType","aria-label","Title","h2","BigTitle","h1","HeaderWrapper","header","gutter","Divider","div","TitleBar","layer","box","bigSpacing","MenuBar","nav","Header","useSelector","dispatch","useDispatch","style","marginTop","href","FotterWrapper","footer","spacing","CenteredA","a","Footer","Surface","Line","activeApi","fetch","catch","getTags","searchTerm","res","json","getPosts","minScore","buildPostUrl","getAliases","tagName","page","tagString","values","map","modifier","encodeURIComponent","join","url","PostDataClass","constructor","score","rating","source","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","small_src","big_src","this","TagDataClass","types","preparePost","post","sample_url","preview_url","Number","t","Boolean","Input","input","TagInput","setValue","onChange","event","target","placeholder","prettifyTagname","tagname","replace","formatCount","numberString","number","toFixed","TagWrapper","collapsed","fg","bg","switchingColors","IconWrapper","span","left","right","TagText","text","onKeyDown","e","keyCode","Alias","className","Tag","loadAliases","activeTags","useState","aliases","setAliases","setCollapsed","useEffect","api","then","newAliases","sort","b","filter","alias","isActive","showAliases","onMouseLeave","TypeIcon","ArrowIcon","StyledIcon","i","color","Icon","icon","CharacterIcon","attrs","ArtistIcon","CopyrightIcon","ExpandIcon","ExternalLinkIcon","SourceIcon","RatingIcon","HeartIcon","PlayIcon","PauseIcon","NO_OP","find","match","ListWrapper","tagSelector","offsetTop","clientHeight","offsetLeft","clientWidth","sizeAndPosition","tagSelectorRef","EntryWrapper","TypeWrapper","Entry","flexGrow","paddingRight","DropdownList","entries","entry","TagSelectorWrapper","closed","TagSelector","setTagSelectorRef","setModifier","suggestions","setSuggestions","activateTag","useCallback","suggestion","dirtyTag","prepareTag","handle","setTimeout","toLowerCase","newSuggestions","clearTimeout","ref","trim","s","Wrapper","Thumb","Toggle","onToggle","ToggleWrapper","Label","LabeledToggle","OptionsWrapper","StyledInput","String","Options","ratedInputValue","setRatedInputValue","display","onBlur","TagListWrapper","padding","TagList","Help","Settings","ConfigWrapper","section","Config","search","htmlFor","toUpperCase","startsWith","rel","sourceString","includes","semiSanitized","substring","indexOf","formatSource","fold","keyframes","DetailsWrapper","Bar","Details","tagsForRendering","useMemo","listToMap","keyProp","reduce","result","current","Rating","Score","Source","fade","isVisible","ProgressBar","Overlay","onFullscreen","togglePlay","isPaused","isPlayable","currentTime","duration","setVisible","defaultProps","FlexVideo","video","Video","src","videoRef","setVideoRef","Date","now","time","setTime","intervalId","setIntervalId","controls","loop","poster","preload","paused","undefined","requestFullscreen","stopPropagation","play","setInterval","console","log","pause","clearInterval","FlexImage","img","Gif","setPaused","usedSource","alt","Picture","PlayerWrapper","Player","toggleDetails","media","MediaComponent","getMediaType","getMedia","PostWrapper","Post","loadOriginal","getCorrectSource","PostListWrapper","PostList","ResultsWrapper","scrollLock","Results","isOutOfResults","setOutOfResults","loadMore","window","onscroll","innerHeight","document","documentElement","scrollTop","scrollHeight","outOfResultsPicture","textAlign","Search","hasResults","Main","main","AppWrapper","AppContent","activePage","getActivePage","appMargin","hoverAccent","timings","transistionTime","App","loading","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8063b960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OutOfResults.00a98fae.png\";","import { MenuType, PreferenceKey } from \"../data/types\";\r\nimport TagDataClass from \"../data/Tag\";\r\nimport PostDataClass from \"../data/Post\";\r\n\r\nexport const RESET = \"RESET\";\r\nexport const SET_ACTIVE_MENU = \"SET_ACTIVE_MENU\";\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const REMOVE_TAG = \"REMOVE_TAG\";\r\nexport const TOGGLE_TAG = \"TOGGLE_TAG\";\r\nexport const ADD_POSTS = \"ADD_POSTS\";\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const SET_OPTION = \"SET_OPTION\";\r\n\r\ninterface ResetAction {\r\n  type: typeof RESET;\r\n}\r\n\r\ninterface SetActiveMenuAction {\r\n  type: typeof SET_ACTIVE_MENU;\r\n  menu: MenuType;\r\n}\r\n\r\ninterface AddTagAction {\r\n  type: typeof ADD_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface RemoveTagAction {\r\n  type: typeof REMOVE_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface ToggleTagAction {\r\n  type: typeof TOGGLE_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface AddPostsAction {\r\n  type: typeof ADD_POSTS;\r\n  posts: PostDataClass[];\r\n}\r\n\r\ninterface SetPostsAction {\r\n  type: typeof SET_POSTS;\r\n  posts: PostDataClass[];\r\n  count: number;\r\n}\r\n\r\ninterface SetOptionAction {\r\n  type: typeof SET_OPTION;\r\n  key: PreferenceKey;\r\n  value: any;\r\n}\r\n\r\n/////////////////////////////////////////////////////////\r\n\r\nexport const reset = () => ({\r\n  type: RESET,\r\n});\r\n\r\nexport const setActiveMenu = (menu: MenuType) => ({\r\n  type: SET_ACTIVE_MENU,\r\n  menu,\r\n});\r\n\r\nexport const addTag = (tag: TagDataClass) => ({\r\n  type: ADD_TAG,\r\n  tag,\r\n});\r\n\r\nexport const removeTag = (tag: TagDataClass) => ({\r\n  type: REMOVE_TAG,\r\n  tag,\r\n});\r\n\r\nexport const toggleTag = (tag: TagDataClass) => ({\r\n  type: TOGGLE_TAG,\r\n  tag,\r\n});\r\n\r\nexport const addPosts = (posts: PostDataClass[]) => ({\r\n  type: ADD_POSTS,\r\n  posts,\r\n});\r\n\r\nexport const setPosts = (posts: PostDataClass[], count: number) => ({\r\n  type: SET_POSTS,\r\n  posts,\r\n  count,\r\n});\r\n\r\nexport const setOption = (key: PreferenceKey, value: any) => ({\r\n  type: SET_OPTION,\r\n  key,\r\n  value,\r\n});\r\n\r\n/////////////////////////////////////////////////////////\r\n\r\nexport type AppAction =\r\n  | ResetAction\r\n  | SetActiveMenuAction\r\n  | AddTagAction\r\n  | RemoveTagAction\r\n  | ToggleTagAction\r\n  | AddPostsAction\r\n  | SetPostsAction\r\n  | SetOptionAction;\r\n","import produce from \"immer\";\r\nimport { MenuType } from \"../../data/types\";\r\nimport { SET_ACTIVE_MENU, AppAction } from \"../actions\";\r\n\r\nexport interface MiscState {\r\n  activeMenu: MenuType;\r\n}\r\n\r\nexport const initialMiscState: MiscState = {\r\n  activeMenu: \"search\",\r\n};\r\n\r\nconst setActiveMenu = (state: MiscState, menu: MenuType) =>\r\n  produce(state, (draft) => {\r\n    draft.activeMenu = menu;\r\n  });\r\n\r\nexport default (\r\n  state: MiscState = initialMiscState,\r\n  action: AppAction\r\n): MiscState => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_MENU:\r\n      return setActiveMenu(state, action.menu);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport { PreferenceKey } from \"../../data/types\";\r\nimport { AppAction, SET_OPTION } from \"../actions\";\r\n\r\nexport interface PreferencesState {\r\n  infinite: boolean;\r\n  rated: boolean;\r\n  ratedTreshold: number;\r\n  originals: boolean;\r\n}\r\n\r\nexport const initialPreferencesState: PreferencesState = {\r\n  infinite: true,\r\n  rated: false,\r\n  ratedTreshold: 1,\r\n  originals: false,\r\n};\r\n\r\nconst setOption = (state: PreferencesState, key: PreferenceKey, value: any) =>\r\n  produce(state, (draft) => {\r\n    switch (key) {\r\n      case \"infinite\":\r\n        draft.infinite = value;\r\n        break;\r\n      case \"rated\":\r\n        draft.rated = value;\r\n        break;\r\n      case \"ratedTreshold\":\r\n        draft.ratedTreshold = value;\r\n        break;\r\n      case \"originals\":\r\n        draft.originals = value;\r\n    }\r\n  });\r\n\r\nexport default (\r\n  state: PreferencesState = initialPreferencesState,\r\n  action: AppAction\r\n): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_OPTION:\r\n      return setOption(state, action.key, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport PostDataClass from \"../../data/Post\";\r\nimport { SET_POSTS, ADD_POSTS, AppAction } from \"../actions\";\r\n\r\nexport interface ResultsState {\r\n  posts: PostDataClass[];\r\n  pageNumber: number;\r\n  count: number;\r\n}\r\n\r\nexport const initialResultsState: ResultsState = {\r\n  posts: [],\r\n  pageNumber: 0,\r\n  count: 0,\r\n};\r\n\r\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\r\n  produce(state, (draft) => {\r\n    draft.posts = [...state.posts, ...posts];\r\n    draft.pageNumber = state.pageNumber + 1;\r\n  });\r\n\r\nconst setPosts = (\r\n  state: ResultsState,\r\n  posts: PostDataClass[],\r\n  postCount: number\r\n) =>\r\n  produce(state, (draft) => {\r\n    draft.posts = posts;\r\n    draft.count = postCount;\r\n    draft.pageNumber = 0;\r\n  });\r\n\r\nexport default (\r\n  state: ResultsState = initialResultsState,\r\n  action: AppAction\r\n): ResultsState => {\r\n  switch (action.type) {\r\n    case ADD_POSTS:\r\n      return addPosts(state, action.posts);\r\n    case SET_POSTS:\r\n      return setPosts(state, action.posts, action.count);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { SimpleMap } from \"../../data/types\";\r\nimport { ADD_TAG, AppAction, REMOVE_TAG, TOGGLE_TAG } from \"../actions\";\r\n\r\nexport interface TagsState {\r\n  active: SimpleMap<TagDataClass>;\r\n}\r\n\r\nexport const initialTagsState: TagsState = {\r\n  active: {},\r\n};\r\n\r\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\r\n  produce(state, (draft) => {\r\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag };\r\n  });\r\n\r\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\r\n  produce(state, (draft) => {\r\n    delete draft.active[tagToRemove.name];\r\n  });\r\n\r\nconst toggleTag = (state: TagsState, tagToToggle: TagDataClass) =>\r\n  state.active[tagToToggle.name]\r\n    ? removeTag(state, tagToToggle)\r\n    : addTag(state, tagToToggle);\r\n\r\nexport default (\r\n  state: TagsState = initialTagsState,\r\n  action: AppAction\r\n): TagsState => {\r\n  switch (action.type) {\r\n    case ADD_TAG:\r\n      return addTag(state, action.tag);\r\n    case REMOVE_TAG:\r\n      return removeTag(state, action.tag);\r\n    case TOGGLE_TAG:\r\n      return toggleTag(state, action.tag);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport misc from \"./misc\";\r\nimport preferences from \"./preferences\";\r\nimport results from \"./results\";\r\nimport tags from \"./tags\";\r\n\r\nexport default combineReducers({ tags, results, preferences, misc });\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"appstate\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { ThemeType } from \"../misc/theme\";\r\nimport { useTheme } from \"styled-components\";\r\n\r\nfunction R34Icon(props: { size: number }) {\r\n  const theme = useTheme() as ThemeType;\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.size}\r\n      height={props.size}\r\n      viewBox=\"0 0 12.7 12.7\"\r\n    >\r\n      <g transform=\"translate(0,-284.3)\">\r\n        <circle\r\n          id=\"path18\"\r\n          cx=\"6.3499999\"\r\n          cy=\"290.65002\"\r\n          fill=\"none\"\r\n          stroke={theme.colors.accentColor}\r\n          strokeWidth=\"0.50848764\"\r\n          strokeMiterlimit=\"4\"\r\n          strokeDasharray=\"none\"\r\n          strokeOpacity=\"1\"\r\n          r=\"6.0957561\"\r\n        />\r\n        <text\r\n          fontStyle=\"normal\"\r\n          fontWeight=\"normal\"\r\n          fontSize=\"8.3113203px\"\r\n          fontFamily=\"sansSerif\"\r\n          letterSpacing=\"0px\"\r\n          wordSpacing=\"0px\"\r\n          fill={theme.colors.accentColor}\r\n          fillOpacity=\"1\"\r\n          x=\"2.1363549\"\r\n          y=\"289.02704\"\r\n          id=\"text4533\"\r\n          transform=\"scale(0.98538224,1.0148346)\"\r\n        >\r\n          <tspan\r\n            id=\"tspan4531\"\r\n            x=\"2.1363549\"\r\n            y=\"289.02704\"\r\n            fontStyle=\"normal\"\r\n            fontVariant=\"normal\"\r\n            fontWeight=\"300\"\r\n            fontStretch=\"normal\"\r\n            fontFamily=\"Calibri\"\r\n            fill={theme.colors.accentColor}\r\n            fillOpacity=\"1\"\r\n          >\r\n            34\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default R34Icon;\r\n","import { TagsState } from \"./reducers/tags\";\r\nimport { MiscState } from \"./reducers/misc\";\r\nimport { ResultsState } from \"./reducers/results\";\r\nimport { PreferencesState } from \"./reducers/preferences\";\r\n\r\ninterface RootState {\r\n  misc: MiscState;\r\n  results: ResultsState;\r\n  preferences: PreferencesState;\r\n  tags: TagsState;\r\n}\r\n\r\nexport const selectActiveMenu = (state: RootState) => state.misc.activeMenu;\r\nexport const selectHasResults = (state: RootState) =>\r\n  Object.keys(state.results.posts).length !== 0;\r\nexport const selectPreferences = (state: RootState) => state.preferences;\r\nexport const selectActiveTags = (state: RootState) => state.tags.active;\r\nexport const selectResults = (state: RootState) => state.results;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ButtonType } from \"../../data/types\";\r\n\r\nconst BasicButton = styled.button`\r\n  font-size: 14px;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst InvisibleButton = styled(BasicButton)(\r\n  (props) => css`\r\n    background-color: transparent;\r\n    border: none;\r\n    border-radius: 1000px;\r\n    padding: 5px;\r\n    filter: ${props.theme.shadow.drop};\r\n    svg {\r\n      transition: all 0.2s ease-in-out;\r\n    }\r\n\r\n    :hover {\r\n      svg {\r\n        transform: scale(1.1);\r\n      }\r\n    }\r\n  `\r\n);\r\n\r\nconst MenuButton = styled(InvisibleButton)(\r\n  (props) => css`\r\n    color: ${props.theme.colors.backgroundColor2};\r\n  `\r\n);\r\n\r\nconst ActiveMenuButton = styled(InvisibleButton)(\r\n  (props) => css`\r\n    color: ${props.theme.colors.accentColor};\r\n  `\r\n);\r\n\r\nconst TopLeftButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  margin: 10px;\r\n`;\r\n\r\nconst BottomLeftButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  margin: 10px;\r\n`;\r\n\r\nconst CenterButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst RedButton = styled(BasicButton)(\r\n  (props) => css`\r\n    height: 32px;\r\n    font-size: 14px;\r\n    color: ${props.theme.colors.accentColor};\r\n    background: ${props.theme.colors.backgroundColor};\r\n    border: ${props.theme.colors.accentColor}\r\n      ${props.theme.dimensions.borderWidth} solid;\r\n\r\n    transition: border-color 0.4s ease-in-out;\r\n    transition: color 0.4s ease-in-out;\r\n    transition: background-color 0.4s ease-in-out;\r\n\r\n    :hover {\r\n      background-color: ${props.theme.colors.accentColor};\r\n      color: ${props.theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${props.theme.colors.backgroundColor2};\r\n\r\n      border-color: ${props.theme.colors.backgroundColor2};\r\n      cursor: pointer;\r\n    }\r\n  `\r\n);\r\n\r\nexport const BlockButton = styled(RedButton)(\r\n  (props) => css`\r\n    width: 100%;\r\n    border-radius: ${props.theme.dimensions.borderRadius};\r\n  `\r\n);\r\n\r\nexport const AddButton = styled(RedButton)(\r\n  (props) => css`\r\n    border-left-width: 0;\r\n    border-radius: 0 ${props.theme.dimensions.borderRadius}\r\n      ${props.theme.dimensions.borderRadius} 0;\r\n  `\r\n);\r\n\r\nexport const ModifierButton = styled(BasicButton)(\r\n  (props) => css`\r\n    background-color: transparent;\r\n    min-width: 48px;\r\n    border: ${props.theme.colors.accentColor}\r\n      ${props.theme.dimensions.borderWidth} solid;\r\n    border-right-width: 0;\r\n    border-radius: ${props.theme.dimensions.borderRadius} 0 0\r\n      ${props.theme.dimensions.borderRadius};\r\n    font-weight: bold;\r\n  `\r\n);\r\n\r\nconst getButtonByType = (type: ButtonType, active: boolean) => {\r\n  switch (type) {\r\n    case \"invisible\":\r\n      return InvisibleButton;\r\n    case \"block\":\r\n      return BlockButton;\r\n    case \"topLeft\":\r\n      return TopLeftButton;\r\n    case \"bottomLeft\":\r\n      return BottomLeftButton;\r\n    case \"center\":\r\n      return CenterButton;\r\n    case \"modifier\":\r\n      return ModifierButton;\r\n    case \"add\":\r\n      return AddButton;\r\n    case \"menu\":\r\n      return active ? ActiveMenuButton : MenuButton;\r\n    default:\r\n      return RedButton;\r\n  }\r\n};\r\n\r\ninterface ButtonProps {\r\n  type: ButtonType;\r\n  children: JSX.Element | string;\r\n  onClick: MouseEventHandler;\r\n  active?: boolean;\r\n  disabled?: boolean;\r\n  label: string;\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    type,\r\n    children,\r\n    onClick,\r\n    active = false,\r\n    disabled = false,\r\n    label,\r\n  } = props;\r\n  const TypedButton = getButtonByType(type, active);\r\n\r\n  return (\r\n    <TypedButton onClick={onClick} disabled={disabled} aria-label={label}>\r\n      {children}\r\n    </TypedButton>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: lighter;\r\n  margin: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Title;\r\n\r\nexport const BigTitle = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  font-weight: lighter;\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { HELP, MENU, SEARCH, SETTINGS } from \"../../data/types\";\r\nimport R34Icon from \"../../icons/R34Icon\";\r\nimport { setActiveMenu } from \"../../redux/actions\";\r\nimport { selectActiveMenu } from \"../../redux/selectors\";\r\nimport Button from \"../common/Button\";\r\nimport { BigTitle } from \"../common/Title\";\r\n\r\nconst HeaderWrapper = styled.header(\r\n  (props) => css`\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nconst Divider = styled.div(\r\n  (props) => css`\r\n    width: 1px;\r\n    height: 32px;\r\n    margin: 0 ${props.theme.dimensions.gutter};\r\n    background: ${props.theme.colors.backgroundColor2};\r\n  `\r\n);\r\n\r\nconst TitleBar = styled.div(\r\n  (props) => css`\r\n    background: ${props.theme.misc.layer};\r\n    ${props.theme.shadow.box};\r\n    padding: ${props.theme.dimensions.gutter} 0;\r\n    margin-bottom: ${props.theme.dimensions.bigSpacing};\r\n  `\r\n);\r\n\r\nconst MenuBar = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction Header() {\r\n  const activeMenu = useSelector(selectActiveMenu);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <TitleBar>\r\n        <BigTitle>\r\n          <R34Icon size={32} />\r\n          <Divider />\r\n          <span style={{ marginTop: 2 }}>\r\n            Browse <a href=\"https://rule34.xxx\">Rule34</a>\r\n          </span>\r\n        </BigTitle>\r\n      </TitleBar>\r\n\r\n      <MenuBar>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === SEARCH}\r\n          onClick={() => dispatch(setActiveMenu(SEARCH))}\r\n          label={SEARCH}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === HELP}\r\n          onClick={() => dispatch(setActiveMenu(HELP))}\r\n          label={HELP}\r\n        >\r\n          Help\r\n        </Button>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === SETTINGS}\r\n          onClick={() => dispatch(setActiveMenu(SETTINGS))}\r\n          label={SETTINGS}\r\n        >\r\n          Settings\r\n        </Button>\r\n      </MenuBar>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","export const GENERAL = \"general\";\r\nexport const CHARACTER = \"character\";\r\nexport const AMBIGUOUS = \"ambiguous\";\r\nexport const ARTIST = \"artist\";\r\nexport const COPYRIGHT = \"copyright\";\r\nexport type TagType =\r\n  | typeof GENERAL\r\n  | typeof CHARACTER\r\n  | typeof AMBIGUOUS\r\n  | typeof ARTIST\r\n  | typeof COPYRIGHT;\r\n\r\nexport const PLUS = \"+\";\r\nexport const MINUS = \"-\";\r\nexport type Modifier = typeof PLUS | typeof MINUS;\r\n\r\nexport const VIDEO = \"video\";\r\nexport const IMAGE = \"image\";\r\nexport type PostType = typeof VIDEO | typeof IMAGE;\r\n\r\nexport const PICTURE = \"picture\";\r\nexport const GIF = \"gif\";\r\nexport type MediaType = typeof VIDEO | typeof PICTURE | typeof GIF;\r\n\r\nexport const SEARCH = \"search\";\r\nexport const HELP = \"help\";\r\nexport const SETTINGS = \"settings\";\r\nexport type MenuType = typeof SEARCH | typeof HELP | typeof SETTINGS;\r\n\r\nexport const INVISIBLE = \"invisible\";\r\nexport const BLOCK = \"block\";\r\nexport const TOPLEFT = \"topLeft\";\r\nexport const BOTTOMLEFT = \"bottomLeft\";\r\nexport const CENTER = \"center\";\r\nexport const MODIFIER = \"modifier\";\r\nexport const ADD = \"add\";\r\nexport const MENU = \"menu\";\r\nexport const RED = \"red\";\r\nexport type ButtonType =\r\n  | typeof INVISIBLE\r\n  | typeof BLOCK\r\n  | typeof TOPLEFT\r\n  | typeof BOTTOMLEFT\r\n  | typeof CENTER\r\n  | typeof MODIFIER\r\n  | typeof ADD\r\n  | typeof MENU\r\n  | typeof RED;\r\n\r\nexport const SAFE = \"safe\";\r\nexport const QUESTIONABLE = \"questionable\";\r\nexport const EXPLICIT = \"explicit\";\r\nexport type RatingType = typeof SAFE | typeof QUESTIONABLE | typeof EXPLICIT;\r\n\r\nexport const INFINITE = \"infinite\";\r\nexport const RATED = \"rated\";\r\nexport const RATEDTRESHOLD = \"ratedTreshold\";\r\nexport const ORIGINALS = \"originals\";\r\nexport type PreferenceKey =\r\n  | typeof INFINITE\r\n  | typeof RATED\r\n  | typeof RATEDTRESHOLD\r\n  | typeof ORIGINALS;\r\n\r\nexport interface SimpleMap<V> {\r\n  [key: string]: V;\r\n}\r\n\r\nexport interface SimpleList<V> {\r\n  [key: number]: V;\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst FotterWrapper = styled.footer(\r\n  (props) => css`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1px 1fr 1px 1fr;\r\n    justify-content: space-around;\r\n    padding: ${props.theme.dimensions.spacing};\r\n  `\r\n);\r\n\r\nconst Divider = styled.div(\r\n  (props) => css`\r\n    width: 1px;\r\n    height: 20px;\r\n    background: ${props.theme.colors.backgroundColor2};\r\n  `\r\n);\r\n\r\nconst CenteredA = styled.a`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FotterWrapper>\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react/issues/new?template=bug_report.md\">\r\n        Report a bug\r\n      </CenteredA>\r\n      <Divider />\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react\">\r\n        Github\r\n      </CenteredA>\r\n      <Divider />\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react/issues/new?template=feature_request.md\">\r\n        Feature request\r\n      </CenteredA>\r\n    </FotterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Surface = styled.div(\r\n  (props) => css`\r\n    padding: ${props.theme.dimensions.gutter};\r\n    background: ${props.theme.misc.layer};\r\n    ${props.theme.shadow.box};\r\n    border-radius: ${props.theme.dimensions.borderRadius};\r\n\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nexport default Surface;\r\n\r\nexport const Line = styled.div(\r\n  (props) => css`\r\n    width: 100%;\r\n    height: 1px;\r\n    background: ${props.theme.misc.layer};\r\n  `\r\n);\r\n","import TagDataClass from \"../data/Tag\";\r\nimport { SimpleMap } from \"../data/types\";\r\n\r\nconst pageSize = 20;\r\nconst apiUrl1 = \"https://r34-json.herokuapp.com\";\r\nconst apiUrl2 = \"https://r34-api-clone.herokuapp.com\";\r\n\r\nlet activeApi = apiUrl1;\r\n\r\n// Failover to apiUrl2\r\nfetch(activeApi).catch(() => (activeApi = apiUrl2));\r\n\r\nexport default {\r\n  async getTags(searchTerm: string) {\r\n    const res = await fetch(\r\n      `${activeApi}/tags?limit=${pageSize}&name=${searchTerm}*&order_by=posts`\r\n    );\r\n\r\n    return await res.json();\r\n  },\r\n\r\n  async getPosts(tags: SimpleMap<TagDataClass>, pageNumber = 0, minScore = 0) {\r\n    const res = await fetch(buildPostUrl(pageNumber, tags, minScore));\r\n\r\n    return await res.json();\r\n  },\r\n\r\n  async getAliases(tagName: string) {\r\n    const res = await fetch(`${activeApi}/alias/\"${tagName}`);\r\n\r\n    return await res.json();\r\n  },\r\n};\r\n\r\nfunction buildPostUrl(\r\n  page: number,\r\n  tags: SimpleMap<TagDataClass>,\r\n  minScore: number\r\n) {\r\n  const tagString = Object.values(tags)\r\n    .map(\r\n      (tag) =>\r\n        `${tag.modifier === \"-\" ? \"-\" : \"\"}${encodeURIComponent(tag.name)}`\r\n    )\r\n    .join(\"+\");\r\n\r\n  let url = `${activeApi}/posts?pid=${page}&limit=${pageSize}&tags=${tagString}`;\r\n\r\n  if (minScore > 0) {\r\n    url += `+${encodeURIComponent(\"score:>=\" + minScore)}`;\r\n  }\r\n\r\n  return url;\r\n}\r\n","import { RatingType, PostType } from \"./types\";\r\nimport TagDataClass from \"./Tag\";\r\n\r\nexport default class PostDataClass {\r\n  id: number;\r\n\r\n  score: number;\r\n  rating: RatingType;\r\n  source: string;\r\n  tags: TagDataClass[];\r\n\r\n  media_type: PostType;\r\n\r\n  thumbnail_src: string;\r\n  small_src: string;\r\n  big_src: string;\r\n\r\n  width: number;\r\n  height: number;\r\n\r\n  creator_id: number;\r\n  creator_url: string;\r\n\r\n  status: string;\r\n  parent_id: number;\r\n  has_children: boolean;\r\n  has_comments: boolean;\r\n  comments_url: string;\r\n  has_notes: boolean;\r\n  created_at: string;\r\n  change: string;\r\n\r\n  constructor(\r\n    id: number,\r\n    score: number,\r\n    rating: string,\r\n    source: string,\r\n    tags: TagDataClass[],\r\n    media_type: string,\r\n    media_src: any,\r\n    file_url: any,\r\n    thumbnail_src: string,\r\n    width: number,\r\n    height: number,\r\n    creator_id: number,\r\n    creator_url: string,\r\n    status: string,\r\n    parent_id: number,\r\n    has_children: boolean,\r\n    has_comments: boolean,\r\n    comments_url: string,\r\n    has_notes: boolean,\r\n    created_at: string,\r\n    change: string\r\n  ) {\r\n    this.id = id;\r\n\r\n    this.score = score;\r\n    this.rating = rating as RatingType;\r\n    this.source = source;\r\n    this.tags = tags;\r\n\r\n    this.media_type = media_type as PostType;\r\n    this.small_src = media_src;\r\n    this.big_src = file_url;\r\n    this.thumbnail_src = thumbnail_src;\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.creator_id = creator_id;\r\n    this.creator_url = creator_url;\r\n\r\n    this.status = status;\r\n    this.parent_id = parent_id;\r\n    this.has_children = has_children;\r\n    this.has_comments = has_comments;\r\n    this.comments_url = comments_url;\r\n    this.has_notes = has_notes;\r\n    this.created_at = created_at;\r\n    this.change = change;\r\n  }\r\n}\r\n","import { TagType, Modifier } from \"./types\";\r\n\r\nexport default class TagDataClass {\r\n  name: string;\r\n  count?: number | null;\r\n  types?: TagType[];\r\n  modifier?: Modifier;\r\n\r\n  constructor(\r\n    name: string,\r\n    types: TagType[] = [],\r\n    count: number | null = null,\r\n    modifier: Modifier = \"+\"\r\n  ) {\r\n    this.name = name;\r\n    this.types = types;\r\n    this.count = count;\r\n    this.modifier = modifier;\r\n  }\r\n}\r\n","import PostDataClass from \"../data/Post\";\r\nimport TagDataClass from \"../data/Tag\";\r\nimport { TagType, Modifier, RatingType } from \"../data/types\";\r\n\r\ninterface DirtyTag {\r\n  name: string;\r\n  types: string[];\r\n  count: string;\r\n  modifier: string;\r\n}\r\n\r\ninterface DirtyPost {\r\n  id: string;\r\n  type: string;\r\n  score: string;\r\n  rating: string;\r\n  source: string;\r\n  tags: string[];\r\n  file_url: string;\r\n  width: string;\r\n  height: string;\r\n  creator_id: string;\r\n  creator_url: string;\r\n  sample_url: string;\r\n  preview_url: string;\r\n  status: string;\r\n  parent_id: string;\r\n  has_children: string;\r\n  has_comments: string;\r\n  comments_url: string;\r\n  has_notes: string;\r\n  created_at: string;\r\n  change: string;\r\n}\r\n\r\nexport function prepareTag(dirtyTag: DirtyTag) {\r\n  const { name, types, count, modifier } = dirtyTag;\r\n\r\n  return new TagDataClass(\r\n    name,\r\n    types as TagType[],\r\n    Number(count),\r\n    modifier as Modifier\r\n  );\r\n}\r\n\r\nexport function preparePost(post: DirtyPost) {\r\n  const {\r\n    id,\r\n    type,\r\n    score,\r\n    rating,\r\n    source,\r\n    tags,\r\n    file_url,\r\n    width,\r\n    height,\r\n    creator_id,\r\n    creator_url,\r\n    sample_url,\r\n    preview_url,\r\n    status,\r\n    parent_id,\r\n    has_children,\r\n    has_comments,\r\n    comments_url,\r\n    has_notes,\r\n    created_at,\r\n    change,\r\n  } = post;\r\n  return new PostDataClass(\r\n    Number(id),\r\n    Number(score),\r\n    rating as RatingType,\r\n    source,\r\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\r\n    type,\r\n    sample_url,\r\n    file_url,\r\n    preview_url,\r\n    Number(width),\r\n    Number(height),\r\n    Number(creator_id),\r\n    creator_url,\r\n    status,\r\n    Number(parent_id),\r\n    Boolean(has_children),\r\n    Boolean(has_comments),\r\n    comments_url,\r\n    Boolean(has_notes),\r\n    created_at,\r\n    change\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { string, func } from \"prop-types\";\r\n\r\nconst Input = styled.input(\r\n  (props) => css`\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    background: none;\r\n    font-size: 14px;\r\n    border-top: ${props.theme.colors.accentColor}\r\n      ${props.theme.dimensions.borderWidth} solid;\r\n    border-bottom: ${props.theme.colors.accentColor}\r\n      ${props.theme.dimensions.borderWidth} solid;\r\n  `\r\n);\r\n\r\ninterface TagInputProps {\r\n  value: string;\r\n  setValue: (newValue: string) => void;\r\n}\r\n\r\nexport default function TagInput(props: TagInputProps) {\r\n  const { value, setValue } = props;\r\n  return (\r\n    <Input\r\n      id=\"tag-input\"\r\n      value={value}\r\n      onChange={(event) => setValue(event.target.value)}\r\n      placeholder=\"Search for tags\"\r\n      aria-label=\"Search\"\r\n    />\r\n  );\r\n}\r\n\r\nTagInput.propTypes = {\r\n  value: string,\r\n  setValue: func,\r\n};\r\n","export function prettifyTagname(tagname: string) {\r\n  return tagname.replace(/_/g, \" \");\r\n}\r\n\r\nexport function normalizeTagname(tagname: string) {\r\n  return tagname.toLowerCase().replace(/ /g, \"_\");\r\n}\r\n","export const formatCount = (numberString: number) => {\r\n  const number = numberString;\r\n\r\n  if (number >= 1e6) {\r\n    return `${(number / 1e6).toFixed(0)}M`;\r\n  }\r\n\r\n  if (number >= 1e3) {\r\n    return `${(number / 1e3).toFixed(0)}K`;\r\n  }\r\n\r\n  return number;\r\n};\r\n\r\n/**\r\n * @param {String} sourceString\r\n */\r\nexport const formatSource = (sourceString: string) => {\r\n  if (\r\n    sourceString.includes(\"http:\") ||\r\n    sourceString.includes(\"https:\") ||\r\n    sourceString.includes(\"www.\") ||\r\n    sourceString.includes(\".com\")\r\n  ) {\r\n    let semiSanitized = sourceString\r\n      .replace(/https?:\\/\\//, \"\")\r\n      .replace(/ww[w\\d]\\./, \"\")\r\n      .replace(\".com\", \"\")\r\n      .replace(\".org\", \"\")\r\n      .replace(\".net\", \"\");\r\n\r\n    return semiSanitized.substring(0, semiSanitized.indexOf(\"/\"));\r\n  } else {\r\n    return sourceString;\r\n  }\r\n};\r\n","import React, { useState, useEffect, MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport \"./Tag.css\";\r\nimport api from \"../../misc/api\";\r\nimport TypeIcon from \"../../icons/TypeIcon\";\r\nimport { ArrowIcon } from \"../../icons/Icons\";\r\nimport { prettifyTagname } from \"./tagUtils\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActiveTags } from \"../../redux/selectors\";\r\nimport { toggleTag } from \"../../redux/actions\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nconst dropdownBorderRadius = (collapsed: boolean, theme: ThemeType) =>\r\n  collapsed\r\n    ? theme.dimensions.borderRadius\r\n    : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`;\r\n\r\nconst switchingColors = (active: boolean, theme: ThemeType) => {\r\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor;\r\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor;\r\n\r\n  return css`\r\n    color: ${fg};\r\n    background-color: ${bg};\r\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\r\n    transition: background-color 0.4s ease-in-out;\r\n\r\n    cursor: pointer;\r\n\r\n    :hover,\r\n    :focus,\r\n    :active {\r\n      border-color: ${theme.colors.backgroundColor2};\r\n      color: ${theme.colors.backgroundColor2};\r\n\r\n      i {\r\n        color: ${theme.colors.backgroundColor2};\r\n      }\r\n    }\r\n  `;\r\n};\r\n\r\nexport const TagWrapper = styled.div(\r\n  (props: {\r\n    active: boolean;\r\n    collapsed: boolean;\r\n    onMouseLeave: MouseEventHandler;\r\n    theme: ThemeType;\r\n  }) =>\r\n    css`\r\n      display: inline-block;\r\n      padding: 0.25rem;\r\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\r\n      font-size: 14px;\r\n      line-height: 1.2;\r\n      vertical-align: baseline;\r\n      margin: ${props.theme.dimensions.spacing};\r\n      ${switchingColors(props.active, props.theme)}\r\n    `\r\n);\r\n\r\nconst IconWrapper = styled.span(\r\n  (props: { left?: boolean; right?: boolean }) => css`\r\n    ${props.left ? \"margin-right: 5px;\" : \"\"}\r\n    ${props.right ? \"margin-left: 5px;\" : \"\"}\r\n  `\r\n);\r\n\r\ninterface TagProps extends TagDataClass {\r\n  loadAliases: boolean;\r\n}\r\n\r\ntype TagLike = {\r\n  name: string;\r\n  posts: number;\r\n};\r\n\r\nfunction Tag(props: TagProps) {\r\n  const { name, count, modifier, types, loadAliases } = props;\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const [aliases, setAliases] = useState<TagLike[]>([]);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (activeTags[name])\r\n      api.getAliases(name).then((newAliases: TagLike[]) => {\r\n        newAliases.sort((a, b) => b.posts - a.posts);\r\n        setAliases(newAliases.filter((alias) => !activeTags[alias.name]));\r\n      });\r\n  }, [name, activeTags]);\r\n\r\n  const isActive = Boolean(activeTags[name]);\r\n  const showAliases = loadAliases && aliases && aliases.length > 0;\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onMouseLeave={() => setCollapsed(true)}\r\n    >\r\n      <TypeIcon types={types} left />\r\n      <TagText name={name} count={count} modifier={modifier} types={types} />\r\n      {showAliases && (\r\n        <>\r\n          <IconWrapper right onClick={() => setCollapsed(!collapsed)}>\r\n            <ArrowIcon />\r\n          </IconWrapper>\r\n          <div className={\"dropdown-list\" + (!collapsed ? \" visible\" : \"\")}>\r\n            {aliases.map(({ name, posts }) => (\r\n              <Alias key={\"t_\" + name} name={name} count={posts} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  );\r\n}\r\n\r\nfunction TagText(props: TagDataClass) {\r\n  const { name, count, modifier, types } = props;\r\n  const dispatch = useDispatch();\r\n  const tagname = prettifyTagname(name);\r\n  const text = count ? `${tagname} (${formatCount(count)})` : tagname;\r\n\r\n  return (\r\n    <span\r\n      onClick={() => dispatch(toggleTag(new TagDataClass(name, types, count)))}\r\n      onKeyDown={(e) =>\r\n        e.keyCode === 32 &&\r\n        dispatch(toggleTag(new TagDataClass(name, types, count)))\r\n      }\r\n    >\r\n      {modifier === \"-\" ? <s>{text}</s> : text}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Alias(props: TagDataClass) {\r\n  const { name, count } = props;\r\n  return (\r\n    <div className=\"alias\">\r\n      <TagText name={name} count={count} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tag;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TagWrapper } from \"../components/tag/Tag\";\r\nimport { ThemeType } from \"../misc/theme\";\r\n\r\nexport const StyledIcon = styled.i(\r\n  (props) => css`\r\n    ${(props: { color: string; size: number; theme: ThemeType }) => `\r\n    color: ${props.color};\r\n    min-width: ${props.size}px;\r\n    height: ${props.size}px;\r\n\r\n    ${TagWrapper}:hover & {\r\n      color: ${props.theme.colors.accentColor};\r\n    }\r\n\r\n    ${TagWrapper}:active & ,  ${TagWrapper}:focus & {\r\n      color: ${props.theme.colors.backgroundColor2};\r\n    }\r\n  `}\r\n  `\r\n);\r\n\r\nconst IconWrapper = styled.span(\r\n  (props: { left: boolean; right: boolean }) => css`\r\n    line-height: 16px;\r\n    ${props.left ? \"margin-right: 5px;\" : \"\"}\r\n    ${props.right ? \"margin-left: 5px;\" : \"\"}\r\n  `\r\n);\r\n\r\ninterface IconProps {\r\n  icon: string;\r\n  className?: string;\r\n  color?: string;\r\n  size?: number;\r\n  onClick?: MouseEventHandler;\r\n  left?: boolean;\r\n  right?: boolean;\r\n}\r\n\r\nconst Icon = (props: IconProps) => {\r\n  const {\r\n    icon,\r\n    className = \"\",\r\n    color = \"black\",\r\n    size = 14,\r\n    onClick = () => {},\r\n    left = false,\r\n    right = false,\r\n  } = props;\r\n  return (\r\n    <IconWrapper onClick={onClick} left={left} right={right}>\r\n      <StyledIcon\r\n        className={`fas ${icon} ${className}`}\r\n        color={color}\r\n        size={size}\r\n      />\r\n    </IconWrapper>\r\n  );\r\n};\r\n\r\nexport const CharacterIcon = styled(Icon).attrs({\r\n  icon: \"fa-user\",\r\n})``;\r\n\r\nexport const ArtistIcon = styled(Icon).attrs({\r\n  icon: \"fa-pen\",\r\n})``;\r\n\r\nexport const CopyrightIcon = styled(Icon).attrs({\r\n  icon: \"fa-copyright\",\r\n})``;\r\n\r\nexport const PlusIcon = styled(Icon).attrs({\r\n  icon: \"fa-plus-circle\",\r\n})``;\r\n\r\nexport const MinusIcon = styled(Icon).attrs({\r\n  icon: \"fa-minus-circle\",\r\n})``;\r\n\r\nexport const CloseIcon = styled(Icon).attrs({\r\n  icon: \"fa-times\",\r\n})``;\r\n\r\nexport const ExpandIcon = styled(Icon).attrs({\r\n  icon: \"fa-expand\",\r\n})``;\r\n\r\nexport const ArrowIcon = styled(Icon).attrs({\r\n  icon: \"fa-caret-down\",\r\n})``;\r\n\r\nexport const ExternalLinkIcon = styled(Icon).attrs({\r\n  icon: \"fa-external-link-alt\",\r\n})``;\r\n\r\nexport const SourceIcon = styled(Icon).attrs({\r\n  icon: \"fa-hashtag\",\r\n})``;\r\n\r\nexport const RatingIcon = styled(Icon).attrs({\r\n  icon: \"fa-registered\",\r\n})``;\r\n\r\nexport const HeartIcon = styled(Icon).attrs({\r\n  icon: \"fa-heart\",\r\n})``;\r\n\r\nexport const PlayIcon = styled(Icon).attrs({\r\n  icon: \"fa-play\",\r\n})``;\r\n\r\nexport const PauseIcon = styled(Icon).attrs({\r\n  icon: \"fa-pause\",\r\n})``;\r\n\r\nexport const ArrowUp = styled(Icon).attrs({\r\n  icon: \"fa-caret-down\",\r\n})``;\r\n\r\nexport const ArrowDown = styled(Icon).attrs({\r\n  icon: \"fa-caret-up\",\r\n})``;\r\n","export const PICTURE = \"picture\";\r\nexport const GIF = \"gif\";\r\nexport const VIDEO = \"video\";\r\n\r\nexport const NO_OP = () => {};\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { CharacterIcon, CopyrightIcon, ArtistIcon } from \"./Icons\";\r\nimport { NO_OP } from \"../data/constants\";\r\n\r\ninterface TypeIconProps {\r\n  types?: string[];\r\n  className?: string;\r\n  color?: string;\r\n  size?: number;\r\n  onClick?: MouseEventHandler;\r\n  left?: boolean;\r\n  right?: boolean;\r\n}\r\n\r\nexport default function TypeIcon(props: TypeIconProps) {\r\n  const { types = [], className = \"\", onClick = NO_OP } = props;\r\n  const interestingType = types.find((t) => !t.match(/^[general|ambiguous]$/));\r\n\r\n  switch (interestingType) {\r\n    case \"character\":\r\n      return <CharacterIcon className={className} onClick={onClick} left />;\r\n    case \"copyright\":\r\n      return <CopyrightIcon className={className} onClick={onClick} left />;\r\n    case \"artist\":\r\n      return <ArtistIcon className={className} onClick={onClick} left />;\r\n    default:\r\n      return <div className={className}></div>;\r\n  }\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TypeIcon from \"../../icons/TypeIcon\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport { prettifyTagname } from \"../tag/tagUtils\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { TagType } from \"../../data/types\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\r\n  if (tagSelector) {\r\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector;\r\n\r\n    return `\r\n      position: absolute;\r\n      top: ${offsetTop + clientHeight - 2}px;\r\n      left: ${offsetLeft}px;\r\n      width: ${clientWidth}px;`;\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nexport const ListWrapper = styled.div(\r\n  (props: { tagSelectorRef: HTMLDivElement | null; theme: ThemeType }) => css`\r\n    ${sizeAndPosition(props.tagSelectorRef)};\r\n    background: white;\r\n    box-sizing: border-box;\r\n    border: ${props.theme.dimensions.borderWidth}\r\n      ${props.theme.colors.accentColor} solid;\r\n    border-radius: 0 0 3px 3px;\r\n    color: black;\r\n    z-index: 1;\r\n  `\r\n);\r\n\r\ninterface DropdownListProps {\r\n  tagSelectorRef: HTMLDivElement | null;\r\n  entries: {\r\n    name: string;\r\n    posts: number;\r\n    types: TagType[];\r\n  }[];\r\n  onClick: (entry: TagDataClass) => void;\r\n}\r\n\r\nfunction DropdownList(props: DropdownListProps) {\r\n  const { tagSelectorRef, entries, onClick } = props;\r\n\r\n  return entries && entries.length > 0 ? (\r\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\r\n      {entries.map((entry) => (\r\n        <Entry\r\n          key={entry.name}\r\n          {...entry}\r\n          onClick={() => onClick(entry)}\r\n        ></Entry>\r\n      ))}\r\n    </ListWrapper>\r\n  ) : null;\r\n}\r\n\r\nconst EntryWrapper = styled.div`\r\n  display: flex;\r\n  height: 28px;\r\n\r\n  > * {\r\n    margin: auto;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    border-bottom: 1px grey solid;\r\n  }\r\n\r\n  :focus {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst TypeWrapper = styled.span`\r\n  flex: 0 0 48px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface EntryProps {\r\n  name: string;\r\n  posts: number;\r\n  types: TagType[];\r\n  onClick: MouseEventHandler;\r\n}\r\n\r\nfunction Entry(props: EntryProps) {\r\n  const { name, posts, types, onClick } = props;\r\n\r\n  return (\r\n    <EntryWrapper onClick={onClick}>\r\n      <TypeWrapper>\r\n        <TypeIcon types={types} />\r\n      </TypeWrapper>\r\n\r\n      <span style={{ flexGrow: 1 }}>{prettifyTagname(name)}</span>\r\n      <span style={{ paddingRight: 5 }}>{formatCount(posts)} posts</span>\r\n    </EntryWrapper>\r\n  );\r\n}\r\n\r\nexport default DropdownList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport api from \"../../misc/api\";\r\nimport { prepareTag } from \"../../misc/prepare\";\r\nimport Button, { AddButton, ModifierButton } from \"../common/Button\";\r\nimport TagInput from \"./TagInput\";\r\nimport DropdownList from \"./DropdownList\";\r\nimport { normalizeTagname } from \"../tag/tagUtils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTag } from \"../../redux/actions\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nexport const TagSelectorWrapper = styled.div(\r\n  (props: {\r\n    closed: boolean;\r\n    ref: (ref: HTMLInputElement) => void;\r\n    theme: ThemeType;\r\n  }) => css`\r\n    display: flex;\r\n    background: white;\r\n    ${props.closed\r\n      ? `border-radius: ${props.theme.dimensions.borderRadius};`\r\n      : `\r\n        border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\r\n\r\n        > ${AddButton} {\r\n          border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\r\n        }\r\n\r\n        > ${ModifierButton} {\r\n          border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\r\n        }\r\n      `}\r\n  `\r\n);\r\n\r\nfunction TagSelector() {\r\n  const dispatch = useDispatch();\r\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(\r\n    null\r\n  );\r\n  const [value, setValue] = useState(\"\");\r\n  const [modifier, setModifier] = useState(\"+\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const activateTag = useCallback(\r\n    (suggestion) => {\r\n      dispatch(\r\n        addTag(\r\n          prepareTag({\r\n            name: suggestion.name,\r\n            modifier: modifier,\r\n            count: suggestion.posts,\r\n            types: suggestion.types,\r\n          })\r\n        )\r\n      );\r\n\r\n      setValue(\"\");\r\n      setSuggestions([]);\r\n    },\r\n    [dispatch, modifier]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handle = setTimeout(() => {\r\n      if (value && value !== \"\")\r\n        api.getTags(normalizeTagname(value)).then((newSuggestions) => {\r\n          setSuggestions(newSuggestions);\r\n        });\r\n    }, 400);\r\n\r\n    return () => clearTimeout(handle);\r\n  }, [value]);\r\n\r\n  return (\r\n    <TagSelectorWrapper\r\n      ref={setTagSelectorRef}\r\n      closed={suggestions.length === 0}\r\n    >\r\n      <Button\r\n        type=\"modifier\"\r\n        onClick={() => setModifier(modifier === \"+\" ? \"-\" : \"+\")}\r\n        label=\"Tag Modifier\"\r\n      >\r\n        {modifier}\r\n      </Button>\r\n      <TagInput value={value} setValue={setValue} />\r\n      <Button\r\n        type=\"add\"\r\n        onClick={() => {\r\n          if (value && value.trim() !== \"\") {\r\n            const suggestion =\r\n              suggestions.find((s: { name: string }) => s.name === value) || {};\r\n            activateTag({ ...suggestion, name: value });\r\n          }\r\n        }}\r\n        label=\"Add Tag\"\r\n      >\r\n        Add\r\n      </Button>\r\n      {suggestions.length > 0 && (\r\n        <DropdownList\r\n          tagSelectorRef={tagSelectorRef}\r\n          entries={suggestions}\r\n          onClick={(entry) => activateTag(entry)}\r\n        />\r\n      )}\r\n    </TagSelectorWrapper>\r\n  );\r\n}\r\n\r\nexport default TagSelector;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nconst Wrapper = styled.div(\r\n  (props) => css`\r\n    border-radius: 30px;\r\n    width: 50px;\r\n    border: ${props.theme.dimensions.borderWidth} solid\r\n      ${props.theme.colors.accentColor};\r\n    background-color: ${props.theme.colors.backgroundColor};\r\n    transition: transform 0.4s ease-in-out;\r\n  `\r\n);\r\n\r\nconst Thumb = styled.div(\r\n  (props: { value: boolean; theme: ThemeType }) => css`\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${props.value\r\n      ? props.theme.colors.accentColor\r\n      : props.theme.colors.backgroundColor2};\r\n    border-radius: 50%;\r\n    transition: all 0.2s ease-in-out;\r\n    transform: translate(${props.value ? \"30px\" : \"0px\"});\r\n  `\r\n);\r\n\r\ninterface ToggleProps {\r\n  value: boolean;\r\n  onToggle: MouseEventHandler;\r\n}\r\n\r\nexport default function Toggle(props: ToggleProps) {\r\n  const { value, onToggle } = props;\r\n\r\n  return (\r\n    <Wrapper onClick={onToggle}>\r\n      <Thumb value={value} />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { bool, func, node } from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Toggle from \"./Toggle\";\r\n\r\nconst ToggleWrapper = styled.label`\r\n  display: flex;\r\n`;\r\n\r\nconst Label = styled.span(\r\n  (props) => css`\r\n    margin: auto;\r\n    margin-left: ${props.theme.dimensions.gutter};\r\n  `\r\n);\r\n\r\ninterface LabeledToggleProps {\r\n  children: JSX.Element | string;\r\n  value: boolean;\r\n  onToggle: MouseEventHandler;\r\n}\r\n\r\nexport default function LabeledToggle(props: LabeledToggleProps) {\r\n  const { children, value, onToggle } = props;\r\n\r\n  return (\r\n    <ToggleWrapper>\r\n      <Toggle value={value} onToggle={onToggle} />\r\n      <Label>{children}</Label>\r\n    </ToggleWrapper>\r\n  );\r\n}\r\n\r\nLabeledToggle.propTypes = {\r\n  children: node.isRequired,\r\n  value: bool.isRequired,\r\n  onToggle: func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport LabeledToggle from \"../common/LabeledToggle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPreferences } from \"../../redux/selectors\";\r\nimport { setOption } from \"../../redux/actions\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nconst OptionsWrapper = styled.div(\r\n  (props) => css`\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nconst StyledInput = styled.input(\r\n  (props: { value: number; theme: ThemeType }) => css`\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    color: ${props.theme.colors.accentColor};\r\n    max-height: 16px;\r\n    width: ${0.57 * String(props.value).length}em;\r\n    text-align: right;\r\n    font-size: 14px;\r\n    margin: -1px 0.2em 0 0.2em;\r\n\r\n    ::-webkit-inner-spin-button,\r\n    ::-webkit-outer-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n    -moz-appearance: textfield;\r\n  `\r\n);\r\n\r\nexport default function Options() {\r\n  const dispatch = useDispatch();\r\n  const { infinite, rated, ratedTreshold, originals } = useSelector(\r\n    selectPreferences\r\n  );\r\n\r\n  const [ratedInputValue, setRatedInputValue] = useState(ratedTreshold);\r\n\r\n  return (\r\n    <OptionsWrapper>\r\n      <LabeledToggle\r\n        value={infinite}\r\n        onToggle={() => dispatch(setOption(\"infinite\", !infinite))}\r\n      >\r\n        Infinite Scroll\r\n      </LabeledToggle>\r\n      <LabeledToggle\r\n        value={rated}\r\n        onToggle={() => dispatch(setOption(\"rated\", !rated))}\r\n      >\r\n        {rated ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            Above\r\n            <StyledInput\r\n              type=\"number\"\r\n              value={ratedInputValue}\r\n              onChange={(event) =>\r\n                setRatedInputValue(Number(event.target.value))\r\n              }\r\n              onBlur={() =>\r\n                dispatch(setOption(\"ratedTreshold\", ratedInputValue))\r\n              }\r\n            />\r\n            likes\r\n          </div>\r\n        ) : (\r\n          \"Only show Rated Posts\"\r\n        )}\r\n      </LabeledToggle>\r\n\r\n      <LabeledToggle\r\n        value={originals}\r\n        onToggle={() => dispatch(setOption(\"originals\", !originals))}\r\n      >\r\n        Load Original Sizes\r\n      </LabeledToggle>\r\n    </OptionsWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport Tag from \"./Tag\";\r\nimport { SimpleMap } from \"../../data/types\";\r\nimport { ThemeType } from \"../../misc/theme\";\r\n\r\nexport const TagListWrapper = styled.div(\r\n  (props: { padding: boolean; theme: ThemeType }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    margin: calc(\r\n      ${props.padding ? props.theme.dimensions.gutter : \"0px\"} -\r\n        ${props.theme.dimensions.spacing}\r\n    );\r\n  `\r\n);\r\n\r\ninterface TagListProps {\r\n  tags: SimpleMap<TagDataClass>;\r\n  loadAliases?: boolean;\r\n  padding?: boolean;\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, loadAliases = false, padding = false } = props;\r\n\r\n  return (\r\n    <div>\r\n      <TagListWrapper padding={padding}>\r\n        {Object.entries(tags).map(([key, tag]) => (\r\n          <Tag key={key} {...tag} loadAliases={loadAliases} />\r\n        ))}\r\n      </TagListWrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"../components/common/Title\";\r\nimport Surface, { Line } from \"../components/common/Surface\";\r\nimport TagSelector from \"../components/tagSelector/TagSelector\";\r\nimport Options from \"../components/features/Options\";\r\nimport TagList from \"../components/tag/TagList\";\r\n\r\nfunction Help() {\r\n  return (\r\n    <>\r\n      <Title>Help</Title>\r\n      <Surface>\r\n        <Title>Searching for Tags</Title>\r\n        <Line />\r\n        <TagSelector />\r\n        <Line />\r\n        <p>\r\n          You can use the Tag Selector to look for tags you like.The Tag\r\n          Selector has 4 parts.\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            The modifier (left) determines wether posts must match a tag or not.\r\n            Putting \"-\" will hide all posts with this tag\r\n          </li>\r\n          <li>\r\n            The Search Box (center) allows you to search for tags. As soon as\r\n            you start typing the Tag Selector will show you relevant tags to\r\n            choose from (4).\r\n          </li>\r\n          <li>\r\n            The Add Button (right) Allows you to add any tag to the current\r\n            filter. Usefull when using wildcards.\r\n          </li>\r\n          <li>\r\n            The Tag Dropdown (left) automatically shows tags that start with\r\n            your input. It also includes The number of posts tagged, to allow\r\n            you to weigh tags against each other.\r\n          </li>\r\n        </ol>\r\n      </Surface>\r\n      <Surface>\r\n        <Title>Options</Title>\r\n        <Line />\r\n        <Options />\r\n        <Line />\r\n        <p>\r\n          Options allow you to customize your experience in various ways. There\r\n          are 3 options available\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            Infinite Scrolling automatically loads new posts when you get close\r\n            to the bottom of the page.\r\n          </li>\r\n          <li>\r\n            Only show Rated posts filters out posts below the specified amount\r\n            of posts.\r\n          </li>\r\n          <li>\r\n            Load original sizes always loads the highest quality of an image.\r\n            This can easily cause extreme data consumption. Don't use with\r\n            mobile data.\r\n          </li>\r\n        </ol>\r\n      </Surface>\r\n      <Surface>\r\n        <Title>Tags</Title>\r\n        <Line />\r\n        <TagList\r\n          tags={{\r\n            \"Tag 1\": { name: \"Tag 1\" },\r\n            \"Tag 2\": { name: \"Tag 2\", types: [\"character\"] },\r\n            \"Tag 3\": {\r\n              name: \"Tag 3\",\r\n              modifier: \"-\",\r\n              types: [\"copyright\"],\r\n              count: 1020,\r\n            },\r\n          }}\r\n        />\r\n        <Line />\r\n        <p>\r\n          This whole application is based on tags. Every Post has multiple tags.\r\n          Usually you can enable/disable a tag just by tapping it. If a tag is\r\n          red it means its active. The icons next to the name show what type of\r\n          tag it is. Not every tag has a type. The number on the right shows how\r\n          many posts there are with that tag.\r\n        </p>\r\n      </Surface>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BlockButton } from \"../components/common/Button\";\r\nimport Surface, { Line } from \"../components/common/Surface\";\r\nimport Title from \"../components/common/Title\";\r\nimport { reset } from \"../redux/actions\";\r\n\r\nexport default function Settings() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Title>Settings</Title>\r\n      <Surface>\r\n        <Title>General</Title>\r\n        <p>nothing yet</p>\r\n        <Line />\r\n        <Title>Developer</Title>\r\n        <BlockButton onClick={() => dispatch(reset())}>\r\n          Reset Application\r\n        </BlockButton>\r\n      </Surface>\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { object, array, func } from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TagSelector from \"../tagSelector/TagSelector\";\r\nimport TagList from \"../tag/TagList\";\r\nimport Options from \"./Options\";\r\nimport Button from \"../common/Button\";\r\nimport api from \"../../misc/api\";\r\nimport { preparePost } from \"../../misc/prepare\";\r\nimport Title from \"../common/Title\";\r\nimport Surface from \"../common/Surface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPreferences, selectActiveTags } from \"../../redux/selectors\";\r\nimport { setPosts } from \"../../redux/actions\";\r\n\r\nconst ConfigWrapper = styled.section(\r\n  (props) => css`\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nfunction Config() {\r\n  const dispatch = useDispatch();\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const { rated, ratedTreshold } = useSelector(selectPreferences);\r\n\r\n  const search = useCallback(() => {\r\n    api\r\n      .getPosts(activeTags, 0, rated ? ratedTreshold : 0)\r\n      .then((res) => dispatch(setPosts(res.posts.map(preparePost), res.count)));\r\n  }, [dispatch, rated, ratedTreshold, activeTags]);\r\n\r\n  return (\r\n    <ConfigWrapper>\r\n      <Title>\r\n        <label htmlFor=\"tag-input\">Search</label>\r\n      </Title>\r\n      <Surface>\r\n        <TagSelector />\r\n\r\n        {Object.keys(activeTags).length > 0 && (\r\n          <TagList tags={activeTags} loadAliases />\r\n        )}\r\n        <Options />\r\n        <Button type=\"block\" onClick={search} label=\"Search\">\r\n          Search\r\n        </Button>\r\n      </Surface>\r\n    </ConfigWrapper>\r\n  );\r\n}\r\n\r\nConfig.propTypes = {\r\n  options: object,\r\n  tags: array,\r\n  dispatch: func,\r\n};\r\n\r\nexport default Config;\r\n","import { RatingType } from \"../../../data/types\";\r\nimport React from \"react\";\r\nimport { RatingIcon } from \"../../../icons/Icons\";\r\n\r\nexport default (props: { value: RatingType }) => (\r\n  <span>\r\n    <RatingIcon color=\"white\" left />\r\n    {props.value[0].toUpperCase()}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport { HeartIcon } from \"../../../icons/Icons\";\r\n\r\nexport default (props: { value: number }) => (\r\n  <span>\r\n    {props.value}\r\n    <HeartIcon color=\"white\" right />\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport { formatSource } from \"../../../misc/formatting\";\r\nimport { ExternalLinkIcon, SourceIcon } from \"../../../icons/Icons\";\r\n\r\nexport default (props: { value: string }) =>\r\n  props.value.startsWith(\"http\") ? (\r\n    <a\r\n      href={props.value}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"source\"\r\n    >\r\n      <ExternalLinkIcon color=\"red\" left />\r\n      {formatSource(props.value)}\r\n    </a>\r\n  ) : (\r\n    <span>\r\n      <SourceIcon color=\"white\" left />\r\n      {props.value}\r\n    </span>\r\n  );\r\n","import React, { useMemo } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport TagList, { TagListWrapper } from \"../tag/TagList\";\r\nimport { RatingType } from \"../../data/types\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { listToMap } from \"../../data/utils\";\r\nimport Rating from \"./widgets/Rating\";\r\nimport Score from \"./widgets/Score\";\r\nimport Source from \"./widgets/Source\";\r\n\r\nconst fold = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n\r\n  to {\r\n    max-height: 1500px;\r\n  }\r\n`;\r\n\r\nconst DetailsWrapper = styled.div(\r\n  (props) => css`\r\n    > ${TagListWrapper} {\r\n      padding: ${props.theme.dimensions.spacing};\r\n    }\r\n    max-height: unset;\r\n    animation: ${fold} 0.4s ease-in;\r\n  `\r\n);\r\n\r\nconst Bar = styled.div(\r\n  (props) => css`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    background: ${props.theme.misc.layer};\r\n    padding: ${props.theme.dimensions.spacing};\r\n    border-radius: 0 0 ${props.theme.dimensions.borderRadius}\r\n      ${props.theme.dimensions.borderRadius};\r\n    ${props.theme.shadow.box};\r\n\r\n    > span,\r\n    > a {\r\n      margin: ${props.theme.dimensions.spacing};\r\n      line-height: 1rem;\r\n      height: 1rem;\r\n    }\r\n  `\r\n);\r\n\r\ninterface DetailsProps {\r\n  rating: RatingType;\r\n  score: number;\r\n  source: string;\r\n  tags: TagDataClass[];\r\n}\r\n\r\nexport default function Details(props: DetailsProps) {\r\n  const { rating, score, source, tags } = props;\r\n  const tagsForRendering = useMemo(() => listToMap(tags, \"name\"), [tags]);\r\n\r\n  return (\r\n    <DetailsWrapper>\r\n      <Bar>\r\n        {rating && <Rating value={rating} />}\r\n        {score && <Score value={score} />}\r\n        {source && <Source value={source} />}\r\n      </Bar>\r\n      <TagList tags={tagsForRendering} padding loadAliases={false} />\r\n    </DetailsWrapper>\r\n  );\r\n}\r\n","import { SimpleMap } from \"./types\";\r\n\r\nexport const listToMap = <T>(list: T[], keyProp: string): SimpleMap<T> => {\r\n  return list.reduce((result: SimpleMap<T>, current: any) => {\r\n    result[current[keyProp]] = current;\r\n    return result;\r\n  }, {});\r\n};\r\n","import React, { MouseEventHandler, useState } from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport { ExpandIcon, PlayIcon, PauseIcon } from \"../../icons/Icons\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { NO_OP } from \"../../data/constants\";\r\n\r\nconst fade = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div(\r\n  (props: { isVisible: boolean }) => css`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${!props.isVisible\r\n      ? css`\r\n          opacity: 0;\r\n          animation: ${fade} 0.4s ease-in-out;\r\n        `\r\n      : \"\"};\r\n  `\r\n);\r\n\r\nconst ProgressBar = styled.div(\r\n  (props) => css`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 5px;\r\n    background-color: ${props.theme.colors.accentColor};\r\n  `\r\n);\r\n\r\ninterface OverlayProps {\r\n  onFullscreen?: MouseEventHandler;\r\n  togglePlay?: MouseEventHandler;\r\n  isPaused?: boolean;\r\n  isPlayable: boolean;\r\n  currentTime?: number;\r\n  duration?: number;\r\n}\r\n\r\nfunction Overlay(props: OverlayProps) {\r\n  const {\r\n    onFullscreen = NO_OP,\r\n    togglePlay = NO_OP,\r\n    isPaused = true,\r\n    isPlayable,\r\n    currentTime,\r\n    duration,\r\n  } = props;\r\n\r\n  const [isVisible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <Wrapper\r\n      isVisible={isPaused || isVisible}\r\n      onClick={() => setVisible(!isVisible)}\r\n    >\r\n      {onFullscreen && (\r\n        <Button type=\"topLeft\" onClick={onFullscreen} label=\"Open Fullscreen\">\r\n          <ExpandIcon color=\"white\" />\r\n        </Button>\r\n      )}\r\n\r\n      {isPlayable && (\r\n        <>\r\n          <Button type=\"center\" onClick={togglePlay} label=\"Play/Pause\">\r\n            {isPaused ? (\r\n              <PlayIcon color=\"white\" size={50} />\r\n            ) : (\r\n              <PauseIcon color=\"white\" size={50} />\r\n            )}\r\n          </Button>\r\n          {!!duration && !!currentTime && (\r\n            <ProgressBar\r\n              style={{ width: `${(currentTime / duration) * 100}%` }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nOverlay.defaultProps = {\r\n  onFullscreen: null,\r\n  togglePlay: NO_OP,\r\n  isPaused: true,\r\n  isPlayable: false,\r\n  currentTime: 0,\r\n  duration: null,\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"./Overlay\";\r\nimport { openFullscreen } from \"./utils\";\r\n\r\nconst FlexVideo = styled.video`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface VideoProps {\r\n  src: string;\r\n  thumbnail_src: string;\r\n}\r\n\r\nexport default function Video(props: VideoProps) {\r\n  const { src, thumbnail_src } = props;\r\n\r\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null);\r\n\r\n  const [time, setTime] = useState(Date.now());\r\n  const [intervalId, setIntervalId] = useState(0);\r\n\r\n  const play = () => {\r\n    videoRef && videoRef.play();\r\n\r\n    // ~30 fps\r\n    const id = setInterval(() => {\r\n      setTime(Date.now());\r\n      console.log(time);\r\n    }, 34);\r\n\r\n    setIntervalId(id);\r\n  };\r\n\r\n  const pause = () => {\r\n    videoRef && videoRef.pause();\r\n    clearInterval(intervalId);\r\n    setIntervalId(-1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FlexVideo\r\n        controls={false}\r\n        loop\r\n        src={src}\r\n        poster={thumbnail_src}\r\n        preload=\"metadata\"\r\n        ref={setVideoRef}\r\n      />\r\n      <Overlay\r\n        isPaused={videoRef ? videoRef.paused : true}\r\n        currentTime={videoRef ? videoRef.currentTime : undefined}\r\n        duration={videoRef ? videoRef.duration : undefined}\r\n        onFullscreen={() => videoRef && openFullscreen(videoRef)}\r\n        togglePlay={(event) => {\r\n          event.stopPropagation();\r\n          videoRef && (videoRef.paused ? play() : pause());\r\n        }}\r\n        isPlayable\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { PostType, VIDEO, GIF, PICTURE } from \"../../data/types\";\r\n\r\nexport const openFullscreen = (elem: HTMLVideoElement) => {\r\n  elem.requestFullscreen();\r\n};\r\n\r\nexport const getMediaType = (type: PostType, src: string) => {\r\n  if (type === VIDEO) {\r\n    return VIDEO;\r\n  }\r\n\r\n  // can't use .endsWith because of queryString\r\n  if (src.includes(\".gif\")) {\r\n    return GIF;\r\n  }\r\n\r\n  return PICTURE;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nconst FlexImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface GifProps {\r\n  src: string;\r\n  thumbnail_src: string;\r\n}\r\n\r\nexport default function Gif(props: GifProps) {\r\n  const { src, thumbnail_src } = props;\r\n\r\n  const [isPaused, setPaused] = useState(true);\r\n  const usedSource = isPaused ? thumbnail_src : src;\r\n\r\n  return (\r\n    <>\r\n      <FlexImage src={usedSource} alt={usedSource} />\r\n      <Overlay\r\n        isPlayable\r\n        isPaused={isPaused}\r\n        togglePlay={(event) => {\r\n          event.stopPropagation();\r\n          setPaused(!isPaused);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nconst FlexImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface PictureProps {\r\n  src: string;\r\n}\r\n\r\nexport default function Picture(props: PictureProps) {\r\n  const { src } = props;\r\n\r\n  return (\r\n    <>\r\n      <FlexImage src={src} alt={src} />\r\n      <Overlay isPlayable={false} />\r\n    </>\r\n  );\r\n}\r\n","import React, { MouseEventHandler, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Video from \"./Video\";\r\nimport Gif from \"./Gif\";\r\nimport Picture from \"./Picture\";\r\nimport { VIDEO, GIF } from \"../../data/constants\";\r\nimport { getMediaType } from \"./utils\";\r\nimport { PostType } from \"../../data/types\";\r\n\r\nconst PlayerWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n`;\r\n\r\ninterface PlayerProps {\r\n  type: PostType;\r\n  src: string;\r\n  thumbnail_src: string;\r\n  toggleDetails: MouseEventHandler;\r\n}\r\n\r\nconst getMedia = (type: PostType, src: string) => {\r\n  switch (getMediaType(type, src)) {\r\n    case VIDEO:\r\n      return Video;\r\n    case GIF:\r\n      return Gif;\r\n    default:\r\n      return Picture;\r\n  }\r\n};\r\n\r\nexport default function Player(props: PlayerProps) {\r\n  const { toggleDetails, type, src, thumbnail_src } = props;\r\n\r\n  const media = useMemo(() => {\r\n    const MediaComponent = getMedia(type, src);\r\n    return <MediaComponent src={src} thumbnail_src={thumbnail_src} />;\r\n  }, [type, src, thumbnail_src]);\r\n\r\n  return <PlayerWrapper onClick={toggleDetails}>{media}</PlayerWrapper>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Details from \"./Details\";\r\nimport Player from \"../player/Player\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPreferences } from \"../../redux/selectors\";\r\nimport PostDataClass from \"../../data/Post\";\r\n\r\nconst PostWrapper = styled.div(\r\n  (props) => css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: ${props.theme.misc.layer};\r\n    ${props.theme.shadow.box};\r\n    border-radius: ${props.theme.dimensions.borderRadius};\r\n    overflow: hidden;\r\n    margin-bottom: ${props.theme.dimensions.bigSpacing};\r\n    box-sizing: border-box;\r\n  `\r\n);\r\n\r\nexport function getCorrectSource(\r\n  loadOriginal: boolean,\r\n  big_src: string,\r\n  small_src: string,\r\n  id: number\r\n) {\r\n  let src;\r\n  if (loadOriginal) {\r\n    src = big_src;\r\n  } else {\r\n    src = `${small_src}?${id}`;\r\n    if (src.includes(\"//images\")) {\r\n      src = src.replace(\"//images\", \"/images\");\r\n    }\r\n  }\r\n\r\n  return src;\r\n}\r\n\r\nexport default function Post(props: PostDataClass) {\r\n  const {\r\n    id,\r\n    media_type,\r\n    small_src,\r\n    big_src,\r\n    thumbnail_src,\r\n    rating,\r\n    score,\r\n    source,\r\n    tags,\r\n  } = props;\r\n  const { originals } = useSelector(selectPreferences);\r\n  const media_src = getCorrectSource(originals, big_src, small_src, id);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  return (\r\n    <PostWrapper>\r\n      <Player\r\n        type={media_type}\r\n        src={media_src}\r\n        thumbnail_src={thumbnail_src}\r\n        toggleDetails={() => setCollapsed(!collapsed)}\r\n      />\r\n      {!collapsed && (\r\n        <Details rating={rating} score={score} source={source} tags={tags} />\r\n      )}\r\n    </PostWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Post from \"./Post\";\r\nimport PostDataClass from \"../../data/Post\";\r\n\r\nconst PostListWrapper = styled.div``;\r\n\r\ninterface PostListProps {\r\n  posts: PostDataClass[];\r\n}\r\n\r\nfunction PostList(props: PostListProps) {\r\n  const { posts } = props;\r\n\r\n  return (\r\n    <PostListWrapper>\r\n      {posts.map((post) => {\r\n        return <Post key={post.id} {...post} />;\r\n      })}\r\n    </PostListWrapper>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import { array, func, object } from \"prop-types\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport outOfResultsPicture from \"../../icons/OutOfResults.png\";\r\nimport api from \"../../misc/api\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport {\r\n  selectActiveTags,\r\n  selectPreferences,\r\n  selectResults,\r\n} from \"../../redux/selectors\";\r\nimport Button from \"../common/Button\";\r\nimport Surface, { Line } from \"../common/Surface\";\r\nimport Title from \"../common/Title\";\r\nimport PostList from \"../post/PostList\";\r\nimport { preparePost } from \"../../misc/prepare\";\r\n\r\nconst ResultsWrapper = styled.section(\r\n  (props) => css`\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nlet scrollLock = true;\r\n\r\nfunction hasReachedEndOfPage() {\r\n  return (\r\n    window.innerHeight + document.documentElement.scrollTop >=\r\n    document.documentElement.scrollHeight - window.innerHeight\r\n  );\r\n}\r\n\r\nfunction Results() {\r\n  const dispatch = useDispatch();\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const { posts, count, pageNumber } = useSelector(selectResults);\r\n  const { rated, infinite, ratedTreshold } = useSelector(selectPreferences);\r\n\r\n  const [isOutOfResults, setOutOfResults] = useState(false);\r\n\r\n  const loadMore = useCallback(() => {\r\n    api\r\n      .getPosts(activeTags, pageNumber + 1, rated ? ratedTreshold : 0)\r\n      .then((res) => {\r\n        setOutOfResults(res.posts.length === 0);\r\n        dispatch({ type: \"ADD_POSTS\", posts: res.posts.map(preparePost) });\r\n        scrollLock = true;\r\n      });\r\n  }, [dispatch, rated, pageNumber, ratedTreshold, activeTags]);\r\n\r\n  window.onscroll = useCallback(() => {\r\n    if (infinite && scrollLock && hasReachedEndOfPage()) {\r\n      scrollLock = false;\r\n      loadMore();\r\n    }\r\n  }, [loadMore, infinite]);\r\n\r\n  return (\r\n    <ResultsWrapper className=\"results\">\r\n      <Title>{formatCount(count)} results</Title>\r\n      <PostList posts={posts} />\r\n\r\n      {!infinite && !isOutOfResults && (\r\n        <Button type={\"block\"} onClick={loadMore} label=\"Load More\">\r\n          Load More\r\n        </Button>\r\n      )}\r\n\r\n      {isOutOfResults && (\r\n        <Surface>\r\n          <img src={outOfResultsPicture} alt={outOfResultsPicture} />\r\n          <Line />\r\n          <Title>You have reached the end!</Title>\r\n          <p style={{ textAlign: \"center\" }}>Go look for something else...</p>\r\n        </Surface>\r\n      )}\r\n    </ResultsWrapper>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  options: object,\r\n  dispatch: func,\r\n  tags: array,\r\n  results: object,\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Config from \"../components/features/Config\";\r\nimport Results from \"../components/features/Results\";\r\nimport { selectHasResults } from \"../redux/selectors\";\r\n\r\nexport default function Search() {\r\n  const hasResults = useSelector(selectHasResults);\r\n\r\n  return (\r\n    <>\r\n      <Config />\r\n      {hasResults && <Results />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./components/features/Header\";\r\nimport Footer from \"./components/features/Footer\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MenuType } from \"./data/types\";\r\nimport Help from \"./pages/Help\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Search from \"./pages/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectActiveMenu } from \"./redux/selectors\";\r\n\r\nconst Main = styled.main(\r\n  (props) => css`\r\n    flex-grow: 1;\r\n    align-self: strech;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 16px;\r\n    max-width: 1000px;\r\n    margin: auto;\r\n\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nconst AppWrapper = styled.div(\r\n  (props) => css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: strech;\r\n    min-height: 100%;\r\n    background: ${props.theme.colors.backgroundColor};\r\n    color: ${props.theme.colors.backgroundColor2};\r\n\r\n    font-size: 14px;\r\n\r\n    a {\r\n      color: ${props.theme.colors.accentColor};\r\n      text-decoration: none;\r\n    }\r\n\r\n    > *:not(:last-child) {\r\n      margin-bottom: ${props.theme.dimensions.gutter};\r\n    }\r\n  `\r\n);\r\n\r\nfunction getActivePage(activeMenu: MenuType) {\r\n  switch (activeMenu) {\r\n    case \"help\":\r\n      return <Help />;\r\n    case \"settings\":\r\n      return <Settings />;\r\n    case \"search\":\r\n    default:\r\n      return <Search />;\r\n  }\r\n}\r\n\r\nfunction AppContent() {\r\n  const activeMenu = useSelector(selectActiveMenu);\r\n  const activePage = getActivePage(activeMenu);\r\n\r\n  return (\r\n    <AppWrapper>\r\n      <Header />\r\n      <Main>{activePage}</Main>\r\n      <Footer />\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nAppContent.propTypes = {};\r\n\r\nexport default AppContent;\r\n","const theme = {\r\n  dimensions: {\r\n    borderRadius: \"3px\",\r\n    borderWidth: \"2px\",\r\n\r\n    spacing: \"4px\",\r\n    bigSpacing: \"8px\",\r\n    appMargin: \"16px\",\r\n    gutter: \"8px\",\r\n  },\r\n  colors: {\r\n    accentColor: \"crimson\",\r\n    hoverAccent: \"crimson\",\r\n    backgroundColor: \"#121212\",\r\n    backgroundColor2: \"#fff\",\r\n  },\r\n  shadow: {\r\n    box: \"box-shadow: 0 0 8px #000\",\r\n    drop: \"drop-shadow(0 0 4px #000)\",\r\n  },\r\n  timings: {\r\n    transistionTime: \"0.2s\",\r\n  },\r\n  misc: {\r\n    layer:\r\n      \"#ffffff11; :hover { background: #ffffff16;} transition: background-color 0.2s ease-in-out\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n\r\nexport type ThemeType = typeof theme;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport AppContent from \"./AppContent\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./misc/theme\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <ThemeProvider theme={theme}>\r\n          <AppContent />\r\n        </ThemeProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app-root\"));\r\n"],"sourceRoot":""}