{"version":3,"sources":["icons/OutOfResults.png","redux/actions.ts","redux/reducers/misc.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/index.ts","redux/store.ts","data/types.ts","misc/style.js","icons/R34Icon.tsx","redux/selectors.ts","components/common/Button.tsx","components/common/Title.tsx","components/features/Header.tsx","components/features/Footer.tsx","components/common/Surface.tsx","misc/api.ts","data/Post.ts","data/Tag.ts","misc/prepare.ts","components/tagSelector/TagInput.tsx","components/tag/tagUtils.ts","misc/formatting.ts","components/tag/Tag.tsx","icons/Icons.tsx","data/constants.ts","icons/TypeIcon.tsx","components/tagSelector/DropdownList.tsx","components/tagSelector/TagSelector.tsx","components/common/Toggle.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/tag/TagList.tsx","pages/Help.tsx","pages/Settings.tsx","components/features/Config.tsx","components/post/Details.tsx","data/utils.ts","components/player/Overlay.tsx","components/player/Video.tsx","components/player/utils.ts","components/player/Gif.tsx","components/player/Picture.tsx","components/player/Player.tsx","components/post/Post.tsx","components/post/PostList.tsx","components/features/Results.tsx","pages/Search.tsx","AppContent.tsx","App.tsx","index.tsx"],"names":["module","exports","setActiveMenu","menu","type","toggleTag","tag","setOption","key","value","initialMiscState","activeMenu","initialPreferencesState","infinite","rated","ratedTreshold","originals","initialResultsState","posts","pageNumber","count","initialTagsState","active","addTag","state","newTag","produce","draft","name","removeTag","tagToRemove","combineReducers","tags","action","tagToToggle","results","addPosts","postCount","setPosts","preferences","misc","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","layer","shadow","dropShadow","R34Icon","props","xmlns","width","size","height","viewBox","transform","id","cx","cy","fill","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","selectActiveMenu","selectHasResults","Object","keys","length","selectPreferences","selectActiveTags","selectResults","BasicButton","styled","motion","button","InvisibleButton","MenuButton","ActiveMenuButton","TopLeftButton","BottomLeftButton","CenterButton","RedButton","BlockButton","AddButton","ModifierButton","Button","children","onClick","disabled","label","TypedButton","getButtonByType","aria-label","Title","h2","BigTitle","h1","HeaderWrapper","header","Divider","div","TitleBar","MenuBar","nav","Header","useSelector","dispatch","useDispatch","style","marginTop","href","FotterWrapper","footer","CenteredA","a","Footer","Surface","Line","activeApi","fetch","catch","getTags","searchTerm","res","json","getPosts","minScore","buildPostUrl","getAliases","tagName","page","tagString","values","map","modifier","encodeURIComponent","join","url","PostDataClass","constructor","score","rating","source","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","small_src","big_src","this","TagDataClass","types","preparePost","post","sample_url","preview_url","Number","t","Boolean","Input","input","TagInput","setValue","onChange","event","target","placeholder","prettifyTagname","tagname","replace","formatCount","numberString","number","toFixed","TagWrapper","css","collapsed","fg","bg","switchingColors","IconWrapper","span","left","right","TagText","text","onKeyDown","e","keyCode","Alias","className","Tag","loadAliases","activeTags","useState","aliases","setAliases","setCollapsed","useEffect","api","then","newAliases","sort","b","filter","alias","isActive","showAliases","onMouseLeave","TypeIcon","ArrowIcon","StyledIcon","i","color","Icon","icon","CharacterIcon","attrs","ArtistIcon","CopyrightIcon","ExpandIcon","ExternalLinkIcon","SourceIcon","RatingIcon","HeartIcon","PlayIcon","PauseIcon","NO_OP","find","match","ListWrapper","tagSelector","offsetTop","clientHeight","offsetLeft","clientWidth","sizeAndPosition","tagSelectorRef","EntryWrapper","TypeWrapper","Entry","flexGrow","paddingRight","DropdownList","entries","initial","animate","exit","variants","open","opacity","entry","TagSelectorWrapper","closed","TagSelector","setTagSelectorRef","setModifier","suggestions","setSuggestions","activateTag","useCallback","suggestion","dirtyTag","prepareTag","handle","setTimeout","toLowerCase","newSuggestions","clearTimeout","ref","trim","s","Wrapper","Thumb","enabled","background","Toggle","initialValue","onToggle","ToggleWrapper","Label","LabeledToggle","OptionsWrapper","StyledInput","String","Options","ratedInputValue","setRatedInputValue","display","onBlur","TagListWrapper","padding","TagList","Help","Settings","ConfigWrapper","section","Config","search","htmlFor","DetailsWrapper","Bar","Details","tagsForRendering","useMemo","listToMap","keyProp","reduce","result","current","Rating","Score","Source","toUpperCase","startsWith","rel","sourceString","includes","semiSanitized","substring","indexOf","formatSource","ProgressBar","visible","hidden","Overlay","onFullscreen","togglePlay","isPaused","isPlayable","currentTime","duration","whileHover","whileTap","defaultProps","FlexVideo","video","Video","src","toggleDetails","videoRef","setVideoRef","Date","now","time","setTime","intervalId","setIntervalId","controls","loop","poster","preload","paused","undefined","requestFullscreen","stopPropagation","play","setInterval","console","log","pause","clearInterval","FlexImage","img","Gif","setPaused","usedSource","alt","Picture","Player","Media","getMedia","PostWrapper","Post","loadOriginal","getCorrectSource","PostListWrapper","PostList","ResultsWrapper","scrollLock","Results","isOutOfResults","setOutOfResults","loadMore","window","onscroll","innerHeight","document","documentElement","scrollTop","scrollHeight","outOfResultsPicture","textAlign","Search","hasResults","Main","main","AppWrapper","AppContent","activePage","getActivePage","App","loading","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.39d11acb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OutOfResults.00a98fae.png\";","import { MenuType, PreferenceKey } from \"../data/types\";\r\nimport TagDataClass from \"../data/Tag\";\r\nimport PostDataClass from \"../data/Post\";\r\n\r\nexport const RESET = \"RESET\";\r\nexport const SET_ACTIVE_MENU = \"SET_ACTIVE_MENU\";\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const REMOVE_TAG = \"REMOVE_TAG\";\r\nexport const TOGGLE_TAG = \"TOGGLE_TAG\";\r\nexport const ADD_POSTS = \"ADD_POSTS\";\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const SET_OPTION = \"SET_OPTION\";\r\n\r\ninterface ResetAction {\r\n  type: typeof RESET;\r\n}\r\n\r\ninterface SetActiveMenuAction {\r\n  type: typeof SET_ACTIVE_MENU;\r\n  menu: MenuType;\r\n}\r\n\r\ninterface AddTagAction {\r\n  type: typeof ADD_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface RemoveTagAction {\r\n  type: typeof REMOVE_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface ToggleTagAction {\r\n  type: typeof TOGGLE_TAG;\r\n  tag: TagDataClass;\r\n}\r\n\r\ninterface AddPostsAction {\r\n  type: typeof ADD_POSTS;\r\n  posts: PostDataClass[];\r\n}\r\n\r\ninterface SetPostsAction {\r\n  type: typeof SET_POSTS;\r\n  posts: PostDataClass[];\r\n  count: number;\r\n}\r\n\r\ninterface SetOptionAction {\r\n  type: typeof SET_OPTION;\r\n  key: PreferenceKey;\r\n  value: any;\r\n}\r\n\r\n/////////////////////////////////////////////////////////\r\n\r\nexport const reset = () => ({\r\n  type: RESET,\r\n});\r\n\r\nexport const setActiveMenu = (menu: MenuType) => ({\r\n  type: SET_ACTIVE_MENU,\r\n  menu,\r\n});\r\n\r\nexport const addTag = (tag: TagDataClass) => ({\r\n  type: ADD_TAG,\r\n  tag,\r\n});\r\n\r\nexport const removeTag = (tag: TagDataClass) => ({\r\n  type: REMOVE_TAG,\r\n  tag,\r\n});\r\n\r\nexport const toggleTag = (tag: TagDataClass) => ({\r\n  type: TOGGLE_TAG,\r\n  tag,\r\n});\r\n\r\nexport const addPosts = (posts: PostDataClass[]) => ({\r\n  type: ADD_POSTS,\r\n  posts,\r\n});\r\n\r\nexport const setPosts = (posts: PostDataClass[], count: number) => ({\r\n  type: SET_POSTS,\r\n  posts,\r\n  count,\r\n});\r\n\r\nexport const setOption = (key: PreferenceKey, value: any) => ({\r\n  type: SET_OPTION,\r\n  key,\r\n  value,\r\n});\r\n\r\n/////////////////////////////////////////////////////////\r\n\r\nexport type AppAction =\r\n  | ResetAction\r\n  | SetActiveMenuAction\r\n  | AddTagAction\r\n  | RemoveTagAction\r\n  | ToggleTagAction\r\n  | AddPostsAction\r\n  | SetPostsAction\r\n  | SetOptionAction;\r\n","import produce from \"immer\";\r\nimport { MenuType } from \"../../data/types\";\r\nimport { SET_ACTIVE_MENU, AppAction } from \"../actions\";\r\n\r\nexport interface MiscState {\r\n  activeMenu: MenuType;\r\n}\r\n\r\nexport const initialMiscState: MiscState = {\r\n  activeMenu: \"search\",\r\n};\r\n\r\nconst setActiveMenu = (state: MiscState, menu: MenuType) =>\r\n  produce(state, (draft) => {\r\n    draft.activeMenu = menu;\r\n  });\r\n\r\nexport default (\r\n  state: MiscState = initialMiscState,\r\n  action: AppAction\r\n): MiscState => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_MENU:\r\n      return setActiveMenu(state, action.menu);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport { PreferenceKey } from \"../../data/types\";\r\nimport { AppAction, SET_OPTION } from \"../actions\";\r\n\r\nexport interface PreferencesState {\r\n  infinite: boolean;\r\n  rated: boolean;\r\n  ratedTreshold: number;\r\n  originals: boolean;\r\n}\r\n\r\nexport const initialPreferencesState: PreferencesState = {\r\n  infinite: true,\r\n  rated: false,\r\n  ratedTreshold: 1,\r\n  originals: false,\r\n};\r\n\r\nconst setOption = (state: PreferencesState, key: PreferenceKey, value: any) =>\r\n  produce(state, (draft) => {\r\n    switch (key) {\r\n      case \"infinite\":\r\n        draft.infinite = value;\r\n        break;\r\n      case \"rated\":\r\n        draft.rated = value;\r\n        break;\r\n      case \"ratedTreshold\":\r\n        draft.ratedTreshold = value;\r\n        break;\r\n      case \"originals\":\r\n        draft.originals = value;\r\n    }\r\n  });\r\n\r\nexport default (\r\n  state: PreferencesState = initialPreferencesState,\r\n  action: AppAction\r\n): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_OPTION:\r\n      return setOption(state, action.key, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport PostDataClass from \"../../data/Post\";\r\nimport { SET_POSTS, ADD_POSTS, AppAction } from \"../actions\";\r\n\r\nexport interface ResultsState {\r\n  posts: PostDataClass[];\r\n  pageNumber: number;\r\n  count: number;\r\n}\r\n\r\nexport const initialResultsState: ResultsState = {\r\n  posts: [],\r\n  pageNumber: 0,\r\n  count: 0,\r\n};\r\n\r\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\r\n  produce(state, (draft) => {\r\n    draft.posts = [...state.posts, ...posts];\r\n    draft.pageNumber = state.pageNumber + 1;\r\n  });\r\n\r\nconst setPosts = (\r\n  state: ResultsState,\r\n  posts: PostDataClass[],\r\n  postCount: number\r\n) =>\r\n  produce(state, (draft) => {\r\n    draft.posts = posts;\r\n    draft.count = postCount;\r\n    draft.pageNumber = 0;\r\n  });\r\n\r\nexport default (\r\n  state: ResultsState = initialResultsState,\r\n  action: AppAction\r\n): ResultsState => {\r\n  switch (action.type) {\r\n    case ADD_POSTS:\r\n      return addPosts(state, action.posts);\r\n    case SET_POSTS:\r\n      return setPosts(state, action.posts, action.count);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import produce from \"immer\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { SimpleMap } from \"../../data/types\";\r\nimport { ADD_TAG, AppAction, REMOVE_TAG, TOGGLE_TAG } from \"../actions\";\r\n\r\nexport interface TagsState {\r\n  active: SimpleMap<TagDataClass>;\r\n}\r\n\r\nexport const initialTagsState: TagsState = {\r\n  active: {},\r\n};\r\n\r\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\r\n  produce(state, (draft) => {\r\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag };\r\n  });\r\n\r\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\r\n  produce(state, (draft) => {\r\n    delete draft.active[tagToRemove.name];\r\n  });\r\n\r\nconst toggleTag = (state: TagsState, tagToToggle: TagDataClass) =>\r\n  state.active[tagToToggle.name]\r\n    ? removeTag(state, tagToToggle)\r\n    : addTag(state, tagToToggle);\r\n\r\nexport default (\r\n  state: TagsState = initialTagsState,\r\n  action: AppAction\r\n): TagsState => {\r\n  switch (action.type) {\r\n    case ADD_TAG:\r\n      return addTag(state, action.tag);\r\n    case REMOVE_TAG:\r\n      return removeTag(state, action.tag);\r\n    case TOGGLE_TAG:\r\n      return toggleTag(state, action.tag);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport misc from \"./misc\";\r\nimport preferences from \"./preferences\";\r\nimport results from \"./results\";\r\nimport tags from \"./tags\";\r\n\r\nexport default combineReducers({ tags, results, preferences, misc });\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"appstate\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","export const GENERAL = \"general\";\r\nexport const CHARACTER = \"character\";\r\nexport const AMBIGUOUS = \"ambiguous\";\r\nexport const ARTIST = \"artist\";\r\nexport const COPYRIGHT = \"copyright\";\r\nexport type TagType =\r\n  | typeof GENERAL\r\n  | typeof CHARACTER\r\n  | typeof AMBIGUOUS\r\n  | typeof ARTIST\r\n  | typeof COPYRIGHT;\r\n\r\nexport const PLUS = \"+\";\r\nexport const MINUS = \"-\";\r\nexport type Modifier = typeof PLUS | typeof MINUS;\r\n\r\nexport const VIDEO = \"video\";\r\nexport const IMAGE = \"image\";\r\nexport type PostType = typeof VIDEO | typeof IMAGE;\r\n\r\nexport const PICTURE = \"picture\";\r\nexport const GIF = \"gif\";\r\nexport type MediaType = typeof VIDEO | typeof PICTURE | typeof GIF;\r\n\r\nexport const SEARCH = \"search\";\r\nexport const HELP = \"help\";\r\nexport const SETTINGS = \"settings\";\r\nexport type MenuType = typeof SEARCH | typeof HELP | typeof SETTINGS;\r\n\r\nexport const INVISIBLE = \"invisible\";\r\nexport const BLOCK = \"block\";\r\nexport const TOPLEFT = \"topLeft\";\r\nexport const BOTTOMLEFT = \"bottomLeft\";\r\nexport const CENTER = \"center\";\r\nexport const MODIFIER = \"modifier\";\r\nexport const ADD = \"add\";\r\nexport const MENU = \"menu\";\r\nexport const RED = \"red\";\r\nexport type ButtonType =\r\n  | typeof INVISIBLE\r\n  | typeof BLOCK\r\n  | typeof TOPLEFT\r\n  | typeof BOTTOMLEFT\r\n  | typeof CENTER\r\n  | typeof MODIFIER\r\n  | typeof ADD\r\n  | typeof MENU\r\n  | typeof RED;\r\n\r\nexport const SAFE = \"safe\";\r\nexport const QUESTIONABLE = \"questionable\";\r\nexport const EXPLICIT = \"explicit\";\r\nexport type RatingType = typeof SAFE | typeof QUESTIONABLE | typeof EXPLICIT;\r\n\r\nexport const INFINITE = \"infinite\";\r\nexport const RATED = \"rated\";\r\nexport const RATEDTRESHOLD = \"ratedTreshold\";\r\nexport const ORIGINALS = \"originals\";\r\nexport type PreferenceKey =\r\n  | typeof INFINITE\r\n  | typeof RATED\r\n  | typeof RATEDTRESHOLD\r\n  | typeof ORIGINALS;\r\n\r\nexport interface SimpleMap<V> {\r\n  [key: string]: V;\r\n}\r\n\r\nexport interface SimpleList<V> {\r\n  [key: number]: V;\r\n}\r\n","export const borderRadius = \"3px\";\r\nexport const borderWidth = \"2px\";\r\nexport const accentColor = \"crimson\";\r\nexport const hoverAccent = \"crimson\";\r\nexport const spacing = \"4px\";\r\nexport const bigSpacing = \"8px\";\r\nexport const backgroundColor = \"#121212\";\r\nexport const layer =\r\n  \"#ffffff11; :hover { background: #ffffff16;} transition: background-color 0.4s ease-in-out\";\r\nexport const backgroundColor2 = \"white\";\r\nexport const shadow = \"box-shadow: 0 0 8px #000\";\r\nexport const dropShadow = \"drop-shadow(0 0 4px rgba(0, 0, 0, 1))\";\r\n\r\nexport const appMargin = \"16px\";\r\nexport const gutter = \"8px\";\r\n","import React from \"react\";\r\nimport { accentColor } from \"../misc/style\";\r\n\r\nfunction R34Icon(props: { size: number }) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.size}\r\n      height={props.size}\r\n      viewBox=\"0 0 12.7 12.7\"\r\n    >\r\n      <g transform=\"translate(0,-284.3)\">\r\n        <circle\r\n          id=\"path18\"\r\n          cx=\"6.3499999\"\r\n          cy=\"290.65002\"\r\n          fill=\"none\"\r\n          stroke={accentColor}\r\n          strokeWidth=\"0.50848764\"\r\n          strokeMiterlimit=\"4\"\r\n          strokeDasharray=\"none\"\r\n          strokeOpacity=\"1\"\r\n          r=\"6.0957561\"\r\n        />\r\n        <text\r\n          fontStyle=\"normal\"\r\n          fontWeight=\"normal\"\r\n          fontSize=\"8.3113203px\"\r\n          fontFamily=\"sansSerif\"\r\n          letterSpacing=\"0px\"\r\n          wordSpacing=\"0px\"\r\n          fill={accentColor}\r\n          fillOpacity=\"1\"\r\n          x=\"2.1363549\"\r\n          y=\"289.02704\"\r\n          id=\"text4533\"\r\n          transform=\"scale(0.98538224,1.0148346)\"\r\n        >\r\n          <tspan\r\n            id=\"tspan4531\"\r\n            x=\"2.1363549\"\r\n            y=\"289.02704\"\r\n            fontStyle=\"normal\"\r\n            fontVariant=\"normal\"\r\n            fontWeight=\"300\"\r\n            fontStretch=\"normal\"\r\n            fontFamily=\"Calibri\"\r\n            fill={accentColor}\r\n            fillOpacity=\"1\"\r\n          >\r\n            34\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default R34Icon;\r\n","import { TagsState } from \"./reducers/tags\";\r\nimport { MiscState } from \"./reducers/misc\";\r\nimport { ResultsState } from \"./reducers/results\";\r\nimport { PreferencesState } from \"./reducers/preferences\";\r\n\r\ninterface RootState {\r\n  misc: MiscState;\r\n  results: ResultsState;\r\n  preferences: PreferencesState;\r\n  tags: TagsState;\r\n}\r\n\r\nexport const selectActiveMenu = (state: RootState) => state.misc.activeMenu;\r\nexport const selectHasResults = (state: RootState) =>\r\n  Object.keys(state.results.posts).length !== 0;\r\nexport const selectPreferences = (state: RootState) => state.preferences;\r\nexport const selectActiveTags = (state: RootState) => state.tags.active;\r\nexport const selectResults = (state: RootState) => state.results;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { node, object, string } from \"prop-types\";\r\nimport {\r\n  accentColor,\r\n  backgroundColor,\r\n  borderRadius,\r\n  spacing,\r\n  backgroundColor2,\r\n  borderWidth,\r\n  dropShadow,\r\n} from \"../../misc/style\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ButtonType } from \"../../data/types\";\r\n\r\nconst BasicButton = styled(motion.button)`\r\n  font-size: 14px;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst InvisibleButton = styled(BasicButton)`\r\n  background: none;\r\n  border: none;\r\n  padding: ${spacing};\r\n\r\n  :focus {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst MenuButton = styled(InvisibleButton)`\r\n  color: ${backgroundColor2};\r\n`;\r\n\r\nconst ActiveMenuButton = styled(InvisibleButton)`\r\n  color: ${accentColor};\r\n`;\r\n\r\nconst TopLeftButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  margin: 10px;\r\n  padding: 5px 5px;\r\n  filter: ${dropShadow};\r\n`;\r\n\r\nconst BottomLeftButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  margin: 10px;\r\n  padding: 5px 5px;\r\n  filter: ${dropShadow};\r\n`;\r\n\r\nconst CenterButton = styled(InvisibleButton)`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  filter: ${dropShadow};\r\n`;\r\n\r\nconst RedButton = styled(BasicButton)`\r\n  height: 32px;\r\n  font-size: 14px;\r\n  color: ${accentColor};\r\n  background: ${backgroundColor};\r\n  border: ${accentColor} ${borderWidth} solid;\r\n\r\n  transition: border-color 0.4s ease-in-out;\r\n  transition: color 0.4s ease-in-out;\r\n  transition: background-color 0.4s ease-in-out;\r\n\r\n  :hover {\r\n    background-color: ${accentColor};\r\n    color: ${backgroundColor};\r\n  }\r\n\r\n  :active,\r\n  :focus {\r\n    color: ${backgroundColor2};\r\n\r\n    border-color: ${backgroundColor2};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BlockButton = styled(RedButton)`\r\n  width: 100%;\r\n  border-radius: ${borderRadius};\r\n`;\r\n\r\nexport const AddButton = styled(RedButton)`\r\n  border-left-width: 0;\r\n  border-radius: 0 ${borderRadius} ${borderRadius} 0;\r\n`;\r\n\r\nexport const ModifierButton = styled(InvisibleButton)`\r\n  min-width: 48px;\r\n  border: ${accentColor} ${borderWidth} solid;\r\n  border-right-width: 0;\r\n  border-radius: ${borderRadius} 0 0 ${borderRadius};\r\n`;\r\n\r\n/**\r\n * @param {String} type\r\n */\r\nconst getButtonByType = (type: ButtonType, active: boolean) => {\r\n  switch (type) {\r\n    case \"invisible\":\r\n      return InvisibleButton;\r\n    case \"block\":\r\n      return BlockButton;\r\n    case \"topLeft\":\r\n      return TopLeftButton;\r\n    case \"bottomLeft\":\r\n      return BottomLeftButton;\r\n    case \"center\":\r\n      return CenterButton;\r\n    case \"modifier\":\r\n      return ModifierButton;\r\n    case \"add\":\r\n      return AddButton;\r\n    case \"menu\":\r\n      return active ? ActiveMenuButton : MenuButton;\r\n    default:\r\n      return RedButton;\r\n  }\r\n};\r\n\r\ninterface ButtonProps {\r\n  type: ButtonType;\r\n  children: JSX.Element | string;\r\n  onClick: MouseEventHandler;\r\n  active?: boolean;\r\n  disabled?: boolean;\r\n  label: string;\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {\r\n    type,\r\n    children,\r\n    onClick,\r\n    active = false,\r\n    disabled = false,\r\n    label,\r\n  } = props;\r\n  const TypedButton = getButtonByType(type, active);\r\n\r\n  return (\r\n    <TypedButton onClick={onClick} disabled={disabled} aria-label={label}>\r\n      {children}\r\n    </TypedButton>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: string,\r\n  children: node.isRequired,\r\n  btnProps: object,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: lighter;\r\n  margin: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Title;\r\n\r\nexport const BigTitle = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  font-weight: lighter;\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { HELP, MENU, SEARCH, SETTINGS } from \"../../data/types\";\r\nimport R34Icon from \"../../icons/R34Icon\";\r\nimport {\r\n  backgroundColor2,\r\n  bigSpacing,\r\n  gutter,\r\n  layer,\r\n  shadow,\r\n} from \"../../misc/style\";\r\nimport { setActiveMenu } from \"../../redux/actions\";\r\nimport { selectActiveMenu } from \"../../redux/selectors\";\r\nimport Button from \"../common/Button\";\r\nimport { BigTitle } from \"../common/Title\";\r\n\r\nconst HeaderWrapper = styled.header`\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 32px;\r\n  margin: 0 ${gutter};\r\n  background: ${backgroundColor2};\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  background: ${layer};\r\n  ${shadow};\r\n  padding: ${gutter} 0;\r\n  margin-bottom: ${bigSpacing};\r\n`;\r\n\r\nconst MenuBar = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction Header() {\r\n  const activeMenu = useSelector(selectActiveMenu);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <TitleBar>\r\n        <BigTitle>\r\n          <R34Icon size={32} />\r\n          <Divider />\r\n          <span style={{ marginTop: 2 }}>\r\n            Browse <a href=\"https://rule34.xxx\">Rule34</a>\r\n          </span>\r\n        </BigTitle>\r\n      </TitleBar>\r\n\r\n      <MenuBar>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === SEARCH}\r\n          onClick={() => dispatch(setActiveMenu(SEARCH))}\r\n          label={SEARCH}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === HELP}\r\n          onClick={() => dispatch(setActiveMenu(HELP))}\r\n          label={HELP}\r\n        >\r\n          Help\r\n        </Button>\r\n        <Button\r\n          type={MENU}\r\n          active={activeMenu === SETTINGS}\r\n          onClick={() => dispatch(setActiveMenu(SETTINGS))}\r\n          label={SETTINGS}\r\n        >\r\n          Settings\r\n        </Button>\r\n      </MenuBar>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gutter, backgroundColor2 } from \"../../misc/style\";\r\n\r\nconst FotterWrapper = styled.footer`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1px 1fr 1px 1fr;\r\n  justify-content: space-around;\r\n  padding: ${gutter};\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 20px;\r\n  background: ${backgroundColor2};\r\n`;\r\n\r\nconst CenteredA = styled.a`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FotterWrapper>\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react/issues/new?template=bug_report.md\">\r\n        Report a bug\r\n      </CenteredA>\r\n      <Divider />\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react\">\r\n        Github\r\n      </CenteredA>\r\n      <Divider />\r\n      <CenteredA href=\"https://github.com/kurozenzen/r34-react/issues/new?template=feature_request.md\">\r\n        Feature request\r\n      </CenteredA>\r\n    </FotterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport { gutter, layer, shadow, borderRadius } from \"../../misc/style\";\r\n\r\nconst Surface = styled.div`\r\n  padding: ${gutter};\r\n  background: ${layer};\r\n  ${shadow};\r\n  border-radius: ${borderRadius};\r\n\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nexport default Surface;\r\n\r\nexport const Line = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background: ${layer};\r\n`;\r\n","import TagDataClass from \"../data/Tag\";\r\nimport { SimpleMap } from \"../data/types\";\r\n\r\nconst pageSize = 20;\r\nconst apiUrl1 = \"https://r34-json.herokuapp.com\";\r\nconst apiUrl2 = \"https://r34-api-clone.herokuapp.com\";\r\n\r\nlet activeApi = apiUrl1;\r\n\r\n// Failover to apiUrl2\r\nfetch(activeApi).catch(() => (activeApi = apiUrl2));\r\n\r\nexport default {\r\n  async getTags(searchTerm: string) {\r\n    const res = await fetch(\r\n      `${activeApi}/tags?limit=${pageSize}&name=${searchTerm}*&order_by=posts`\r\n    );\r\n\r\n    return await res.json();\r\n  },\r\n\r\n  async getPosts(tags: SimpleMap<TagDataClass>, pageNumber = 0, minScore = 0) {\r\n    const res = await fetch(buildPostUrl(pageNumber, tags, minScore));\r\n\r\n    return await res.json();\r\n  },\r\n\r\n  async getAliases(tagName: string) {\r\n    const res = await fetch(`${activeApi}/alias/\"${tagName}`);\r\n\r\n    return await res.json();\r\n  },\r\n};\r\n\r\nfunction buildPostUrl(\r\n  page: number,\r\n  tags: SimpleMap<TagDataClass>,\r\n  minScore: number\r\n) {\r\n  const tagString = Object.values(tags)\r\n    .map(\r\n      (tag) =>\r\n        `${tag.modifier === \"-\" ? \"-\" : \"\"}${encodeURIComponent(tag.name)}`\r\n    )\r\n    .join(\"+\");\r\n\r\n  let url = `${activeApi}/posts?pid=${page}&limit=${pageSize}&tags=${tagString}`;\r\n\r\n  if (minScore > 0) {\r\n    url += `+${encodeURIComponent(\"score:>=\" + minScore)}`;\r\n  }\r\n\r\n  return url;\r\n}\r\n","import { RatingType, PostType } from \"./types\";\r\nimport TagDataClass from \"./Tag\";\r\n\r\nexport default class PostDataClass {\r\n  id: number;\r\n\r\n  score: number;\r\n  rating: RatingType;\r\n  source: string;\r\n  tags: TagDataClass[];\r\n\r\n  media_type: PostType;\r\n\r\n  thumbnail_src: string;\r\n  small_src: string;\r\n  big_src: string;\r\n\r\n  width: number;\r\n  height: number;\r\n\r\n  creator_id: number;\r\n  creator_url: string;\r\n\r\n  status: string;\r\n  parent_id: number;\r\n  has_children: boolean;\r\n  has_comments: boolean;\r\n  comments_url: string;\r\n  has_notes: boolean;\r\n  created_at: string;\r\n  change: string;\r\n\r\n  constructor(\r\n    id: number,\r\n    score: number,\r\n    rating: string,\r\n    source: string,\r\n    tags: TagDataClass[],\r\n    media_type: string,\r\n    media_src: any,\r\n    file_url: any,\r\n    thumbnail_src: string,\r\n    width: number,\r\n    height: number,\r\n    creator_id: number,\r\n    creator_url: string,\r\n    status: string,\r\n    parent_id: number,\r\n    has_children: boolean,\r\n    has_comments: boolean,\r\n    comments_url: string,\r\n    has_notes: boolean,\r\n    created_at: string,\r\n    change: string\r\n  ) {\r\n    this.id = id;\r\n\r\n    this.score = score;\r\n    this.rating = rating as RatingType;\r\n    this.source = source;\r\n    this.tags = tags;\r\n\r\n    this.media_type = media_type as PostType;\r\n    this.small_src = media_src;\r\n    this.big_src = file_url;\r\n    this.thumbnail_src = thumbnail_src;\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.creator_id = creator_id;\r\n    this.creator_url = creator_url;\r\n\r\n    this.status = status;\r\n    this.parent_id = parent_id;\r\n    this.has_children = has_children;\r\n    this.has_comments = has_comments;\r\n    this.comments_url = comments_url;\r\n    this.has_notes = has_notes;\r\n    this.created_at = created_at;\r\n    this.change = change;\r\n  }\r\n}\r\n","import { TagType, Modifier } from \"./types\";\r\n\r\nexport default class TagDataClass {\r\n  name: string;\r\n  count?: number | null;\r\n  types?: TagType[];\r\n  modifier?: Modifier;\r\n\r\n  constructor(\r\n    name: string,\r\n    types: TagType[] = [],\r\n    count: number | null = null,\r\n    modifier: Modifier = \"+\"\r\n  ) {\r\n    this.name = name;\r\n    this.types = types;\r\n    this.count = count;\r\n    this.modifier = modifier;\r\n  }\r\n}\r\n","import PostDataClass from \"../data/Post\";\r\nimport TagDataClass from \"../data/Tag\";\r\nimport { TagType, Modifier, RatingType } from \"../data/types\";\r\n\r\ninterface DirtyTag {\r\n  name: string;\r\n  types: string[];\r\n  count: string;\r\n  modifier: string;\r\n}\r\n\r\ninterface DirtyPost {\r\n  id: string;\r\n  type: string;\r\n  score: string;\r\n  rating: string;\r\n  source: string;\r\n  tags: string[];\r\n  file_url: string;\r\n  width: string;\r\n  height: string;\r\n  creator_id: string;\r\n  creator_url: string;\r\n  sample_url: string;\r\n  preview_url: string;\r\n  status: string;\r\n  parent_id: string;\r\n  has_children: string;\r\n  has_comments: string;\r\n  comments_url: string;\r\n  has_notes: string;\r\n  created_at: string;\r\n  change: string;\r\n}\r\n\r\nexport function prepareTag(dirtyTag: DirtyTag) {\r\n  const { name, types, count, modifier } = dirtyTag;\r\n\r\n  return new TagDataClass(\r\n    name,\r\n    types as TagType[],\r\n    Number(count),\r\n    modifier as Modifier\r\n  );\r\n}\r\n\r\nexport function preparePost(post: DirtyPost) {\r\n  const {\r\n    id,\r\n    type,\r\n    score,\r\n    rating,\r\n    source,\r\n    tags,\r\n    file_url,\r\n    width,\r\n    height,\r\n    creator_id,\r\n    creator_url,\r\n    sample_url,\r\n    preview_url,\r\n    status,\r\n    parent_id,\r\n    has_children,\r\n    has_comments,\r\n    comments_url,\r\n    has_notes,\r\n    created_at,\r\n    change,\r\n  } = post;\r\n  return new PostDataClass(\r\n    Number(id),\r\n    Number(score),\r\n    rating as RatingType,\r\n    source,\r\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\r\n    type,\r\n    sample_url,\r\n    file_url,\r\n    preview_url,\r\n    Number(width),\r\n    Number(height),\r\n    Number(creator_id),\r\n    creator_url,\r\n    status,\r\n    Number(parent_id),\r\n    Boolean(has_children),\r\n    Boolean(has_comments),\r\n    comments_url,\r\n    Boolean(has_notes),\r\n    created_at,\r\n    change\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { string, func } from \"prop-types\";\r\nimport { accentColor, borderWidth } from \"../../misc/style\";\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n  font-size: 14px;\r\n  border-top: ${accentColor} ${borderWidth} solid;\r\n  border-bottom: ${accentColor} ${borderWidth} solid;\r\n`;\r\n\r\ninterface TagInputProps {\r\n  value: string;\r\n  setValue: (newValue: string) => void;\r\n}\r\n\r\nexport default function TagInput(props: TagInputProps) {\r\n  const { value, setValue } = props;\r\n  return (\r\n    <Input\r\n      id=\"tag-input\"\r\n      value={value}\r\n      onChange={(event) => setValue(event.target.value)}\r\n      placeholder=\"Search for tags\"\r\n      aria-label=\"Search\"\r\n    />\r\n  );\r\n}\r\n\r\nTagInput.propTypes = {\r\n  value: string,\r\n  setValue: func,\r\n};\r\n","export function prettifyTagname(tagname: string) {\r\n  return tagname.replace(/_/g, \" \");\r\n}\r\n\r\nexport function normalizeTagname(tagname: string) {\r\n  return tagname.toLowerCase().replace(/ /g, \"_\");\r\n}\r\n","export const formatCount = (numberString: number) => {\r\n  const number = numberString;\r\n\r\n  if (number >= 1e6) {\r\n    return `${(number / 1e6).toFixed(0)}M`;\r\n  }\r\n\r\n  if (number >= 1e3) {\r\n    return `${(number / 1e3).toFixed(0)}K`;\r\n  }\r\n\r\n  return number;\r\n};\r\n\r\n/**\r\n * @param {String} sourceString\r\n */\r\nexport const formatSource = (sourceString: string) => {\r\n  if (\r\n    sourceString.includes(\"http:\") ||\r\n    sourceString.includes(\"https:\") ||\r\n    sourceString.includes(\"www.\") ||\r\n    sourceString.includes(\".com\")\r\n  ) {\r\n    let semiSanitized = sourceString\r\n      .replace(/https?:\\/\\//, \"\")\r\n      .replace(/ww[w\\d]\\./, \"\")\r\n      .replace(\".com\", \"\")\r\n      .replace(\".org\", \"\")\r\n      .replace(\".net\", \"\");\r\n\r\n    return semiSanitized.substring(0, semiSanitized.indexOf(\"/\"));\r\n  } else {\r\n    return sourceString;\r\n  }\r\n};\r\n","import React, { useState, useEffect, MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport \"./Tag.css\";\r\nimport api from \"../../misc/api\";\r\nimport TypeIcon from \"../../icons/TypeIcon\";\r\nimport {\r\n  backgroundColor,\r\n  accentColor,\r\n  borderRadius,\r\n  backgroundColor2,\r\n  spacing,\r\n  borderWidth,\r\n} from \"../../misc/style\";\r\nimport { ArrowIcon } from \"../../icons/Icons\";\r\nimport { prettifyTagname } from \"./tagUtils\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport { motion } from \"framer-motion\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectActiveTags } from \"../../redux/selectors\";\r\nimport { toggleTag } from \"../../redux/actions\";\r\n\r\nconst dropdownBorderRadius = (collapsed: boolean) =>\r\n  collapsed ? borderRadius : `${borderRadius} ${borderRadius} 0 0`;\r\n\r\nconst switchingColors = (active: boolean) => {\r\n  const fg = active ? backgroundColor : accentColor;\r\n  const bg = active ? accentColor : backgroundColor;\r\n\r\n  return `\r\n    color: ${fg};\r\n    background-color: ${bg};\r\n    border: ${accentColor} ${borderWidth} solid;\r\n    transition: background-color 0.4s ease-in-out;\r\n\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      background-color: ${fg};\r\n      color: ${bg};\r\n      \r\n      i {\r\n        color: ${bg};\r\n      }\r\n    }\r\n\r\n    :focus, :active {\r\n      color: ${backgroundColor2};\r\n      border-color: ${backgroundColor2}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const TagWrapper = styled(motion.div)(\r\n  (props: {\r\n    active: boolean;\r\n    collapsed: boolean;\r\n    onMouseLeave: MouseEventHandler;\r\n  }) =>\r\n    css`\r\n      display: inline-block;\r\n      padding: 0.25rem;\r\n      border-radius: ${dropdownBorderRadius(props.collapsed)};\r\n      font-size: 14px;\r\n      line-height: 1.2;\r\n      vertical-align: baseline;\r\n      margin: ${spacing};\r\n      ${switchingColors(props.active)}\r\n    `\r\n);\r\n\r\nconst IconWrapper = styled.span(\r\n  (props: { left?: boolean; right?: boolean }) => css`\r\n    ${props.left ? \"margin-right: 5px;\" : \"\"}\r\n    ${props.right ? \"margin-left: 5px;\" : \"\"}\r\n  `\r\n);\r\n\r\ninterface TagProps extends TagDataClass {\r\n  loadAliases: boolean;\r\n}\r\n\r\ntype TagLike = {\r\n  name: string;\r\n  posts: number;\r\n};\r\n\r\nfunction Tag(props: TagProps) {\r\n  const { name, count, modifier, types, loadAliases } = props;\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const [aliases, setAliases] = useState<TagLike[]>([]);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (activeTags[name])\r\n      api.getAliases(name).then((newAliases: TagLike[]) => {\r\n        newAliases.sort((a, b) => b.posts - a.posts);\r\n        setAliases(newAliases.filter((alias) => !activeTags[alias.name]));\r\n      });\r\n  }, [name, activeTags]);\r\n\r\n  const isActive = Boolean(activeTags[name]);\r\n  const showAliases = loadAliases && aliases && aliases.length > 0;\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onMouseLeave={() => setCollapsed(true)}\r\n    >\r\n      <TypeIcon types={types} left />\r\n      <TagText name={name} count={count} modifier={modifier} types={types} />\r\n      {showAliases && (\r\n        <>\r\n          <IconWrapper right onClick={() => setCollapsed(!collapsed)}>\r\n            <ArrowIcon />\r\n          </IconWrapper>\r\n          <div className={\"dropdown-list\" + (!collapsed ? \" visible\" : \"\")}>\r\n            {aliases.map(({ name, posts }) => (\r\n              <Alias key={\"t_\" + name} name={name} count={posts} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  );\r\n}\r\n\r\nfunction TagText(props: TagDataClass) {\r\n  const { name, count, modifier, types } = props;\r\n  const dispatch = useDispatch();\r\n  const tagname = prettifyTagname(name);\r\n  const text = count ? `${tagname} (${formatCount(count)})` : tagname;\r\n\r\n  return (\r\n    <span\r\n      onClick={() => dispatch(toggleTag(new TagDataClass(name, types, count)))}\r\n      onKeyDown={(e) =>\r\n        e.keyCode === 32 &&\r\n        dispatch(toggleTag(new TagDataClass(name, types, count)))\r\n      }\r\n    >\r\n      {modifier === \"-\" ? <s>{text}</s> : text}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Alias(props: TagDataClass) {\r\n  const { name, count } = props;\r\n  return (\r\n    <div className=\"alias\">\r\n      <TagText name={name} count={count} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tag;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TagWrapper } from \"../components/tag/Tag\";\r\nimport { accentColor, backgroundColor2 } from \"../misc/style\";\r\n\r\nexport const StyledIcon = styled.i`\r\n  ${(props: { color: string; size: number }) => `\r\n    color: ${props.color};\r\n    min-width: ${props.size}px;\r\n    height: ${props.size}px;\r\n\r\n    ${TagWrapper}:hover & {\r\n      color: ${accentColor};\r\n    }\r\n\r\n    ${TagWrapper}:active & ,  ${TagWrapper}:focus & {\r\n      color: ${backgroundColor2};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst IconWrapper = styled.span(\r\n  (props: { left: boolean; right: boolean }) => css`\r\n    line-height: 16px;\r\n    ${props.left ? \"margin-right: 5px;\" : \"\"}\r\n    ${props.right ? \"margin-left: 5px;\" : \"\"}\r\n  `\r\n);\r\n\r\ninterface IconProps {\r\n  icon: string;\r\n  className?: string;\r\n  color?: string;\r\n  size?: number;\r\n  onClick?: MouseEventHandler;\r\n  left?: boolean;\r\n  right?: boolean;\r\n}\r\n\r\nconst Icon = (props: IconProps) => {\r\n  const {\r\n    icon,\r\n    className = \"\",\r\n    color = \"black\",\r\n    size = 14,\r\n    onClick = () => {},\r\n    left = false,\r\n    right = false,\r\n  } = props;\r\n  return (\r\n    <IconWrapper onClick={onClick} left={left} right={right}>\r\n      <StyledIcon\r\n        className={`fas ${icon} ${className}`}\r\n        color={color}\r\n        size={size}\r\n      />\r\n    </IconWrapper>\r\n  );\r\n};\r\n\r\nexport const CharacterIcon = styled(Icon).attrs({\r\n  icon: \"fa-user\",\r\n})``;\r\n\r\nexport const ArtistIcon = styled(Icon).attrs({\r\n  icon: \"fa-pen\",\r\n})``;\r\n\r\nexport const CopyrightIcon = styled(Icon).attrs({\r\n  icon: \"fa-copyright\",\r\n})``;\r\n\r\nexport const PlusIcon = styled(Icon).attrs({\r\n  icon: \"fa-plus-circle\",\r\n})``;\r\n\r\nexport const MinusIcon = styled(Icon).attrs({\r\n  icon: \"fa-minus-circle\",\r\n})``;\r\n\r\nexport const CloseIcon = styled(Icon).attrs({\r\n  icon: \"fa-times\",\r\n})``;\r\n\r\nexport const ExpandIcon = styled(Icon).attrs({\r\n  icon: \"fa-expand\",\r\n})``;\r\n\r\nexport const ArrowIcon = styled(Icon).attrs({\r\n  icon: \"fa-caret-down\",\r\n})``;\r\n\r\nexport const ExternalLinkIcon = styled(Icon).attrs({\r\n  icon: \"fa-external-link-alt\",\r\n})``;\r\n\r\nexport const SourceIcon = styled(Icon).attrs({\r\n  icon: \"fa-hashtag\",\r\n})``;\r\n\r\nexport const RatingIcon = styled(Icon).attrs({\r\n  icon: \"fa-registered\",\r\n})``;\r\n\r\nexport const HeartIcon = styled(Icon).attrs({\r\n  icon: \"fa-heart\",\r\n})``;\r\n\r\nexport const PlayIcon = styled(Icon).attrs({\r\n  icon: \"fa-play\",\r\n})``;\r\n\r\nexport const PauseIcon = styled(Icon).attrs({\r\n  icon: \"fa-pause\",\r\n})``;\r\n\r\nexport const ArrowUp = styled(Icon).attrs({\r\n  icon: \"fa-caret-down\",\r\n})``;\r\n\r\nexport const ArrowDown = styled(Icon).attrs({\r\n  icon: \"fa-caret-up\",\r\n})``;\r\n","export const PICTURE = \"picture\";\r\nexport const GIF = \"gif\";\r\nexport const VIDEO = \"video\";\r\n\r\nexport const NO_OP = () => {};\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { CharacterIcon, CopyrightIcon, ArtistIcon } from \"./Icons\";\r\nimport { NO_OP } from \"../data/constants\";\r\n\r\ninterface TypeIconProps {\r\n  types?: string[];\r\n  className?: string;\r\n  color?: string;\r\n  size?: number;\r\n  onClick?: MouseEventHandler;\r\n  left?: boolean;\r\n  right?: boolean;\r\n}\r\n\r\nexport default function TypeIcon(props: TypeIconProps) {\r\n  const { types = [], className = \"\", onClick = NO_OP } = props;\r\n  const interestingType = types.find((t) => !t.match(/^[general|ambiguous]$/));\r\n\r\n  switch (interestingType) {\r\n    case \"character\":\r\n      return <CharacterIcon className={className} onClick={onClick} left />;\r\n    case \"copyright\":\r\n      return <CopyrightIcon className={className} onClick={onClick} left />;\r\n    case \"artist\":\r\n      return <ArtistIcon className={className} onClick={onClick} left />;\r\n    default:\r\n      return <div className={className}></div>;\r\n  }\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TypeIcon from \"../../icons/TypeIcon\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport { prettifyTagname } from \"../tag/tagUtils\";\r\nimport { accentColor, borderWidth } from \"../../misc/style\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { TagType } from \"../../data/types\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\r\n  if (tagSelector) {\r\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector;\r\n\r\n    return `\r\n      position: absolute;\r\n      top: ${offsetTop + clientHeight - 2}px;\r\n      left: ${offsetLeft}px;\r\n      width: ${clientWidth}px;`;\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nexport const ListWrapper = styled(motion.div)(\r\n  (props: { tagSelectorRef: HTMLDivElement | null }) => css`\r\n    ${sizeAndPosition(props.tagSelectorRef)};\r\n    background: white;\r\n    box-sizing: border-box;\r\n    border: ${borderWidth} ${accentColor} solid;\r\n    border-radius: 0 0 3px 3px;\r\n    color: black;\r\n    z-index: 1;\r\n  `\r\n);\r\n\r\ninterface DropdownListProps {\r\n  tagSelectorRef: HTMLDivElement | null;\r\n  entries: {\r\n    name: string;\r\n    posts: number;\r\n    types: TagType[];\r\n  }[];\r\n  onClick: (entry: TagDataClass) => void;\r\n}\r\n\r\nfunction DropdownList(props: DropdownListProps) {\r\n  const { tagSelectorRef, entries, onClick } = props;\r\n\r\n  return entries && entries.length > 0 ? (\r\n    <ListWrapper\r\n      tagSelectorRef={tagSelectorRef}\r\n      initial=\"collapsed\"\r\n      animate=\"open\"\r\n      exit=\"collapsed\"\r\n      variants={{\r\n        open: { opacity: 1, height: \"auto\" },\r\n        collapsed: { opacity: 0, height: 0 },\r\n      }}\r\n    >\r\n      {entries.map((entry) => (\r\n        <Entry\r\n          key={entry.name}\r\n          {...entry}\r\n          onClick={() => onClick(entry)}\r\n        ></Entry>\r\n      ))}\r\n    </ListWrapper>\r\n  ) : null;\r\n}\r\n\r\nconst EntryWrapper = styled.div`\r\n  display: flex;\r\n  height: 28px;\r\n\r\n  > * {\r\n    margin: auto;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    border-bottom: 1px grey solid;\r\n  }\r\n\r\n  :focus {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst TypeWrapper = styled.span`\r\n  flex: 0 0 48px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface EntryProps {\r\n  name: string;\r\n  posts: number;\r\n  types: TagType[];\r\n  onClick: MouseEventHandler;\r\n}\r\n\r\nfunction Entry(props: EntryProps) {\r\n  const { name, posts, types, onClick } = props;\r\n\r\n  return (\r\n    <EntryWrapper onClick={onClick}>\r\n      <TypeWrapper>\r\n        <TypeIcon types={types} />\r\n      </TypeWrapper>\r\n\r\n      <span style={{ flexGrow: 1 }}>{prettifyTagname(name)}</span>\r\n      <span style={{ paddingRight: 5 }}>{formatCount(posts)} posts</span>\r\n    </EntryWrapper>\r\n  );\r\n}\r\n\r\nexport default DropdownList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport api from \"../../misc/api\";\r\nimport { prepareTag } from \"../../misc/prepare\";\r\nimport Button, { AddButton, ModifierButton } from \"../common/Button\";\r\nimport TagInput from \"./TagInput\";\r\nimport DropdownList from \"./DropdownList\";\r\nimport { borderRadius } from \"../../misc/style\";\r\nimport { normalizeTagname } from \"../tag/tagUtils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTag } from \"../../redux/actions\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nexport const TagSelectorWrapper = styled.div`\r\n  display: flex;\r\n  background: white;\r\n  ${(props: { closed: boolean; ref: (ref: HTMLInputElement) => void }) =>\r\n    props.closed\r\n      ? `border-radius: ${borderRadius};`\r\n      : `\r\n        border-radius: ${borderRadius} ${borderRadius} 0 0;\r\n\r\n        > ${AddButton} {\r\n          border-radius: 0 ${borderRadius} 0 0;\r\n        }\r\n\r\n        > ${ModifierButton} {\r\n          border-radius: ${borderRadius} 0 0 0;\r\n        }\r\n      `}\r\n`;\r\n\r\nfunction TagSelector() {\r\n  const dispatch = useDispatch();\r\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(\r\n    null\r\n  );\r\n  const [value, setValue] = useState(\"\");\r\n  const [modifier, setModifier] = useState(\"+\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const activateTag = useCallback(\r\n    (suggestion) => {\r\n      dispatch(\r\n        addTag(\r\n          prepareTag({\r\n            name: suggestion.name,\r\n            modifier: modifier,\r\n            count: suggestion.posts,\r\n            types: suggestion.types,\r\n          })\r\n        )\r\n      );\r\n\r\n      setValue(\"\");\r\n      setSuggestions([]);\r\n    },\r\n    [dispatch, modifier]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handle = setTimeout(() => {\r\n      if (value && value !== \"\")\r\n        api.getTags(normalizeTagname(value)).then((newSuggestions) => {\r\n          setSuggestions(newSuggestions);\r\n        });\r\n    }, 400);\r\n\r\n    return () => clearTimeout(handle);\r\n  }, [value]);\r\n\r\n  return (\r\n    <TagSelectorWrapper\r\n      ref={setTagSelectorRef}\r\n      closed={suggestions.length === 0}\r\n    >\r\n      <Button\r\n        type=\"modifier\"\r\n        onClick={() => setModifier(modifier === \"+\" ? \"-\" : \"+\")}\r\n        label=\"Tag Modifier\"\r\n      >\r\n        {modifier}\r\n      </Button>\r\n      <TagInput value={value} setValue={setValue} />\r\n      <Button\r\n        type=\"add\"\r\n        onClick={() => {\r\n          if (value && value.trim() !== \"\") {\r\n            const suggestion =\r\n              suggestions.find((s: { name: string }) => s.name === value) || {};\r\n            activateTag({ ...suggestion, name: value });\r\n          }\r\n        }}\r\n        label=\"Add Tag\"\r\n      >\r\n        Add\r\n      </Button>\r\n      <AnimatePresence>\r\n        {suggestions.length > 0 && (\r\n          <DropdownList\r\n            tagSelectorRef={tagSelectorRef}\r\n            entries={suggestions}\r\n            onClick={(entry) => activateTag(entry)}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </TagSelectorWrapper>\r\n  );\r\n}\r\n\r\nexport default TagSelector;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  accentColor,\r\n  borderWidth,\r\n  backgroundColor2,\r\n  backgroundColor,\r\n} from \"../../misc/style\";\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 30px;\r\n  width: 50px;\r\n  border: ${borderWidth} solid ${accentColor};\r\n  background-color: ${backgroundColor};\r\n`;\r\n\r\nconst Thumb = styled(motion.div)`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: ${backgroundColor2};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst variants = {\r\n  enabled: { x: 30, background: accentColor },\r\n  disabled: { x: 0, background: backgroundColor2 },\r\n};\r\n\r\ninterface ToggleProps {\r\n  initialValue?: boolean;\r\n  value: boolean;\r\n  onToggle: MouseEventHandler;\r\n}\r\n\r\nexport default function Toggle(props: ToggleProps) {\r\n  const { initialValue, value, onToggle } = props;\r\n\r\n  return (\r\n    <Wrapper onClick={onToggle}>\r\n      <Thumb\r\n        initial={initialValue ? \"enabled\" : \"disabled\"}\r\n        animate={value ? \"enabled\" : \"disabled\"}\r\n        variants={variants}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { bool, func, node } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { gutter } from \"../../misc/style\";\r\nimport Toggle from \"./Toggle\";\r\n\r\nconst ToggleWrapper = styled.label`\r\n  display: flex;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  margin: auto;\r\n  margin-left: ${gutter};\r\n`;\r\n\r\ninterface LabeledToggleProps {\r\n  children: JSX.Element | string;\r\n  value: boolean;\r\n  onToggle: MouseEventHandler;\r\n}\r\n\r\nexport default function LabeledToggle(props: LabeledToggleProps) {\r\n  const { children, value, onToggle } = props;\r\n\r\n  return (\r\n    <ToggleWrapper>\r\n      <Toggle value={value} onToggle={onToggle} />\r\n      <Label>{children}</Label>\r\n    </ToggleWrapper>\r\n  );\r\n}\r\n\r\nLabeledToggle.propTypes = {\r\n  children: node.isRequired,\r\n  value: bool.isRequired,\r\n  onToggle: func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LabeledToggle from \"../common/LabeledToggle\";\r\nimport { accentColor, gutter } from \"../../misc/style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPreferences } from \"../../redux/selectors\";\r\nimport { setOption } from \"../../redux/actions\";\r\n\r\nconst OptionsWrapper = styled.div`\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  color: ${accentColor};\r\n  max-height: 16px;\r\n  width: ${({ value }) => 0.57 * String(value).length}em;\r\n  text-align: right;\r\n  font-size: 14px;\r\n  margin: -1px 0.2em 0 0.2em;\r\n\r\n  ::-webkit-inner-spin-button,\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  -moz-appearance: textfield;\r\n`;\r\n\r\nexport default function Options() {\r\n  const dispatch = useDispatch();\r\n  const { infinite, rated, ratedTreshold, originals } = useSelector(\r\n    selectPreferences\r\n  );\r\n\r\n  const [ratedInputValue, setRatedInputValue] = useState(ratedTreshold);\r\n\r\n  return (\r\n    <OptionsWrapper>\r\n      <LabeledToggle\r\n        value={infinite}\r\n        onToggle={() => dispatch(setOption(\"infinite\", !infinite))}\r\n      >\r\n        Infinite Scroll\r\n      </LabeledToggle>\r\n      <LabeledToggle\r\n        value={rated}\r\n        onToggle={() => dispatch(setOption(\"rated\", !rated))}\r\n      >\r\n        {rated ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            Above\r\n            <StyledInput\r\n              type=\"number\"\r\n              value={ratedTreshold}\r\n              onChange={(event) =>\r\n                setRatedInputValue(Number(event.target.value))\r\n              }\r\n              onBlur={() =>\r\n                dispatch(setOption(\"ratedTreshold\", ratedInputValue))\r\n              }\r\n            />\r\n            likes\r\n          </div>\r\n        ) : (\r\n          \"Only show Rated Posts\"\r\n        )}\r\n      </LabeledToggle>\r\n\r\n      <LabeledToggle\r\n        value={originals}\r\n        onToggle={() => dispatch(setOption(\"originals\", !originals))}\r\n      >\r\n        Load Original Sizes\r\n      </LabeledToggle>\r\n    </OptionsWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { spacing } from \"../../misc/style\";\r\nimport Tag from \"./Tag\";\r\nimport { SimpleMap } from \"../../data/types\";\r\n\r\nexport const TagListWrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  margin: ${(props: { padding: string }) =>\r\n    `calc(${props.padding} - ${spacing})`};\r\n`;\r\n\r\ninterface TagListProps {\r\n  tags: SimpleMap<TagDataClass>;\r\n  loadAliases?: boolean;\r\n  padding?: string;\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, loadAliases = false, padding = \"0px\" } = props;\r\n\r\n  return (\r\n    <div>\r\n      <TagListWrapper padding={padding}>\r\n        {Object.entries(tags).map(([key, tag]) => (\r\n          <Tag key={key} {...tag} loadAliases={loadAliases} />\r\n        ))}\r\n      </TagListWrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"../components/common/Title\";\r\nimport Surface, { Line } from \"../components/common/Surface\";\r\nimport TagSelector from \"../components/tagSelector/TagSelector\";\r\nimport Options from \"../components/features/Options\";\r\nimport TagList from \"../components/tag/TagList\";\r\n\r\nfunction Help() {\r\n  return (\r\n    <>\r\n      <Title>Help</Title>\r\n      <Surface>\r\n        <Title>Searching for Tags</Title>\r\n        <Line />\r\n        <TagSelector />\r\n        <Line />\r\n        <p>\r\n          You can use the Tag Selector to look for tags you like.The Tag\r\n          Selector has 4 parts.\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            The modifier (left) determines wether posts must match a tag or not.\r\n            Putting \"-\" will hide all posts with this tag\r\n          </li>\r\n          <li>\r\n            The Search Box (center) allows you to search for tags. As soon as\r\n            you start typing the Tag Selector will show you relevant tags to\r\n            choose from (4).\r\n          </li>\r\n          <li>\r\n            The Add Button (right) Allows you to add any tag to the current\r\n            filter. Usefull when using wildcards.\r\n          </li>\r\n          <li>\r\n            The Tag Dropdown (left) automatically shows tags that start with\r\n            your input. It also includes The number of posts tagged, to allow\r\n            you to weigh tags against each other.\r\n          </li>\r\n        </ol>\r\n      </Surface>\r\n      <Surface>\r\n        <Title>Options</Title>\r\n        <Line />\r\n        <Options />\r\n        <Line />\r\n        <p>\r\n          Options allow you to customize your experience in various ways. There\r\n          are 3 options available\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            Infinite Scrolling automatically loads new posts when you get close\r\n            to the bottom of the page.\r\n          </li>\r\n          <li>\r\n            Only show Rated posts filters out posts below the specified amount\r\n            of posts.\r\n          </li>\r\n          <li>\r\n            Load original sizes always loads the highest quality of an image.\r\n            This can easily cause extreme data consumption. Don't use with\r\n            mobile data.\r\n          </li>\r\n        </ol>\r\n      </Surface>\r\n      <Surface>\r\n        <Title>Tags</Title>\r\n        <Line />\r\n        <TagList\r\n          tags={{\r\n            \"Tag 1\": { name: \"Tag 1\" },\r\n            \"Tag 2\": { name: \"Tag 2\", types: [\"character\"] },\r\n            \"Tag 3\": {\r\n              name: \"Tag 3\",\r\n              modifier: \"-\",\r\n              types: [\"copyright\"],\r\n              count: 1020,\r\n            },\r\n          }}\r\n        />\r\n        <Line />\r\n        <p>\r\n          This whole application is based on tags. Every Post has multiple tags.\r\n          Usually you can enable/disable a tag just by tapping it. If a tag is\r\n          red it means its active. The icons next to the name show what type of\r\n          tag it is. Not every tag has a type. The number on the right shows how\r\n          many posts there are with that tag.\r\n        </p>\r\n      </Surface>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BlockButton } from \"../components/common/Button\";\r\nimport Surface, { Line } from \"../components/common/Surface\";\r\nimport Title from \"../components/common/Title\";\r\nimport { reset } from \"../redux/actions\";\r\n\r\nexport default function Settings() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Title>Settings</Title>\r\n      <Surface>\r\n        <Title>General</Title>\r\n        <p>nothing yet</p>\r\n        <Line />\r\n        <Title>Developer</Title>\r\n        <BlockButton onClick={() => dispatch(reset())}>\r\n          Reset Application\r\n        </BlockButton>\r\n      </Surface>\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { object, array, func } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport TagSelector from \"../tagSelector/TagSelector\";\r\nimport TagList from \"../tag/TagList\";\r\nimport Options from \"./Options\";\r\nimport Button from \"../common/Button\";\r\nimport api from \"../../misc/api\";\r\nimport { preparePost } from \"../../misc/prepare\";\r\nimport { gutter } from \"../../misc/style\";\r\nimport Title from \"../common/Title\";\r\nimport Surface from \"../common/Surface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPreferences, selectActiveTags } from \"../../redux/selectors\";\r\nimport { setPosts } from \"../../redux/actions\";\r\n\r\nconst ConfigWrapper = styled.section`\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nfunction Config() {\r\n  const dispatch = useDispatch();\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const { rated, ratedTreshold } = useSelector(selectPreferences);\r\n\r\n  const search = useCallback(() => {\r\n    api\r\n      .getPosts(activeTags, 0, rated ? ratedTreshold : 0)\r\n      .then((res) => dispatch(setPosts(res.posts.map(preparePost), res.count)));\r\n  }, [dispatch, rated, ratedTreshold, activeTags]);\r\n\r\n  return (\r\n    <ConfigWrapper>\r\n      <Title>\r\n        <label htmlFor=\"tag-input\">Search</label>\r\n      </Title>\r\n      <Surface>\r\n        <TagSelector />\r\n\r\n        {Object.keys(activeTags).length > 0 && (\r\n          <TagList tags={activeTags} loadAliases />\r\n        )}\r\n        <Options />\r\n        <Button type=\"block\" onClick={search} label=\"Search\">\r\n          Search\r\n        </Button>\r\n      </Surface>\r\n    </ConfigWrapper>\r\n  );\r\n}\r\n\r\nConfig.propTypes = {\r\n  options: object,\r\n  tags: array,\r\n  dispatch: func,\r\n};\r\n\r\nexport default Config;\r\n","import React, { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { number, string, array, func } from \"prop-types\";\r\nimport TagList, { TagListWrapper } from \"../tag/TagList\";\r\nimport {\r\n  HeartIcon,\r\n  ExternalLinkIcon,\r\n  SourceIcon,\r\n  RatingIcon,\r\n} from \"../../icons/Icons\";\r\nimport { spacing, layer, shadow, gutter } from \"../../misc/style\";\r\nimport { formatSource } from \"../../misc/formatting\";\r\nimport { motion } from \"framer-motion\";\r\nimport { RatingType } from \"../../data/types\";\r\nimport TagDataClass from \"../../data/Tag\";\r\nimport { listToMap } from \"../../data/utils\";\r\n\r\nconst DetailsWrapper = styled(motion.div)`\r\n  > ${TagListWrapper} {\r\n    padding: ${spacing};\r\n  }\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  background: ${layer};\r\n  padding: ${spacing};\r\n  ${shadow};\r\n\r\n  > span,\r\n  > a {\r\n    margin: ${spacing};\r\n    line-height: 1rem;\r\n    height: 1rem;\r\n  }\r\n`;\r\n\r\ninterface DetailsProps {\r\n  rating: RatingType;\r\n  score: number;\r\n  source: string;\r\n  tags: TagDataClass[];\r\n}\r\n\r\nfunction Details(props: DetailsProps) {\r\n  const { rating, score, source, tags } = props;\r\n\r\n  const tagsForRendering = useMemo(() => listToMap(tags, \"name\"), [tags]);\r\n\r\n  return (\r\n    <DetailsWrapper\r\n      initial=\"collapsed\"\r\n      animate=\"open\"\r\n      exit=\"collapsed\"\r\n      variants={{\r\n        open: { opacity: 1, height: \"auto\" },\r\n        collapsed: { opacity: 0, height: 0 },\r\n      }}\r\n    >\r\n      <Bar>\r\n        {rating && <Rating value={rating} />}\r\n        {score && <Score value={score} />}\r\n        {source && <Source value={source} />}\r\n      </Bar>\r\n      <TagList tags={tagsForRendering} padding={gutter} loadAliases={false} />\r\n    </DetailsWrapper>\r\n  );\r\n}\r\n\r\nDetails.propTypes = {\r\n  rating: string,\r\n  score: number,\r\n  source: string,\r\n  tags: array,\r\n  activeTags: array,\r\n  dispatch: func,\r\n};\r\n\r\nexport default Details;\r\n\r\nconst Rating = (props: { value: RatingType }) => (\r\n  <span>\r\n    <RatingIcon color=\"white\" left />\r\n    {props.value[0].toUpperCase()}\r\n  </span>\r\n);\r\n\r\nconst Score = (props: { value: number }) => (\r\n  <span>\r\n    {props.value}\r\n    <HeartIcon color=\"white\" right />\r\n  </span>\r\n);\r\n\r\nconst Source = (props: { value: string }) =>\r\n  props.value.startsWith(\"http\") ? (\r\n    <a\r\n      href={props.value}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"source\"\r\n    >\r\n      <ExternalLinkIcon color=\"red\" left />\r\n      {formatSource(props.value)}\r\n    </a>\r\n  ) : (\r\n    <span>\r\n      <SourceIcon color=\"white\" left />\r\n      {props.value}\r\n    </span>\r\n  );\r\n","import { SimpleMap } from \"./types\";\r\n\r\nexport const listToMap = <T>(list: T[], keyProp: string): SimpleMap<T> => {\r\n  return list.reduce((result: SimpleMap<T>, current: any) => {\r\n    result[current[keyProp]] = current;\r\n    return result;\r\n  }, {});\r\n};\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport { bool, func, number } from \"prop-types\";\r\n\r\nimport Button from \"../common/Button\";\r\nimport { ExpandIcon, PlayIcon, PauseIcon } from \"../../icons/Icons\";\r\nimport styled from \"styled-components\";\r\nimport { accentColor } from \"../../misc/style\";\r\nimport { NO_OP } from \"../../data/constants\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  height: 5px;\r\n  background-color: ${accentColor};\r\n`;\r\n\r\nconst variants = {\r\n  visible: {\r\n    opacity: 1,\r\n  },\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\ninterface OverlayProps {\r\n  onFullscreen?: MouseEventHandler;\r\n  togglePlay?: MouseEventHandler;\r\n  isPaused?: boolean;\r\n  isPlayable: boolean;\r\n  currentTime?: number;\r\n  duration?: number;\r\n}\r\n\r\nfunction Overlay(props: OverlayProps) {\r\n  const {\r\n    onFullscreen = NO_OP,\r\n    togglePlay = NO_OP,\r\n    isPaused = true,\r\n    isPlayable,\r\n    currentTime,\r\n    duration,\r\n  } = props;\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"visible\"\r\n      animate={isPaused ? \"visible\" : \"hidden\"}\r\n      whileHover={\"visible\"}\r\n      whileTap={\"visible\"}\r\n      variants={variants}\r\n    >\r\n      {onFullscreen && (\r\n        <Button type=\"topLeft\" onClick={onFullscreen} label=\"Open Fullscreen\">\r\n          <ExpandIcon color=\"white\" />\r\n        </Button>\r\n      )}\r\n\r\n      {isPlayable && (\r\n        <>\r\n          <Button type=\"center\" onClick={togglePlay} label=\"Play/Pause\">\r\n            {isPaused ? (\r\n              <PlayIcon color=\"white\" size={50} />\r\n            ) : (\r\n              <PauseIcon color=\"white\" size={50} />\r\n            )}\r\n          </Button>\r\n          {!!duration && !!currentTime && (\r\n            <ProgressBar\r\n              style={{ width: `${(currentTime / duration) * 100}%` }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nOverlay.propTypes = {\r\n  onFullscreen: func,\r\n  togglePlay: func,\r\n  isPaused: bool,\r\n  isPlayable: bool,\r\n  currentTime: number,\r\n  duration: number,\r\n};\r\n\r\nOverlay.defaultProps = {\r\n  onFullscreen: null,\r\n  togglePlay: NO_OP,\r\n  isPaused: true,\r\n  isPlayable: false,\r\n  currentTime: 0,\r\n  duration: null,\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useState, MouseEventHandler } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Overlay from \"./Overlay\";\r\nimport { openFullscreen } from \"./utils\";\r\n\r\nconst FlexVideo = styled.video`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface VideoProps {\r\n  src: string;\r\n  thumbnail_src: string;\r\n  toggleDetails: MouseEventHandler;\r\n}\r\n\r\nexport default function Video(props: VideoProps) {\r\n  const { src, thumbnail_src, toggleDetails } = props;\r\n\r\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null);\r\n\r\n  const [time, setTime] = useState(Date.now());\r\n  const [intervalId, setIntervalId] = useState(0);\r\n\r\n  const play = () => {\r\n    videoRef && videoRef.play();\r\n\r\n    // ~30 fps\r\n    const id = setInterval(() => {\r\n      setTime(Date.now());\r\n      console.log(time);\r\n    }, 34);\r\n\r\n    setIntervalId(id);\r\n  };\r\n\r\n  const pause = () => {\r\n    videoRef && videoRef.pause();\r\n    clearInterval(intervalId);\r\n    setIntervalId(-1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FlexVideo\r\n        controls={false}\r\n        loop\r\n        src={src}\r\n        poster={thumbnail_src}\r\n        preload=\"metadata\"\r\n        ref={setVideoRef}\r\n        onClick={toggleDetails}\r\n      />\r\n      <Overlay\r\n        isPaused={videoRef ? videoRef.paused : true}\r\n        currentTime={videoRef ? videoRef.currentTime : undefined}\r\n        duration={videoRef ? videoRef.duration : undefined}\r\n        onFullscreen={() => videoRef && openFullscreen(videoRef)}\r\n        togglePlay={(event) => {\r\n          event.stopPropagation();\r\n          videoRef && (videoRef.paused ? play() : pause());\r\n        }}\r\n        isPlayable\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { PostType, VIDEO, GIF, PICTURE } from \"../../data/types\";\r\n\r\nexport const openFullscreen = (elem: HTMLVideoElement) => {\r\n  elem.requestFullscreen();\r\n};\r\n\r\nexport const getMediaType = (type: PostType, src: string) => {\r\n  if (type === VIDEO) {\r\n    return VIDEO;\r\n  }\r\n\r\n  // can't use .endsWith because of queryString\r\n  if (src.includes(\".gif\")) {\r\n    return GIF;\r\n  }\r\n\r\n  return PICTURE;\r\n};\r\n","import React, { useState, MouseEventHandler } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nconst FlexImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface GifProps {\r\n  src: string;\r\n  thumbnail_src: string;\r\n  toggleDetails: MouseEventHandler;\r\n}\r\n\r\nexport default function Gif(props: GifProps) {\r\n  const { src, thumbnail_src, toggleDetails } = props;\r\n\r\n  const [isPaused, setPaused] = useState(true);\r\n  const usedSource = isPaused ? thumbnail_src : src;\r\n\r\n  return (\r\n    <>\r\n      <FlexImage src={usedSource} alt={usedSource} onClick={toggleDetails} />\r\n      <Overlay\r\n        isPlayable\r\n        isPaused={isPaused}\r\n        togglePlay={(event) => {\r\n          event.stopPropagation();\r\n          setPaused(!isPaused);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nconst FlexImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 100vh;\r\n  display: block;\r\n  object-fit: contain;\r\n`;\r\n\r\ninterface PictureProps {\r\n  src: string;\r\n  toggleDetails: MouseEventHandler;\r\n}\r\n\r\nexport default function Picture(props: PictureProps) {\r\n  const { src, toggleDetails } = props;\r\n\r\n  return (\r\n    <>\r\n      <FlexImage src={src} alt={src} onClick={toggleDetails} />\r\n      <Overlay isPlayable={false} />\r\n    </>\r\n  );\r\n}\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Video from \"./Video\";\r\nimport Gif from \"./Gif\";\r\nimport Picture from \"./Picture\";\r\nimport { VIDEO, GIF } from \"../../data/constants\";\r\nimport { getMediaType } from \"./utils\";\r\nimport { PostType } from \"../../data/types\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n`;\r\n\r\ninterface PlayerProps {\r\n  type: PostType;\r\n  src: string;\r\n  thumbnail_src: string;\r\n  toggleDetails: MouseEventHandler;\r\n}\r\n\r\nconst getMedia = (props: PlayerProps) => {\r\n  switch (getMediaType(props.type, props.src)) {\r\n    case VIDEO:\r\n      return Video;\r\n    case GIF:\r\n      return Gif;\r\n    default:\r\n      return Picture;\r\n  }\r\n};\r\n\r\nexport default function Player(props: PlayerProps) {\r\n  const Media = getMedia(props);\r\n  return <Wrapper>{<Media {...props} />}</Wrapper>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Details from \"./Details\";\r\nimport { borderRadius, layer, bigSpacing, shadow } from \"../../misc/style\";\r\nimport Player from \"../player/Player\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPreferences } from \"../../redux/selectors\";\r\nimport PostDataClass from \"../../data/Post\";\r\n\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${layer};\r\n  ${shadow};\r\n  border-radius: ${borderRadius};\r\n  overflow: hidden;\r\n  margin-bottom: ${bigSpacing};\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport function getCorrectSource(\r\n  loadOriginal: boolean,\r\n  big_src: string,\r\n  small_src: string,\r\n  id: number\r\n) {\r\n  let src;\r\n  if (loadOriginal) {\r\n    src = big_src;\r\n  } else {\r\n    src = `${small_src}?${id}`;\r\n    if (src.includes(\"//images\")) {\r\n      src = src.replace(\"//images\", \"/images\");\r\n    }\r\n  }\r\n\r\n  return src;\r\n}\r\n\r\nexport default function Post(props: PostDataClass) {\r\n  const {\r\n    id,\r\n    media_type,\r\n    small_src,\r\n    big_src,\r\n    thumbnail_src,\r\n    rating,\r\n    score,\r\n    source,\r\n    tags,\r\n  } = props;\r\n  const { originals } = useSelector(selectPreferences);\r\n  const media_src = getCorrectSource(originals, big_src, small_src, id);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  return (\r\n    <PostWrapper>\r\n      <Player\r\n        type={media_type}\r\n        src={media_src}\r\n        thumbnail_src={thumbnail_src}\r\n        toggleDetails={() => setCollapsed(!collapsed)}\r\n      />\r\n      <AnimatePresence initial={false}>\r\n        {!collapsed && (\r\n          <Details rating={rating} score={score} source={source} tags={tags} />\r\n        )}\r\n      </AnimatePresence>\r\n    </PostWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Post from \"./Post\";\r\nimport PostDataClass from \"../../data/Post\";\r\n\r\nconst PostListWrapper = styled.div``;\r\n\r\ninterface PostListProps {\r\n  posts: PostDataClass[];\r\n}\r\n\r\nfunction PostList(props: PostListProps) {\r\n  const { posts } = props;\r\n\r\n  return (\r\n    <PostListWrapper>\r\n      {posts.map((post) => {\r\n        return <Post key={post.id} {...post} />;\r\n      })}\r\n    </PostListWrapper>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import { array, func, object } from \"prop-types\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport outOfResultsPicture from \"../../icons/OutOfResults.png\";\r\nimport api from \"../../misc/api\";\r\nimport { formatCount } from \"../../misc/formatting\";\r\nimport { gutter } from \"../../misc/style\";\r\nimport {\r\n  selectActiveTags,\r\n  selectPreferences,\r\n  selectResults,\r\n} from \"../../redux/selectors\";\r\nimport Button from \"../common/Button\";\r\nimport Surface, { Line } from \"../common/Surface\";\r\nimport Title from \"../common/Title\";\r\nimport PostList from \"../post/PostList\";\r\nimport { preparePost } from \"../../misc/prepare\";\r\n\r\nconst ResultsWrapper = styled.section`\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nlet scrollLock = true;\r\n\r\nfunction hasReachedEndOfPage() {\r\n  return (\r\n    window.innerHeight + document.documentElement.scrollTop >=\r\n    document.documentElement.scrollHeight - window.innerHeight\r\n  );\r\n}\r\n\r\nfunction Results() {\r\n  const dispatch = useDispatch();\r\n  const activeTags = useSelector(selectActiveTags);\r\n  const { posts, count, pageNumber } = useSelector(selectResults);\r\n  const { rated, infinite, ratedTreshold } = useSelector(selectPreferences);\r\n\r\n  const [isOutOfResults, setOutOfResults] = useState(false);\r\n\r\n  const loadMore = useCallback(() => {\r\n    api\r\n      .getPosts(activeTags, pageNumber + 1, rated ? ratedTreshold : 0)\r\n      .then((res) => {\r\n        setOutOfResults(res.posts.length === 0);\r\n        dispatch({ type: \"ADD_POSTS\", posts: res.posts.map(preparePost) });\r\n        scrollLock = true;\r\n      });\r\n  }, [dispatch, rated, pageNumber, ratedTreshold, activeTags]);\r\n\r\n  window.onscroll = useCallback(() => {\r\n    if (infinite && scrollLock && hasReachedEndOfPage()) {\r\n      scrollLock = false;\r\n      loadMore();\r\n    }\r\n  }, [loadMore, infinite]);\r\n\r\n  return (\r\n    <ResultsWrapper className=\"results\">\r\n      <Title>{formatCount(count)} results</Title>\r\n      <PostList posts={posts} />\r\n\r\n      {!infinite && !isOutOfResults && (\r\n        <Button type={\"block\"} onClick={loadMore} label=\"Load More\">\r\n          Load More\r\n        </Button>\r\n      )}\r\n\r\n      {isOutOfResults && (\r\n        <Surface>\r\n          <img src={outOfResultsPicture} alt={outOfResultsPicture} />\r\n          <Line />\r\n          <Title>You have reached the end!</Title>\r\n          <p style={{ textAlign: \"center\" }}>Go look for something else...</p>\r\n        </Surface>\r\n      )}\r\n    </ResultsWrapper>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  options: object,\r\n  dispatch: func,\r\n  tags: array,\r\n  results: object,\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Config from \"../components/features/Config\";\r\nimport Results from \"../components/features/Results\";\r\nimport { selectHasResults } from \"../redux/selectors\";\r\n\r\nexport default function Search() {\r\n  const hasResults = useSelector(selectHasResults);\r\n\r\n  return (\r\n    <>\r\n      <Config />\r\n      {hasResults && <Results />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./components/features/Header\";\r\nimport Footer from \"./components/features/Footer\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  gutter,\r\n  backgroundColor,\r\n  backgroundColor2,\r\n  accentColor,\r\n} from \"./misc/style\";\r\nimport { MenuType } from \"./data/types\";\r\nimport Help from \"./pages/Help\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Search from \"./pages/Search\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectActiveMenu } from \"./redux/selectors\";\r\n\r\nconst Main = styled.main`\r\n  flex-grow: 1;\r\n  align-self: strech;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 16px;\r\n\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: strech;\r\n  min-height: 100%;\r\n  background: ${backgroundColor};\r\n  color: ${backgroundColor2};\r\n\r\n  font-size: 14px;\r\n\r\n  a {\r\n    color: ${accentColor};\r\n    text-decoration: none;\r\n  }\r\n\r\n  > *:not(:last-child) {\r\n    margin-bottom: ${gutter};\r\n  }\r\n`;\r\n\r\nfunction getActivePage(activeMenu: MenuType) {\r\n  switch (activeMenu) {\r\n    case \"help\":\r\n      return <Help />;\r\n    case \"settings\":\r\n      return <Settings />;\r\n    case \"search\":\r\n    default:\r\n      return <Search />;\r\n  }\r\n}\r\n\r\nfunction AppContent() {\r\n  const activeMenu = useSelector(selectActiveMenu);\r\n  const activePage = getActivePage(activeMenu);\r\n\r\n  return (\r\n    <AppWrapper>\r\n      <Header />\r\n      <Main>{activePage}</Main>\r\n      <Footer />\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nAppContent.propTypes = {};\r\n\r\nexport default AppContent;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport AppContent from \"./AppContent\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <AppContent />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app-root\"));\r\n"],"sourceRoot":""}