{"version":3,"sources":["icons/FontAwesomeIcons.ts","components/common/Select.tsx","components/common/SmallInput.tsx","components/common/Toggle.tsx","components/common/Setting.tsx","components/common/SuperTagEntry.tsx","components/widgets/ResetSeenPostsButton.tsx","components/widgets/SignIn.tsx","components/pages/Settings.tsx"],"names":["CharacterIcon","styled","FontAwesomeIcon","attrs","icon","faUser","ArtistIcon","faPen","CopyrightIcon","faCopyright","MetaDataIcon","faInfoCircle","CloseIcon","faTimes","ExpandIcon","faExpand","ExternalLinkIcon","faExternalLinkAlt","DownloadIcon","faDownload","SourceIcon","faHashtag","RatingIcon","faRegistered","HeartIcon","faHeart","LinkIcon","faLink","ArrowDown","faCaretDown","CodeBranchIcon","faCodeBranch","GithubIcon","faGithub","PatreonIcon","faPatreon","TwitterIcon","faTwitter","DeviantArtIcon","faDeviantart","DiscordIcon","faDiscord","TumblrIcon","faTumblr","CalendarIcon","faCalendarDay","CheckIcon","faCheckSquare","ImageIcon","faImage","GoogleIcon","faGoogle","WrenchIcon","faWrench","SearchIcon","faSearch","SupertagIcon","faTags","Wrapper","div","theme","css","dimensions","blockHeight","StyledSelect","select","defaultBorder","defaultBlock","colors","backgroundColor2","Option","option","Select","props","options","value","onChange","Object","entries","map","optionKey","optionValue","StyledInput","input","SmallNumberInput","onSubmit","className","useState","toString","internalValue","setInternalValue","useEffect","useCallback","event","target","onBlur","Number","onKeyDown","key","type","Track","backgroundColor","timings","longTransitionTime","Thumb","supportsAspectRatio","accentColor","Toggle","onToggle","onClick","Grid","gridWithGap","Title","SmallTitle","Body","Faded","Control","Setting","title","description","children","gutter","SuperTagEntry","name","tags","remove","removeSupertag","keys","length","ResetSeenPostsButton","onResetSeenPosts","resetSeenPosts","FlexRow","flexRowWithGap","ProfilePicture","img","borderRadius","SignIn","useFirebaseAuthState","isSignedIn","user","handleSignIn","signIn","handleSignOut","signOut","displayName","email","picture","photoURL","FlexColumn","src","alt","layouts","ResultLayout","INFINITE_COLUMN","PAGES","themes","ThemeId","DARK","LIGHT","COFFEE","ELECTRIC","SettingsSurface","Surface","hugeSpacing","gap","VersionWrapper","SettingsColumn","FlexColumnWithSpacing","Entry","flexColumnWithGap","StyledCode","Yes","span","No","yesOrNo","Settings","useTheme","usePreference","PreferenceKey","RESULTS_LAYOUT","resultsLayout","setResultsLayout","PAGE_SIZE","pageSize","setPageSize","ORIGINALS","originals","setOriginals","PRELOAD_VIDEOS","preloadVideos","setPreloadVideos","TAG_SUGGESTIONS_COUNT","tagSuggestionsCount","setTagSuggestionsCount","USE_CORS_PROXY","useCorsProxy","setUseCorsProxy","SHOW_METADATA","showMetadata","setShowMetadata","SHOW_COMMENTS","showComments","setShowComments","AUTO_PLAY","autoPlay","setAutoPlay","HIDE_SEEN","hideSeen","setHideSeen","THEME_ID","themeId","setThemeId","togglePreloadVideos","toggleOriginals","toggleUseCorsProxy","toggleShowMetadata","toggleShowComments","toggleAutoPlay","toggleHideSeen","onChangeResultsLayout","onChangeThemeId","versionString","getVersionString","supertags","useSupertags","document","Header","details","supportsGap","supportsFlexGap","supportsObjectFit","supportsFullscreen","ResetButton","color","subduedText"],"mappings":"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","file":"static/js/6.d491754d.chunk.js","sourcesContent":["import {\r\n  faDeviantart,\r\n  faDiscord,\r\n  faGithub,\r\n  faGoogle,\r\n  faPatreon,\r\n  faTumblr,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport {\r\n  faCalendarDay,\r\n  faCaretDown,\r\n  faCheckSquare,\r\n  faCodeBranch,\r\n  faCopyright,\r\n  faDownload,\r\n  faExpand,\r\n  faExternalLinkAlt,\r\n  faHashtag,\r\n  faHeart,\r\n  faImage,\r\n  faInfoCircle,\r\n  faLink,\r\n  faPen,\r\n  faRegistered,\r\n  faSearch,\r\n  faTags,\r\n  faTimes,\r\n  faUser,\r\n  faWrench,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\n\r\nexport const CharacterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faUser,\r\n})``\r\n\r\nexport const ArtistIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPen,\r\n})``\r\n\r\nexport const CopyrightIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCopyright,\r\n})``\r\n\r\nexport const MetaDataIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faInfoCircle,\r\n})``\r\n\r\nexport const CloseIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTimes,\r\n})``\r\n\r\nexport const ExpandIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExpand,\r\n})``\r\n\r\nexport const ExternalLinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExternalLinkAlt,\r\n})``\r\n\r\nexport const DownloadIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDownload,\r\n})``\r\n\r\nexport const SourceIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHashtag,\r\n})``\r\n\r\nexport const RatingIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faRegistered,\r\n})``\r\n\r\nexport const HeartIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHeart,\r\n})``\r\n\r\nexport const LinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faLink,\r\n})``\r\n\r\nexport const ArrowDown = styled(FontAwesomeIcon).attrs({\r\n  icon: faCaretDown,\r\n})``\r\n\r\nexport const CodeBranchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCodeBranch,\r\n})``\r\n\r\nexport const GithubIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGithub,\r\n})``\r\n\r\nexport const PatreonIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPatreon,\r\n})``\r\n\r\nexport const TwitterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTwitter,\r\n})``\r\n\r\nexport const DeviantArtIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDeviantart,\r\n})``\r\n\r\nexport const DiscordIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDiscord,\r\n})``\r\n\r\nexport const TumblrIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTumblr,\r\n})``\r\n\r\nexport const CalendarIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCalendarDay,\r\n})``\r\n\r\nexport const CheckIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCheckSquare,\r\n})``\r\n\r\nexport const ImageIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faImage,\r\n})``\r\n\r\nexport const GoogleIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGoogle,\r\n})``\r\n\r\nexport const WrenchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faWrench,\r\n})``\r\n\r\nexport const SearchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faSearch,\r\n})``\r\n\r\nexport const SupertagIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTags,\r\n})``\r\n","import React, { ChangeEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst Wrapper = styled.div(\n  ({ theme }) => css`\n    width: 100px;\n    height: ${theme.dimensions.blockHeight};\n  `\n)\n\nconst StyledSelect = styled.select(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    ${defaultBlock({ theme })}\n    width: 100%;\n    height: 100%;\n    background-color: ${theme.colors.backgroundColor2};\n  `\n)\n\nconst Option = styled.option(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n  `\n)\n\ninterface SelectProps {\n  options: Record<string, string>\n  value: string\n  onChange: ChangeEventHandler\n}\n\nexport default function Select(props: SelectProps) {\n  const { options, value, onChange } = props\n\n  return (\n    <Wrapper>\n      <StyledSelect value={value} onChange={onChange}>\n        {Object.entries(options).map(([optionKey, optionValue]) => (\n          <Option key={optionKey} value={optionKey}>\n            {optionValue}\n          </Option>\n        ))}\n      </StyledSelect>\n    </Wrapper>\n  )\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst StyledInput = styled.input(\n  ({ theme }) => css`\n    width: 70px;\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n    text-align: left;\n  `\n)\n\ninterface SmallInputProps<T> {\n  value: T\n  onSubmit: (value: T) => void\n  className?: string\n}\n\nexport function SmallTextInput(props: SmallInputProps<string>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value)\n\n  useEffect(() => {\n    setInternalValue(value)\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(internalValue)\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(internalValue)\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='text'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n\nexport function SmallNumberInput(props: SmallInputProps<number>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value.toString())\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      setInternalValue(value.toString())\n    }\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(Number(internalValue))\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(Number(internalValue))\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='number'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: DefaultTheme }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { gridWithGap } from '../../styled/mixins'\nimport { SmallTitle, Faded } from './Text'\n\nconst Grid = styled.div`\n  ${gridWithGap}\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto auto;\n`\n\nconst Title = styled(SmallTitle)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 1/2;\n  `\n)\n\nconst Body = styled(Faded)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 2/3;\n  `\n)\n\nconst Control = styled.div(\n  ({ theme }) => css`\n    grid-column: 2/3;\n    grid-row: 1/3;\n  `\n)\n\ninterface SettingProps {\n  title: string\n  description: string\n  children: React.ReactNode\n}\n\nexport default function Setting({ title, description, children }: SettingProps) {\n  return (\n    <Grid>\n      <Title>{title}</Title>\n      <Body>{description}</Body>\n      <Control>{children}</Control>\n    </Grid>\n  )\n}\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { removeSupertag } from '../../firebase'\r\nimport { SupertagDetails } from '../../firebase/types'\r\nimport { CloseIcon, SupertagIcon } from '../../icons/FontAwesomeIcons'\r\nimport { gridWithGap } from '../../styled/mixins'\r\nimport { Faded } from './Text'\r\n\r\nconst Wrapper = styled.div`\r\n  ${gridWithGap}\r\n  grid-template-columns: auto auto 1fr auto;\r\n  grid-template-rows: 1fr auto;\r\n  align-items: center;\r\n  padding: ${(props) => props.theme.dimensions.gutter};\r\n\r\n  :not(:last-child) {\r\n    border-bottom: solid gray 1px;\r\n  }\r\n\r\n  > :first-child {\r\n    place-items: center;\r\n    grid-area: 1/1/3/2;\r\n  }\r\n  > :nth-child(2) {\r\n    grid-area: 1/2/2/3;\r\n  }\r\n  > :nth-child(3) {\r\n    grid-area: 1/3/2/4;\r\n  }\r\n  > :nth-child(4) {\r\n    grid-area: 2/2/3/4;\r\n  }\r\n  > :nth-child(5) {\r\n    grid-area: 1/4/3/5;\r\n  }\r\n`\r\n\r\ninterface SuperTagEntryProps extends SupertagDetails {\r\n  name: string\r\n}\r\n\r\nexport default function SuperTagEntry(props: SuperTagEntryProps) {\r\n  const { name, description, tags } = props\r\n\r\n  const remove = useCallback(() => removeSupertag(name), [name])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SupertagIcon />\r\n      <span>{name}</span>\r\n      <Faded>{Object.keys(tags).length} tags</Faded>\r\n      <Faded>{description}</Faded>\r\n      <CloseIcon onClick={remove} />\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { resetSeenPosts } from '../../firebase'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetSeenPostsButton() {\r\n  const onResetSeenPosts = useCallback(resetSeenPosts, [])\r\n\r\n  return <BlockButton onClick={onResetSeenPosts}>Reset seen posts</BlockButton>\r\n}\r\n","import { useCallback } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { signIn, signOut } from '../../firebase'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { GoogleIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap } from '../../styled/mixins'\r\nimport { RedButton } from '../common/Buttons'\r\nimport FlexColumn from '../common/FlexColumn'\r\n\r\nconst FlexRow = styled.div`\r\n  ${flexRowWithGap}\r\n`\r\n\r\nconst ProfilePicture = styled.img(\r\n  ({ theme }) => css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    width: ${theme.dimensions.blockHeight};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n)\r\n\r\nexport default function SignIn() {\r\n  const [isSignedIn, user] = useFirebaseAuthState()\r\n  const handleSignIn = useCallback(signIn, [])\r\n  const handleSignOut = useCallback(signOut, [])\r\n\r\n  if (isSignedIn) {\r\n    const name = user?.displayName || user?.email || ''\r\n    const picture = user?.photoURL || ''\r\n\r\n    return (\r\n      <FlexColumn>\r\n        <FlexRow>\r\n          <ProfilePicture src={picture} alt={name} title={name} />\r\n          <RedButton onClick={handleSignOut}>\r\n            <span>Sign Out</span>\r\n          </RedButton>\r\n        </FlexRow>\r\n      </FlexColumn>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RedButton onClick={handleSignIn}>\r\n      <GoogleIcon />\r\n      <span>Sign In</span>\r\n    </RedButton>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport styled, { css, useTheme } from 'styled-components'\r\nimport {\r\n  supportsAspectRatio,\r\n  supportsFlexGap,\r\n  supportsFullscreen,\r\n  supportsGap,\r\n  supportsObjectFit,\r\n} from '../../data/browserUtils'\r\nimport { ResultLayout, PreferenceKey, ThemeId } from '../../data/types'\r\nimport { getVersionString } from '../../data/utils'\r\nimport { useSupertags } from '../../firebase'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport { CodeBranchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexColumnWithGap, flexRowWithGap, gap } from '../../styled/mixins'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../common/FlexColumn'\r\nimport { HorizontalLine } from '../common/Lines'\r\nimport Select from '../common/Select'\r\nimport Setting from '../common/Setting'\r\nimport { SmallNumberInput } from '../common/SmallInput'\r\nimport SuperTagEntry from '../common/SuperTagEntry'\r\nimport Surface from '../common/Surface'\r\nimport { Faded, SmallTitle, Title } from '../common/Text'\r\nimport Toggle from '../common/Toggle'\r\nimport Header from '../features/Header'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport ResetSeenPostsButton from '../widgets/ResetSeenPostsButton'\r\nimport SignIn from '../widgets/SignIn'\r\n\r\nconst layouts = {\r\n  [ResultLayout.INFINITE_COLUMN]: 'Infinite',\r\n  [ResultLayout.PAGES]: 'Pages',\r\n}\r\n\r\nconst themes = {\r\n  [ThemeId.DARK]: 'Dark',\r\n  [ThemeId.LIGHT]: 'Light',\r\n  [ThemeId.COFFEE]: 'Coffee',\r\n  [ThemeId.ELECTRIC]: 'Electric',\r\n}\r\n\r\nconst SettingsSurface = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    ${gap(theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\nconst VersionWrapper = styled.div`\r\n  ${flexRowWithGap}\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n`\r\n\r\nconst SettingsColumn = styled(FlexColumnWithSpacing)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst Entry = styled.div`\r\n  ${flexColumnWithGap}\r\n`\r\n\r\nconst StyledCode = styled.div(\r\n  ({ theme }) => css`\r\n    background: #00000040;\r\n    ${gap(theme.dimensions.gutter)}\r\n    padding: ${theme.dimensions.gutter};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n\r\n    p,\r\n    span {\r\n      font-family: 'Courier New', Courier, monospace;\r\n    }\r\n  `\r\n)\r\n\r\nconst Yes = styled.span`\r\n  color: limegreen;\r\n  font-weight: bold;\r\n`\r\n\r\nconst No = styled.span`\r\n  color: red;\r\n  font-weight: bold;\r\n`\r\n\r\nfunction yesOrNo(value: boolean) {\r\n  return value ? <Yes>Yes</Yes> : <No>No</No>\r\n}\r\n\r\nexport default function Settings() {\r\n  const theme = useTheme()\r\n\r\n  const [resultsLayout, setResultsLayout] = usePreference(PreferenceKey.RESULTS_LAYOUT)\r\n  const [pageSize, setPageSize] = usePreference(PreferenceKey.PAGE_SIZE)\r\n  const [originals, setOriginals] = usePreference(PreferenceKey.ORIGINALS)\r\n  const [preloadVideos, setPreloadVideos] = usePreference(PreferenceKey.PRELOAD_VIDEOS)\r\n  const [tagSuggestionsCount, setTagSuggestionsCount] = usePreference(PreferenceKey.TAG_SUGGESTIONS_COUNT)\r\n  const [useCorsProxy, setUseCorsProxy] = usePreference(PreferenceKey.USE_CORS_PROXY)\r\n  const [showMetadata, setShowMetadata] = usePreference(PreferenceKey.SHOW_METADATA)\r\n  const [showComments, setShowComments] = usePreference(PreferenceKey.SHOW_COMMENTS)\r\n  const [autoPlay, setAutoPlay] = usePreference(PreferenceKey.AUTO_PLAY)\r\n  const [hideSeen, setHideSeen] = usePreference(PreferenceKey.HIDE_SEEN)\r\n  const [themeId, setThemeId] = usePreference(PreferenceKey.THEME_ID)\r\n\r\n  const togglePreloadVideos = useCallback(() => setPreloadVideos(!preloadVideos), [preloadVideos, setPreloadVideos])\r\n  const toggleOriginals = useCallback(() => setOriginals(!originals), [originals, setOriginals])\r\n  const toggleUseCorsProxy = useCallback(() => setUseCorsProxy(!useCorsProxy), [useCorsProxy, setUseCorsProxy])\r\n  const toggleShowMetadata = useCallback(() => setShowMetadata(!showMetadata), [showMetadata, setShowMetadata])\r\n  const toggleShowComments = useCallback(() => setShowComments(!showComments), [showComments, setShowComments])\r\n  const toggleAutoPlay = useCallback(() => setAutoPlay(!autoPlay), [autoPlay, setAutoPlay])\r\n  const toggleHideSeen = useCallback(() => setHideSeen(!hideSeen), [hideSeen, setHideSeen])\r\n\r\n  const onChangeResultsLayout = useCallback((event) => setResultsLayout(event.target.value), [setResultsLayout])\r\n  const onChangeThemeId = useCallback((event) => setThemeId(event.target.value), [setThemeId])\r\n\r\n  const versionString = getVersionString()\r\n  const supertags = useSupertags()\r\n\r\n  document.title = 'R34 React - Settings'\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <SettingsColumn>\r\n        <Title>General</Title>\r\n        <SettingsSurface>\r\n          <Setting title='Results Layout' description='Choose how your results are displayed.'>\r\n            <Select options={layouts} value={resultsLayout} onChange={onChangeResultsLayout} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Preload Videos'\r\n            description='Start loading videos immediately instead of just-in-time. This can improve the viewing experience but will consume a LOT of data. Only use with WIFI.'\r\n          >\r\n            <Toggle value={preloadVideos} onToggle={togglePreloadVideos} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Load original sizes'\r\n            description='Display images and videos at their original resolution. This will consume more data but provides a nicer experience.'\r\n          >\r\n            <Toggle value={originals} onToggle={toggleOriginals} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Use CORS Proxy'\r\n            description='Request images via the built in cors proxy. Normally, this should just make loading times worse. But I have seen the opposite.'\r\n          >\r\n            <Toggle value={useCorsProxy} onToggle={toggleUseCorsProxy} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Number of Tag suggestions'\r\n            description='Controls the number of tags displayed when searching. Increase this when searching for niche tags.'\r\n          >\r\n            <SmallNumberInput value={tagSuggestionsCount} onSubmit={setTagSuggestionsCount} />\r\n          </Setting>\r\n\r\n          <Setting title='Page size' description='Controls the number of posts loaded at once.'>\r\n            <SmallNumberInput value={pageSize} onSubmit={setPageSize} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Show post metadata'\r\n            description=\"Posts display more data in their details. Mainly for developing purposes but maybe it's useful to someone.\"\r\n          >\r\n            <Toggle value={showMetadata} onToggle={toggleShowMetadata} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Show comments'\r\n            description=\"If there are comments on a post, they will appear in the details. They can be a bit weird though, that's why they are disabled by default.\"\r\n          >\r\n            <Toggle value={showComments} onToggle={toggleShowComments} />\r\n          </Setting>\r\n        </SettingsSurface>\r\n\r\n        <Title>Account</Title>\r\n        <SettingsSurface>\r\n          <Setting\r\n            title='Account'\r\n            description='Sign in to save your settings across devices. All Settings in this section require you to be signed in.'\r\n          >\r\n            <SignIn />\r\n          </Setting>\r\n\r\n          <Setting title='Theme' description='Choose how the app looks.'>\r\n            <Select options={themes} value={themeId} onChange={onChangeThemeId} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Supertags'\r\n            description='You can manage your supertags here. To create on sign in and try adding two or more tags to your search. Adding supertag to your search will add all the tags inside instead.'\r\n          >\r\n            {null}\r\n          </Setting>\r\n\r\n          <div>\r\n            {Object.entries(supertags).map(([name, details]) => (\r\n              <SuperTagEntry key={name} name={name} {...details}></SuperTagEntry>\r\n            ))}\r\n          </div>\r\n\r\n          <Setting\r\n            title='Hide seen posts [NOT WORKING]'\r\n            description='Enabling this option will hide all posts you have seen before. Perfect if you are frequently browsing the same tags or sorting by score.'\r\n          >\r\n            <Toggle value={hideSeen} onToggle={toggleHideSeen} />\r\n          </Setting>\r\n        </SettingsSurface>\r\n\r\n        <Title>Experimental</Title>\r\n        <SettingsSurface>\r\n          <Faded>\r\n            These features that are still under active development. They might change a lot in the future. Please report\r\n            any bugs you find so I can fix them :)\r\n          </Faded>\r\n          <HorizontalLine />\r\n\r\n          <Setting\r\n            title='Auto-play'\r\n            description='Start videos automatically once they become visible. This will use more data.'\r\n          >\r\n            <Toggle value={autoPlay} onToggle={toggleAutoPlay} />\r\n          </Setting>\r\n        </SettingsSurface>\r\n\r\n        <Title>Developer</Title>\r\n        <SettingsSurface>\r\n          <Entry>\r\n            <SmallTitle>Debug Info</SmallTitle>\r\n            <StyledCode>\r\n              <p>Supports grid-gap: {yesOrNo(supportsGap)}</p>\r\n              <p>Supports flex-gap: {yesOrNo(supportsFlexGap)}</p>\r\n              <p>Supports aspect-ratio: {yesOrNo(supportsAspectRatio)}</p>\r\n              <p>Supports object-fit: {yesOrNo(supportsObjectFit)}</p>\r\n              <p>Supports fullscreen: {yesOrNo(supportsFullscreen)}</p>\r\n            </StyledCode>\r\n          </Entry>\r\n\r\n          <ResetSeenPostsButton />\r\n          <ResetButton />\r\n        </SettingsSurface>\r\n        <VersionWrapper>\r\n          <CodeBranchIcon color={theme.colors.subduedText} />\r\n          <Faded>{versionString}</Faded>\r\n        </VersionWrapper>\r\n      </SettingsColumn>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}