{"version":3,"sources":["components/common/Surface.tsx","misc/formatting.ts","components/features/Header.tsx","icons/R34Icon.tsx","components/common/FlexColumn.tsx","hooks/useToggle.ts","components/common/FlexPair.tsx","components/tag/TagWrapper.tsx","components/tag/TagName.tsx","components/tag/Alias.tsx","components/tag/AliasesList.tsx","components/tag/Tag.tsx","components/tag/TagList.tsx","components/common/Toggle.tsx","hooks/usePreference.tsx","icons/TypeIcon.tsx","hooks/useModifier.tsx","components/tagSelector/DropdownListEntry.tsx","components/tagSelector/DropdownList.tsx","components/tagSelector/TagInput.tsx","components/tagSelector/TagSelector.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/common/Text.tsx","icons/FontAwesomeIcons.ts","components/common/Lines.tsx"],"names":["styled","div","gutter","layer","boxShadow","borderRadius","formatCount","numberString","number","toFixed","formatSource","source","url","parseUrl","host","formatDuration","duration","min","Math","trunc","sec","formatTagname","tagname","replace","serializeTagname","toLowerCase","formatTagnameAndCount","name","count","HeaderWrapper","header","theme","css","flexColumn","flexColumnGap","dimensions","bigSpacing","TitleBar","flexRowWithGap","colors","layerBgSolid","MenuBar","nav","flexRowGap","hugeSpacing","LocationStyledLink","Link","to","current","accentColor","backgroundColor2","Header","useLocation","pathname","role","size","href","RouteName","SEARCH","HELP","SETTINGS","ABOUT","R34Icon","props","useTheme","xmlns","width","height","viewBox","className","transform","id","cx","cy","fill","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","FlexColumn","FlexColumnWithSpacing","centeredMaxWidth","useToggle","initialValue","useState","value","setValue","toggleValue","useCallback","resetValue","Wrapper","FlexPair","children","TagWrapper","active","fg","backgroundColor","bg","borderWidth","timings","transitionTime","switchingColors","blockHeight","collapsed","fontSizes","content","modifierToStyle","Modifier","PLUS","MINUS","OR","TagNameSpan","span","modifier","TagName","text","tabIndex","AliasWrapper","Alias","dispatch","useDispatch","handleClick","event","stopPropagation","tag","TagDataClass","addTag","onClick","ListWrapper","parentRef","offsetTop","clientHeight","offsetLeft","clientWidth","AliasesList","aliases","map","DropdownArrow","ArrowDown","$collapsed","Tag","types","detailed","tagRef","setTagRef","toggleCollapsed","resetCollapsed","activeTags","useSelector","selectActiveTags","selectAliasesByTagName","filteredAliases","useMemo","filter","alias","isActive","hasAliases","length","removeTag","handleArrowClick","handleEnter","key","onKeyDown","onMouseLeave","ref","TypeIcon","TagListWrapper","TagList","tags","Object","entries","Track","defaultBorder","longTransitionTime","Thumb","supportsAspectRatio","Toggle","onToggle","usePreference","preferences","selectPreferences","setPreference","setOption","NO_OP","find","t","match","TagType","CHARACTER","COPYRIGHT","ARTIST","RATING","SOURCE","METADATA","order","EntryWrapper","Name","Count","Icon","DropdownListEntry","posts","tagSelectorRef","tagSelector","sizeAndPosition","layerBg","DropdownList","entry","Input","input","TagInput","onSubmit","handleChange","target","onChange","placeholder","aria-label","TagSelectorWrapper","closed","AddButton","ModifierButton","TagSelector","suggestions","setSuggestions","setTagSelectorRef","setModifier","nextModifier","currentIndex","indexOf","useModifier","tagSuggestionsCount","selectTagSuggestionCount","activateTag","prepareTag","useThrottledEffect","a","api","getTags","newSuggestions","onAddClick","trim","sanitizedTagname","suggestion","s","LabeledToggle","OptionsWrapper","gridWithGap","StyledInput","Options","PreferenceKey","RATED","rated","setRated","RATEDThreshold","ratedThreshold","setRatedThreshold","toggleRated","toString","ratedThresholdInternal","setRatedThresholdInternal","onBlur","Number","style","display","type","Title","h2","bigTitle","BigTitle","h1","SmallTitle","h3","Faded","subduedText","CharacterIcon","FontAwesomeIcon","attrs","icon","faUser","ArtistIcon","faPen","CopyrightIcon","faCopyright","MetaDataIcon","faInfoCircle","CloseIcon","faTimes","ExpandIcon","faExpand","ExternalLinkIcon","faExternalLinkAlt","DownloadIcon","faDownload","SourceIcon","faHashtag","RatingIcon","faRegistered","HeartIcon","faHeart","LinkIcon","faLink","faCaretDown","CodeBranchIcon","faCodeBranch","GithubIcon","faGithub","PatreonIcon","faPatreon","TwitterIcon","faTwitter","DeviantArtIcon","faDeviantart","DiscordIcon","faDiscord","HorizontalLine","VerticalLine"],"mappings":"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","file":"static/js/1.c740fd41.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { borderRadius, boxShadow, gutter, layer } from '../../styled/mixins'\n\nexport default styled.div`\n  display: grid;\n  ${gutter}\n  ${layer}\n  ${boxShadow}\n  ${borderRadius}\n  width: 100%;\n`\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname\n    .replace(/_/g, ' ')\n    .replace(/source:/g, ' ')\n    .replace(/rating:/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { boxShadow, flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${boxShadow({ theme })}\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.backgroundColor2};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar role='cell'>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.ABOUT}>\n          About\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number; className?: string }) {\n  const theme = useTheme()\n\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={props.size}\n      height={props.size}\n      viewBox='0 0 12.7 12.7'\n      className={props.className}\n    >\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import { useCallback, useState } from 'react'\n\n/**\n * A small wrapper for a useState<boolean> that is primarily used for toggling.\n * Saves me a few useCallbacks.\n */\nexport default function useToggle(initialValue = false): [boolean, () => void, () => void] {\n  const [value, setValue] = useState<boolean>(initialValue)\n  const toggleValue = useCallback(() => setValue(!value), [value])\n  const resetValue = useCallback(() => setValue(initialValue), [initialValue])\n\n  return [value, toggleValue, resetValue]\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\ninterface FlexPairProps {\n  children: [JSX.Element, JSX.Element]\n}\n\nconst Wrapper = styled.div`\n  ${flexRowWithGap}\n`\n\nexport default function FlexPair({ children }: FlexPairProps) {\n  return <Wrapper>{children}</Wrapper>\n}\n","import { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\n\nimport { ThemeType } from '../../misc/theme'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst dropdownBorderRadius = (collapsed: boolean, theme: ThemeType) =>\n  collapsed ? theme.dimensions.borderRadius : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`\n\nconst switchingColors = (active: boolean, theme: ThemeType) => {\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor\n\n  return css`\n    color: ${fg};\n    background-color: ${bg};\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\n    transition: all ${theme.timings.transitionTime} ease-out;\n\n    svg {\n      color: ${fg};\n    }\n\n    cursor: pointer;\n\n    :hover,\n    :focus,\n    :active {\n      border-color: ${theme.colors.backgroundColor2};\n      color: ${theme.colors.backgroundColor2};\n\n      svg {\n        color: ${theme.colors.backgroundColor2};\n      }\n    }\n\n    :active {\n      transform: scale(1.05);\n    }\n  `\n}\n\nconst TagWrapper = styled.div(\n  (props: { active: boolean; collapsed: boolean; onMouseLeave: MouseEventHandler; theme: DefaultTheme }) =>\n    css`\n      ${flexRowWithGap({ theme: props.theme })}\n      ${switchingColors(props.active, props.theme)}\n      padding: 0 ${props.theme.dimensions.gutter};\n      height: ${props.theme.dimensions.blockHeight};\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\n      font-size: ${props.theme.fontSizes.content};\n    `\n)\n\nexport default TagWrapper\n","import styled, { css } from 'styled-components'\nimport { Modifier, TagType } from '../../data/types'\nimport { formatTagnameAndCount } from '../../misc/formatting'\n\ninterface TagNameProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n  types?: TagType[]\n}\n\nconst modifierToStyle = {\n  [Modifier.PLUS]: css``,\n  [Modifier.MINUS]: css`\n    text-decoration: line-through;\n  `,\n  [Modifier.OR]: css`\n    font-style: italic;\n  `,\n}\n\nconst TagNameSpan = styled.span(\n  ({ modifier = Modifier.PLUS }: Pick<TagNameProps, 'modifier'>) => modifierToStyle[modifier]\n)\n\nexport default function TagName(props: TagNameProps) {\n  const { modifier, name, count } = props\n\n  const text = formatTagnameAndCount(name, count)\n\n  return (\n    <TagNameSpan modifier={modifier} tabIndex={0}>\n      {text}\n    </TagNameSpan>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport { addTag } from '../../redux/actions'\nimport { flexRowWithGap } from '../../styled/mixins'\nimport TagName from './TagName'\n\ninterface AliasProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n}\n\nconst AliasWrapper = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    padding: 0 ${theme.dimensions.bigSpacing};\n    height: ${theme.dimensions.blockHeight};\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport default function Alias(props: AliasProps) {\n  const { modifier, name, count } = props\n\n  const dispatch = useDispatch()\n\n  const handleClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      const tag = new TagDataClass(name, [], count, modifier)\n\n      dispatch(addTag(tag))\n    },\n    [count, dispatch, modifier, name]\n  )\n\n  return (\n    <AliasWrapper onClick={handleClick}>\n      <TagName modifier={modifier} name={name} count={count} />\n    </AliasWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport Alias from './Alias'\nimport { ThemeType } from '../../misc/theme'\n\nconst ListWrapper = styled.div(\n  ({ theme, parentRef }: { theme: ThemeType; parentRef: HTMLDivElement }) => css`\n    position: absolute;\n    top: ${parentRef.offsetTop + parentRef.clientHeight + 4}px;\n    left: ${parentRef.offsetLeft}px;\n    width: ${parentRef.clientWidth + 5}px;\n\n    display: flex;\n    flex-direction: column;\n\n    border-bottom-left-radius: ${theme.dimensions.borderRadius};\n    border-bottom-right-radius: ${theme.dimensions.borderRadius};\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    border-top: none;\n\n    background: ${theme.colors.backgroundColor};\n    z-index: 3;\n    color: ${theme.colors.accentColor};\n\n    > :not(:last-child) {\n      border-bottom: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    }\n  `\n)\n\ninterface AliasesListProps {\n  aliases: TagDataClass[]\n  modifier: Modifier\n  parentRef: HTMLDivElement\n}\n\nexport default function AliasesList(props: AliasesListProps) {\n  const { aliases, modifier, parentRef } = props\n\n  return (\n    <ListWrapper parentRef={parentRef}>\n      {aliases.map(({ name, count }) => (\n        <Alias key={'a_' + name} modifier={modifier} name={name} count={count} />\n      ))}\n    </ListWrapper>\n  )\n}\n","import React, { KeyboardEventHandler, MouseEventHandler, useCallback, useMemo, useState } from 'react'\r\nimport TypeIcon from '../../icons/TypeIcon'\r\nimport { ArrowDown } from '../../icons/FontAwesomeIcons'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectActiveTags, selectAliasesByTagName } from '../../redux/selectors'\r\nimport { addTag, removeTag } from '../../redux/actions'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport TagWrapper from './TagWrapper'\r\nimport TagName from './TagName'\r\nimport { Modifier } from '../../data/types'\r\nimport AliasesList from './AliasesList'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\n\r\nconst DropdownArrow = styled(ArrowDown)(\r\n  ({ $collapsed, theme }: { $collapsed: boolean; theme: DefaultTheme }) => css`\r\n    transition: all ${theme.timings.transitionTime} ease-out;\r\n    height: 32px;\r\n    width: 32px !important;\r\n    padding: 8px;\r\n    margin: 0 -8px;\r\n    ${$collapsed\r\n      ? css``\r\n      : css`\r\n          transform: rotate(180deg);\r\n        `}\r\n  `\r\n)\r\n\r\ninterface TagProps extends TagDataClass {\r\n  detailed: boolean\r\n}\r\n\r\nexport default function Tag(props: TagProps) {\r\n  const { name, count, modifier = Modifier.PLUS, types, detailed } = props\r\n\r\n  const [tagRef, setTagRef] = useState<HTMLDivElement | null>(null)\r\n  const [collapsed, toggleCollapsed, resetCollapsed] = useToggle(true)\r\n\r\n  const dispatch = useDispatch()\r\n  const activeTags = useSelector(selectActiveTags)\r\n  const aliases = useSelector(selectAliasesByTagName(name))\r\n\r\n  const filteredAliases = useMemo(() => (aliases ? aliases.filter((alias) => !(alias.name in activeTags)) : []), [\r\n    activeTags,\r\n    aliases,\r\n  ])\r\n\r\n  const isActive = name in activeTags\r\n  const hasAliases = filteredAliases?.length > 0\r\n\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent | React.KeyboardEvent) => {\r\n      event.stopPropagation()\r\n      const tag = new TagDataClass(name, types, count, modifier)\r\n\r\n      if (isActive) {\r\n        dispatch(removeTag(tag))\r\n      } else {\r\n        dispatch(addTag(tag))\r\n      }\r\n    },\r\n    [count, dispatch, isActive, modifier, name, types]\r\n  )\r\n\r\n  const handleArrowClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      toggleCollapsed()\r\n    },\r\n    [toggleCollapsed]\r\n  )\r\n\r\n  const handleEnter: KeyboardEventHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleClick(event)\r\n      }\r\n    },\r\n    [handleClick]\r\n  )\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onClick={handleClick}\r\n      onKeyDown={handleEnter}\r\n      onMouseLeave={resetCollapsed}\r\n      ref={setTagRef}\r\n    >\r\n      {detailed && <TypeIcon types={types} />}\r\n      <TagName modifier={modifier} name={name} count={count} />\r\n      {detailed && hasAliases && (\r\n        <>\r\n          <DropdownArrow onClick={handleArrowClick} $collapsed={collapsed} />\r\n          {!collapsed && tagRef && <AliasesList aliases={filteredAliases} modifier={modifier} parentRef={tagRef} />}\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { flexRowGap, flexColumnGap } from '../../styled/mixins'\r\nimport Tag from './Tag'\r\n\r\nconst TagListWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    ${flexRowGap(theme.dimensions.gutter)}\r\n    ${flexColumnGap(theme.dimensions.gutter)}\r\n  `\r\n)\r\n\r\ninterface TagListProps {\r\n  tags: Record<string, TagDataClass>\r\n  className?: string\r\n  detailed: boolean\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, className, detailed } = props\r\n\r\n  return (\r\n    <TagListWrapper className={className}>\r\n      {Object.entries(tags).map(([key, tag]) => (\r\n        <Tag key={key} detailed={detailed} {...tag} />\r\n      ))}\r\n    </TagListWrapper>\r\n  )\r\n}\r\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { ThemeType } from '../../misc/theme'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: ThemeType }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setOption } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setPreference = useCallback((value: any) => dispatch(setOption(key, value)), [dispatch, key])\n\n  return [preferences[key], setPreference]\n}\n","import React, { MouseEventHandler, useMemo } from 'react'\nimport { NO_OP, TagType } from '../data/types'\nimport { CharacterIcon, CopyrightIcon, ArtistIcon, RatingIcon, SourceIcon, MetaDataIcon } from './FontAwesomeIcons'\n\ninterface TypeIconProps {\n  types?: string[]\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  left?: boolean\n  right?: boolean\n}\n\nexport default function TypeIcon(props: TypeIconProps) {\n  const { types = [], className = '', onClick = NO_OP } = props\n  const interestingType = useMemo(() => types.find((t) => !t.match(/^[general|ambiguous]$/)), [types])\n\n  switch (interestingType) {\n    case TagType.CHARACTER:\n      return <CharacterIcon className={className} onClick={onClick} />\n    case TagType.COPYRIGHT:\n      return <CopyrightIcon className={className} onClick={onClick} />\n    case TagType.ARTIST:\n      return <ArtistIcon className={className} onClick={onClick} />\n    case TagType.RATING:\n      return <RatingIcon className={className} onClick={onClick} />\n    case TagType.SOURCE:\n      return <SourceIcon className={className} onClick={onClick} />\n    case TagType.METADATA:\n      return <MetaDataIcon className={className} onClick={onClick} />\n    default:\n      return null\n  }\n}\n","import { useCallback, useState } from 'react'\nimport { Modifier } from '../data/types'\n\nconst order = [Modifier.PLUS, Modifier.MINUS, Modifier.OR]\n\n/**\n * Small utility hook to abstract the rotating modifier away\n */\nexport default function useModifier(initialValue: Modifier = Modifier.PLUS): [Modifier, () => void] {\n  const [modifier, setModifier] = useState(initialValue)\n\n  const nextModifier = useCallback(() => {\n    const currentIndex = order.indexOf(modifier)\n    const nextIndex = currentIndex + 1\n\n    // make the value rotate\n    setModifier(order[nextIndex % order.length])\n  }, [modifier])\n\n  return [modifier, nextModifier]\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TagType } from '../../data/types'\nimport TypeIcon from '../../icons/TypeIcon'\nimport { formatCount, formatTagname } from '../../misc/formatting'\n\ninterface EntryProps {\n  name: string\n  posts: number\n  types: TagType[]\n  onClick: MouseEventHandler\n}\n\nconst EntryWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 48px 1fr auto;\n    min-height: ${theme.dimensions.blockHeight}; // COMPAT: Kiwi Browser\n    height: ${theme.dimensions.blockHeight};\n    background: white;\n    align-items: center;\n  `\n)\n\nconst Name = styled.span`\n  grid-column: 2/3;\n`\n\nconst Count = styled.span(\n  ({ theme }) => css`\n    grid-column: 3/4;\n    padding-right: ${theme.dimensions.bigSpacing};\n  `\n)\n\nconst Icon = styled.div`\n  grid-column: 1/2;\n  text-align: center;\n`\n\nexport default function DropdownListEntry(props: EntryProps) {\n  const { name, posts, types, onClick } = props\n\n  return (\n    <EntryWrapper onClick={onClick}>\n      <Icon>\n        <TypeIcon types={types} />\n      </Icon>\n      <Name>{formatTagname(name)}</Name>\n      <Count>{formatCount(posts)} posts</Count>\n    </EntryWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport DropdownListEntry from './DropdownListEntry'\nimport TagDataClass from '../../data/Tag'\nimport { TagType } from '../../data/types'\nimport { ThemeType } from '../../misc/theme'\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\n\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\n  if (tagSelector) {\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector\n\n    return css`\n      position: absolute;\n      top: ${offsetTop + clientHeight}px;\n      left: ${offsetLeft}px;\n      width: ${clientWidth}px;\n      max-height: 50vh;\n    `\n  }\n\n  return ''\n}\n\nconst ListWrapper = styled.div(\n  ({ theme, tagSelectorRef }: { tagSelectorRef: HTMLDivElement | null; theme: ThemeType }) => css`\n    ${flexColumn()}\n    ${flexColumnGap('1px')}\n    ${sizeAndPosition(tagSelectorRef)};\n    background: lightgrey;\n    box-sizing: border-box;\n    border: ${theme.dimensions.borderWidth} ${theme.colors.accentColor} solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    color: black;\n    overflow-y: auto;\n    z-index: 3;\n\n    ::-webkit-scrollbar {\n      width: 8px;\n\n      :hover {\n        background: ${theme.colors.layerBg};\n      }\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: ${theme.colors.backgroundColor2};\n      border-left: 1px lightgray solid;\n    }\n\n    /* Handle */\n    :hover {\n      ::-webkit-scrollbar {\n        background: ${theme.colors.backgroundColor}20;\n      }\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: ${theme.colors.backgroundColor}40;\n      border-radius: 1000px;\n\n      :hover {\n        background: ${theme.colors.backgroundColor}30;\n      }\n    }\n  `\n)\n\ninterface DropdownListProps {\n  tagSelectorRef: HTMLDivElement | null\n  entries: {\n    name: string\n    posts: number\n    types: TagType[]\n  }[]\n  onClick: (entry: TagDataClass) => void\n}\n\nexport default function DropdownList(props: DropdownListProps) {\n  const { tagSelectorRef, entries, onClick } = props\n\n  return entries && entries.length > 0 ? (\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\n      {entries.map((entry) => (\n        <DropdownListEntry key={entry.name} onClick={() => onClick(entry)} {...entry} />\n      ))}\n    </ListWrapper>\n  ) : null\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Input = styled.input(\n  (props) => css`\n    width: 100%;\n    border: none;\n    outline: none;\n    background: none;\n    font-size: ${props.theme.fontSizes.content};\n    border-top: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n    border-bottom: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n  `\n)\n\ninterface TagInputProps {\n  value: string\n  setValue: (newValue: string) => void\n  onSubmit: () => void\n}\n\nexport default function TagInput(props: TagInputProps) {\n  const { value, setValue, onSubmit } = props\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      setValue(event.target.value)\n    },\n    [setValue]\n  )\n\n  const handleEnter: KeyboardEventHandler = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        onSubmit()\n      }\n    },\n    [onSubmit]\n  )\n\n  return (\n    <Input\n      id='tag-input'\n      value={value}\n      onChange={handleChange}\n      onKeyDown={handleEnter}\n      placeholder='Search for tags'\n      aria-label='Search'\n    />\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport useThrottledEffect from 'use-throttled-effect'\nimport { TagLike } from '../../data/types'\nimport useModifier from '../../hooks/useModifier'\nimport api from '../../misc/api'\nimport { serializeTagname } from '../../misc/formatting'\nimport { prepareTag } from '../../misc/prepare'\nimport { ThemeType } from '../../misc/theme'\nimport { addTag } from '../../redux/actions'\nimport { selectTagSuggestionCount } from '../../redux/selectors'\nimport { AddButton, ModifierButton } from '../common/Buttons'\nimport DropdownList from './DropdownList'\nimport TagInput from './TagInput'\n\nconst TagSelectorWrapper = styled.div(\n  (props: { closed: boolean; ref: (ref: HTMLInputElement) => void; theme: ThemeType }) => css`\n    display: flex;\n    background: white;\n    ${props.closed\n      ? css`\n          border-radius: ${props.theme.dimensions.borderRadius};\n        `\n      : css`\n          border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\n\n          > ${AddButton} {\n            border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\n          }\n\n          > ${ModifierButton} {\n            border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\n          }\n        `}\n  `\n)\n\nexport default function TagSelector() {\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState<TagLike[]>([])\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(null)\n  const [modifier, nextModifier] = useModifier()\n\n  const tagSuggestionsCount = useSelector(selectTagSuggestionCount)\n\n  const activateTag = useCallback(\n    ({ name, posts, types }) => {\n      dispatch(\n        addTag(\n          prepareTag({\n            name,\n            types,\n            modifier,\n            count: posts,\n          })\n        )\n      )\n\n      setValue('')\n      setSuggestions([])\n    },\n    [dispatch, modifier]\n  )\n\n  useThrottledEffect(\n    async () => {\n      if (!value) {\n        setSuggestions([])\n        return\n      }\n\n      const newSuggestions = await api.getTags(serializeTagname(value), tagSuggestionsCount)\n\n      setSuggestions(newSuggestions)\n    },\n    300,\n    [tagSuggestionsCount, value]\n  )\n\n  const onAddClick = useCallback(() => {\n    if (value && value.trim()) {\n      const sanitizedTagname = serializeTagname(value)\n      const suggestion = suggestions.find((s) => s.name === sanitizedTagname) || {}\n      activateTag({ ...suggestion, name: value })\n    }\n  }, [value, activateTag, suggestions])\n\n  return (\n    <TagSelectorWrapper ref={setTagSelectorRef} closed={suggestions.length === 0}>\n      <ModifierButton onClick={nextModifier} aria-label='Tag Modifier'>\n        {modifier}\n      </ModifierButton>\n      <TagInput value={value} setValue={setValue} onSubmit={onAddClick} />\n      <AddButton onClick={onAddClick} aria-label='Add Tag'>\n        Add\n      </AddButton>\n      {suggestions.length > 0 && (\n        <DropdownList tagSelectorRef={tagSelectorRef} entries={suggestions} onClick={activateTag} />\n      )}\n    </TagSelectorWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport FlexPair from './FlexPair'\nimport Toggle from './Toggle'\n\ninterface LabeledToggleProps {\n  children: JSX.Element | string\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function LabeledToggle(props: LabeledToggleProps) {\n  const { children, value, onToggle } = props\n\n  return (\n    <FlexPair>\n      <Toggle value={value} onToggle={onToggle} />\n      <span>{children}</span>\n    </FlexPair>\n  )\n}\n","import React, { ChangeEventHandler, useCallback, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport LabeledToggle from '../common/LabeledToggle'\nimport { ThemeType } from '../../misc/theme'\nimport { PreferenceKey } from '../../data/types'\nimport usePreference from '../../hooks/usePreference'\nimport { gridWithGap } from '../../styled/mixins'\n\nconst OptionsWrapper = styled.div`\n  ${gridWithGap}\n`\n\nconst StyledInput = styled.input(\n  (props: { value: string; theme: ThemeType }) => css`\n    background: none;\n    border: none;\n    outline: none;\n    color: ${props.theme.colors.accentColor};\n    width: ${0.65 * props.value.length}em;\n    text-align: right;\n    font-size: ${props.theme.fontSizes.content};\n    margin: -1px 0.2em 0 0.2em;\n\n    ::-webkit-inner-spin-button,\n    ::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    -moz-appearance: textfield;\n  `\n)\n\nexport default function Options() {\n  const [rated, setRated] = usePreference(PreferenceKey.RATED)\n  const [ratedThreshold, setRatedThreshold] = usePreference(PreferenceKey.RATEDThreshold)\n  const toggleRated = useCallback(() => setRated(!rated), [rated, setRated])\n\n  const [ratedThresholdInternal, setRatedThresholdInternal] = useState(ratedThreshold ? ratedThreshold.toString() : '1')\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => setRatedThresholdInternal(event.target.value),\n    []\n  )\n  const onBlur = useCallback(() => setRatedThreshold(Number(ratedThresholdInternal)), [\n    ratedThresholdInternal,\n    setRatedThreshold,\n  ])\n\n  return (\n    <OptionsWrapper>\n      <LabeledToggle value={rated} onToggle={toggleRated}>\n        {rated ? (\n          <div style={{ display: 'flex' }}>\n            <span>More than</span>\n            <StyledInput type='text' value={ratedThresholdInternal} onChange={onChange} onBlur={onBlur} />\n            <span>likes</span>\n          </div>\n        ) : (\n          'Only show Rated Posts'\n        )}\n      </LabeledToggle>\n    </OptionsWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import { faDeviantart, faDiscord, faGithub, faPatreon, faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport {\r\n  faCaretDown,\r\n  faCodeBranch,\r\n  faCopyright,\r\n  faDownload,\r\n  faExpand,\r\n  faExternalLinkAlt,\r\n  faHashtag,\r\n  faHeart,\r\n  faInfoCircle,\r\n  faLink,\r\n  faPen,\r\n  faRegistered,\r\n  faTimes,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\n\r\nexport const CharacterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faUser,\r\n})``\r\n\r\nexport const ArtistIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPen,\r\n})``\r\n\r\nexport const CopyrightIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCopyright,\r\n})``\r\n\r\nexport const MetaDataIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faInfoCircle,\r\n})``\r\n\r\nexport const CloseIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTimes,\r\n})``\r\n\r\nexport const ExpandIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExpand,\r\n})``\r\n\r\nexport const ExternalLinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExternalLinkAlt,\r\n})``\r\n\r\nexport const DownloadIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDownload,\r\n})``\r\n\r\nexport const SourceIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHashtag,\r\n})``\r\n\r\nexport const RatingIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faRegistered,\r\n})``\r\n\r\nexport const HeartIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHeart,\r\n})``\r\n\r\nexport const LinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faLink,\r\n})``\r\n\r\nexport const ArrowDown = styled(FontAwesomeIcon).attrs({\r\n  icon: faCaretDown,\r\n})``\r\n\r\nexport const CodeBranchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCodeBranch,\r\n})``\r\n\r\nexport const GithubIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGithub,\r\n})``\r\n\r\nexport const PatreonIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPatreon,\r\n})``\r\n\r\nexport const TwitterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTwitter,\r\n})``\r\n\r\nexport const DeviantArtIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDeviantart,\r\n})``\r\n\r\nexport const DiscordIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDiscord,\r\n})``\r\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n"],"sourceRoot":""}