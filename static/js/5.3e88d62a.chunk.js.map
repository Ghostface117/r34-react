{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/use-throttled-effect/lib/index.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"names":["module","exports","instance","Constructor","TypeError","__esModule","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_typeof","assertThisInitialized","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_extends","assign","arguments","source","hasOwnProperty","apply","this","useThrottledEffect","undefined","_react","require","_toConsumableArray","arr","Array","isArray","arr2","from","callback","delay","deps","lastRan","useRef","Date","now","useEffect","handler","setTimeout","current","clearTimeout","concat","default","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","e","className","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","len","arrayLikeToArray","minLen","n","toString","slice","name","test","Symbol","iterator","_setPrototypeOf","p","sourceKeys","keys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","err","componentWillMount","state","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","Promise","resolve","then","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"mappings":"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","file":"static/js/5.3e88d62a.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThrottledEffect = undefined;\n\nvar _react = require('react');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar useThrottledEffect = exports.useThrottledEffect = function useThrottledEffect(callback, delay) {\n  var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  var lastRan = (0, _react.useRef)(Date.now());\n\n  (0, _react.useEffect)(function () {\n    var handler = setTimeout(function () {\n      if (Date.now() - lastRan.current >= delay) {\n        callback();\n        lastRan.current = Date.now();\n      }\n    }, delay - (Date.now() - lastRan.current));\n\n    return function () {\n      clearTimeout(handler);\n    };\n  }, [delay].concat(_toConsumableArray(deps)));\n};\n\nexports.default = useThrottledEffect;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"sourceRoot":""}