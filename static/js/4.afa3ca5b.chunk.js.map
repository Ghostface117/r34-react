{"version":3,"sources":["components/common/Centered.tsx","components/common/Select.tsx","components/common/Setting.tsx","components/pages/Settings.tsx"],"names":["Centered","styled","div","SelectWrapper","select","theme","css","dimensions","borderWidth","colors","accentColor","backgroundColor2","spacing","borderRadius","blockHeight","Option","option","Select","props","options","value","onChange","Object","entries","map","optionKey","optionValue","Grid","Title","SmallTitle","Body","Faded","Control","Setting","title","description","children","layouts","ResultLayout","INFINITE_COLUMN","PAGES","SettingsSurface","Surface","hugeSpacing","Settings","usePreference","RESULTS_LAYOUT","resultsLayout","setResultsLayout","PAGE_SIZE","pageSize","setPageSize","ORIGINALS","originals","setOriginals","PRELOAD_VIDEOS","preloadVideos","setPreloadVideos","TAG_SUGGESTIONS_COUNT","tagSuggestionsCount","setTagSuggestionsCount","togglePreloadVideos","useCallback","toggleOriginals","onChangeResultsLayout","event","target","reset","localStorage","clear","window","location","reload","FlexColumn","Header","Toggle","onToggle","onSubmit","onClick","color","useTheme","subduedText"],"mappings":"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","file":"static/js/4.afa3ca5b.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nconst Centered = styled.div`\n  margin: auto;\n`\n\nexport default Centered\n","import React, { ChangeEventHandler } from \"react\"\nimport styled, { css } from \"styled-components\"\n\nconst SelectWrapper = styled.select(\n  ({ theme }) => css`\n    width: 100px;\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    background-color: ${theme.colors.backgroundColor2};\n    padding: ${theme.dimensions.spacing};\n    border-radius: ${theme.dimensions.borderRadius};\n    height: ${theme.dimensions.blockHeight};\n  `\n)\n\nconst Option = styled.option(\n  ({ theme }) => css`\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    background-color: ${theme.colors.backgroundColor2};\n    padding: ${theme.dimensions.spacing};\n    border-radius: ${theme.dimensions.borderRadius};\n    text-align: center;\n  `\n)\n\ninterface SelectProps {\n  options: Record<string, string>\n  value: string\n  onChange: ChangeEventHandler\n}\n\nexport default function Select(props: SelectProps) {\n  const { options, value, onChange } = props\n  return (\n    <SelectWrapper value={value} onChange={onChange}>\n      {Object.entries(options).map(([optionKey, optionValue]) => (\n        <Option key={optionKey} value={optionKey}>\n          {optionValue}\n        </Option>\n      ))}\n    </SelectWrapper>\n  )\n}\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { SmallTitle, Faded } from \"./Text\"\n\nconst Grid = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: auto auto;\n    gap: ${theme.dimensions.spacing};\n  `\n)\n\nconst Title = styled(SmallTitle)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 1/2;\n  `\n)\n\nconst Body = styled(Faded)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 2/3;\n  `\n)\n\nconst Control = styled.div(\n  ({ theme }) => css`\n    grid-column: 2/3;\n    grid-row: 1/3;\n  `\n)\n\ninterface SettingProps {\n  title: string\n  description: string\n  children: JSX.Element\n}\n\nexport default function Setting({ title, description, children }: SettingProps) {\n  return (\n    <Grid>\n      <Title>{title}</Title>\n      <Body>{description}</Body>\n      <Control>{children}</Control>\n    </Grid>\n  )\n}\n","import React, { useCallback } from \"react\"\r\nimport styled, { css, useTheme } from \"styled-components\"\r\nimport {\r\n  ORIGINALS,\r\n  PAGE_SIZE,\r\n  PRELOAD_VIDEOS,\r\n  ResultLayout,\r\n  RESULTS_LAYOUT,\r\n  TAG_SUGGESTIONS_COUNT,\r\n} from \"../../data/types\"\r\nimport usePreference from \"../../hooks/usePreference\"\r\nimport { CodeBranchIcon } from \"../../icons/Icons\"\r\nimport { ThemeType } from \"../../misc/theme\"\r\nimport { BlockButton } from \"../common/Buttons\"\r\nimport Centered from \"../common/Centered\"\r\nimport FlexColumn, { FlexColumnWithSpacing } from \"../common/FlexColumn\"\r\nimport { HorizontalLine } from \"../common/Lines\"\r\nimport Select from \"../common/Select\"\r\nimport Setting from \"../common/Setting\"\r\nimport { SmallNumberInput } from \"../common/SmallInput\"\r\nimport Surface from \"../common/Surface\"\r\nimport { Faded, Title } from \"../common/Text\"\r\nimport Toggle from \"../common/Toggle\"\r\nimport Header from \"../features/Header\"\r\n\r\nconst layouts = {\r\n  [ResultLayout.INFINITE_COLUMN]: \"Infinite\",\r\n  [ResultLayout.PAGES]: \"Pages\",\r\n}\r\n\r\nconst SettingsSurface = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    gap: ${theme.dimensions.hugeSpacing};\r\n  `\r\n)\r\n\r\nexport default function Settings() {\r\n  const [resultsLayout, setResultsLayout] = usePreference(RESULTS_LAYOUT)\r\n  const [pageSize, setPageSize] = usePreference(PAGE_SIZE)\r\n  const [originals, setOriginals] = usePreference(ORIGINALS)\r\n  const [preloadVideos, setPreloadVideos] = usePreference(PRELOAD_VIDEOS)\r\n  const [tagSuggestionsCount, setTagSuggestionsCount] = usePreference(TAG_SUGGESTIONS_COUNT)\r\n\r\n  const togglePreloadVideos = useCallback(() => setPreloadVideos(!preloadVideos), [preloadVideos, setPreloadVideos])\r\n  const toggleOriginals = useCallback(() => setOriginals(!originals), [originals, setOriginals])\r\n\r\n  const onChangeResultsLayout = useCallback((event) => setResultsLayout(event.target.value), [setResultsLayout])\r\n\r\n  const reset = useCallback(() => {\r\n    localStorage.clear()\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <FlexColumnWithSpacing>\r\n        <SettingsSurface>\r\n          <Title>General</Title>\r\n          <HorizontalLine />\r\n          <Setting title=\"Results Layout\" description=\"Choose how your results are displayed.\">\r\n            <Select options={layouts} value={resultsLayout} onChange={onChangeResultsLayout} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title=\"Preload Videos\"\r\n            description=\"Start loading videos immediately instead of just-in-time. This can improve the viewing experience but will consume a LOT of data. Only use with WIFI.\"\r\n          >\r\n            <Toggle value={preloadVideos} onToggle={togglePreloadVideos} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title=\"Load original sizes\"\r\n            description=\"Display images and videos at their original resolution. This will consume more data but provides a nicer experience.\"\r\n          >\r\n            <Toggle value={originals} onToggle={toggleOriginals} />\r\n          </Setting>\r\n          <Setting\r\n            title=\"Number of Tag suggestions\"\r\n            description=\"Controls the number of tags displayed when searching. Increase this when searching for niche tags.\"\r\n          >\r\n            <SmallNumberInput value={tagSuggestionsCount} onSubmit={setTagSuggestionsCount} />\r\n          </Setting>\r\n          <Setting title=\"Page size\" description=\"Controls the number of posts loaded at once.\">\r\n            <SmallNumberInput value={pageSize} onSubmit={setPageSize} />\r\n          </Setting>\r\n          <Title>Developer</Title>\r\n          <HorizontalLine />\r\n          <BlockButton onClick={reset}>Reset Application</BlockButton>\r\n        </SettingsSurface>\r\n        <Centered>\r\n          <CodeBranchIcon color={(useTheme() as ThemeType).colors.subduedText} /> <Faded>Version 2.3.1</Faded>\r\n        </Centered>\r\n      </FlexColumnWithSpacing>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}