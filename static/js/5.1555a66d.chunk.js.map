{"version":3,"sources":["components/common/Toggle.tsx","components/common/SmallInput.tsx","components/common/Select.tsx","components/common/Setting.tsx","components/widgets/SignIn.tsx","components/preferences/PrefAccount.tsx","components/preferences/PrefAutoPlay.tsx","components/preferences/PrefCorsProxy.tsx","components/preferences/PrefHideSeenPosts.tsx","components/preferences/PrefLoadOriginals.tsx","components/preferences/PrefMetadata.tsx","components/preferences/PrefPageSize.tsx","components/preferences/PrefPreloadVideos.tsx","components/preferences/PrefResultsLayout.tsx","components/preferences/PrefShowComments.tsx","components/common/SuperTagEntry.tsx","components/preferences/PrefSupertags.tsx","components/preferences/PrefTagSuggestions.tsx","components/preferences/PrefTheme.tsx","components/common/StatusImage.tsx","components/widgets/FeatureDetection.tsx","components/widgets/ResetSeenPostsButton.tsx","components/pages/Settings.tsx"],"names":["Track","styled","div","props","css","defaultBorder","theme","colors","backgroundColor","timings","longTransitionTime","Thumb","supportsAspectRatio","value","accentColor","backgroundColor2","Toggle","onToggle","onClick","StyledInput","input","defaultBlock","SmallNumberInput","onSubmit","className","useState","toString","internalValue","setInternalValue","useEffect","onChange","useCallback","event","target","onBlur","Number","onKeyDown","key","type","Wrapper","dimensions","blockHeight","StyledSelect","select","Option","option","Select","options","Object","entries","map","optionKey","optionValue","Grid","gridWithGap","Title","SmallTitle","Body","Faded","Control","Setting","title","description","children","FlexRow","flexRowWithGap","ProfilePicture","img","borderRadius","SignIn","useFirebaseAuthState","isSignedIn","user","handleSignIn","signIn","handleSignOut","signOut","name","displayName","email","picture","photoURL","FlexColumn","src","alt","PrefAccount","PrefAutoPlay","usePreference","PreferenceKey","AUTO_PLAY","autoPlay","setAutoPlay","toggleAutoPlay","PrefCorsProxy","USE_CORS_PROXY","useCorsProxy","setUseCorsProxy","toggleUseCorsProxy","PrefHideSeenPosts","HIDE_SEEN","hideSeen","setHideSeen","toggleHideSeen","PrefLoadOriginals","ORIGINALS","originals","setOriginals","toggleOriginals","PrefMetadata","SHOW_METADATA","showMetadata","setShowMetadata","toggleShowMetadata","PrefPageSize","PAGE_SIZE","pageSize","setPageSize","PrefPreloadVideos","PRELOAD_VIDEOS","preloadVideos","setPreloadVideos","togglePreloadVideos","layouts","ResultLayout","INFINITE_COLUMN","PAGES","PrefResultsLayout","RESULTS_LAYOUT","resultsLayout","setResultsLayout","onChangeResultsLayout","PrefShowComments","SHOW_COMMENTS","showComments","setShowComments","toggleShowComments","flexColumnWithGap","gutter","layerBgHighlight","Row","SuperTagEntry","tags","useToggle","isOpen","toggleOpen","remove","removeSupertag","addTag","tag","newTags","modifier","setTagsOfSupertag","removeTag","tagObjects","useMemo","reduce","result","TagDataClass","keys","length","TagSelector","TagList","detailed","onTagClick","PrefSupertags","supertags","useSupertags","dispatch","useDispatch","openSupertagModal","openModal","ModalIds","CREATE_SUPERTAG","details","PrefTagSuggestions","TAG_SUGGESTIONS_COUNT","tagSuggestionsCount","setTagSuggestionsCount","themes","ThemeId","DARK","LIGHT","COFFEE","ELECTRIC","PrefTheme","THEME_ID","themeId","setThemeId","changeTheme","Positive","SuccessIcon","attrs","color","positive","Negative","FailedIcon","negative","StatusImage","FeatureList","FeatureDetection","supportsGap","supportsFlexGap","supportsObjectFit","supportsFullscreen","ResetSeenPostsButton","onResetSeenPosts","resetSeenPosts","SettingsSurface","Surface","hugeSpacing","gap","VersionWrapper","SettingsColumn","FlexColumnWithSpacing","Settings","document","useTheme","versionString","getVersionString","Header","ResetButton","subduedText"],"mappings":"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","file":"static/js/5.1555a66d.chunk.js","sourcesContent":["import React, { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: DefaultTheme }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst StyledInput = styled.input(\n  ({ theme }) => css`\n    width: 70px;\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n    text-align: left;\n  `\n)\n\ninterface SmallInputProps<T> {\n  value: T\n  onSubmit: (value: T) => void\n  className?: string\n}\n\nexport function SmallTextInput(props: SmallInputProps<string>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value)\n\n  useEffect(() => {\n    setInternalValue(value)\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(internalValue)\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(internalValue)\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='text'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n\nexport function SmallNumberInput(props: SmallInputProps<number>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value.toString())\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      setInternalValue(value.toString())\n    }\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(Number(internalValue))\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(Number(internalValue))\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='number'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n","import React, { ChangeEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst Wrapper = styled.div(\n  ({ theme }) => css`\n    width: 100px;\n    height: ${theme.dimensions.blockHeight};\n  `\n)\n\nconst StyledSelect = styled.select(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    ${defaultBlock({ theme })}\n    width: 100%;\n    height: 100%;\n    background-color: ${theme.colors.backgroundColor2};\n  `\n)\n\nconst Option = styled.option(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n  `\n)\n\ninterface SelectProps {\n  options: Record<string, string>\n  value: string\n  onChange: ChangeEventHandler\n}\n\nexport default function Select(props: SelectProps) {\n  const { options, value, onChange } = props\n\n  return (\n    <Wrapper>\n      <StyledSelect value={value} onChange={onChange}>\n        {Object.entries(options).map(([optionKey, optionValue]) => (\n          <Option key={optionKey} value={optionKey}>\n            {optionValue}\n          </Option>\n        ))}\n      </StyledSelect>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { gridWithGap } from '../../styled/mixins'\nimport { SmallTitle, Faded } from './Text'\n\nconst Grid = styled.div`\n  ${gridWithGap}\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto auto;\n`\n\nconst Title = styled(SmallTitle)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 1/2;\n  `\n)\n\nconst Body = styled(Faded)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 2/3;\n  `\n)\n\nconst Control = styled.div(\n  ({ theme }) => css`\n    grid-column: 2/3;\n    grid-row: 1/3;\n  `\n)\n\ninterface SettingProps {\n  title: string\n  description: string\n  children: React.ReactNode\n}\n\nexport default function Setting({ title, description, children }: SettingProps) {\n  return (\n    <Grid>\n      <Title>{title}</Title>\n      <Body>{description}</Body>\n      <Control>{children}</Control>\n    </Grid>\n  )\n}\n","import { useCallback } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { signIn, signOut } from '../../firebase'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { GoogleIcon, SignOutIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap } from '../../styled/mixins'\r\nimport { RedButton } from '../common/Buttons'\r\nimport FlexColumn from '../common/FlexColumn'\r\n\r\nconst FlexRow = styled.div`\r\n  ${flexRowWithGap}\r\n`\r\n\r\nconst ProfilePicture = styled.img(\r\n  ({ theme }) => css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    width: ${theme.dimensions.blockHeight};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n)\r\n\r\nexport default function SignIn() {\r\n  const [isSignedIn, user] = useFirebaseAuthState()\r\n  const handleSignIn = useCallback(signIn, [])\r\n  const handleSignOut = useCallback(signOut, [])\r\n\r\n  if (isSignedIn) {\r\n    const name = user?.displayName || user?.email || ''\r\n    const picture = user?.photoURL || ''\r\n\r\n    return (\r\n      <FlexColumn>\r\n        <FlexRow>\r\n          <ProfilePicture src={picture} alt={name} title={name} />\r\n          <RedButton onClick={handleSignOut}>\r\n            <SignOutIcon />\r\n            <span>Sign Out</span>\r\n          </RedButton>\r\n        </FlexRow>\r\n      </FlexColumn>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RedButton onClick={handleSignIn}>\r\n      <GoogleIcon />\r\n      <span>Sign In</span>\r\n    </RedButton>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Setting from '../common/Setting'\r\nimport SignIn from '../widgets/SignIn'\r\n\r\nexport default function PrefAccount() {\r\n  return (\r\n    <Setting\r\n      title='Account'\r\n      description='Sign in to save your settings across devices. Some settings require you to be signed in because they use your data.'\r\n    >\r\n      <SignIn />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefAutoPlay() {\r\n  const [autoPlay, setAutoPlay] = usePreference(PreferenceKey.AUTO_PLAY)\r\n  const toggleAutoPlay = useCallback(() => setAutoPlay(!autoPlay), [autoPlay, setAutoPlay])\r\n\r\n  return (\r\n    <Setting\r\n      title='Auto-play'\r\n      description='Start videos automatically once they become visible. This will use more data.'\r\n    >\r\n      <Toggle value={autoPlay} onToggle={toggleAutoPlay} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefCorsProxy() {\r\n  const [useCorsProxy, setUseCorsProxy] = usePreference(PreferenceKey.USE_CORS_PROXY)\r\n  const toggleUseCorsProxy = useCallback(() => setUseCorsProxy(!useCorsProxy), [useCorsProxy, setUseCorsProxy])\r\n\r\n  return (\r\n    <Setting\r\n      title='Use CORS Proxy'\r\n      description='Request images via the built in cors proxy. Normally, this should just make loading times worse. But I have seen the opposite.'\r\n    >\r\n      <Toggle value={useCorsProxy} onToggle={toggleUseCorsProxy} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefHideSeenPosts() {\r\n  const [hideSeen, setHideSeen] = usePreference(PreferenceKey.HIDE_SEEN)\r\n  const toggleHideSeen = useCallback(() => setHideSeen(!hideSeen), [hideSeen, setHideSeen])\r\n\r\n  return (\r\n    <Setting\r\n      title='Hide seen posts [NOT WORKING]'\r\n      description='Enabling this option will hide all posts you have seen before. Perfect if you are frequently browsing the same tags or sorting by score.'\r\n    >\r\n      <Toggle value={hideSeen} onToggle={toggleHideSeen} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefLoadOriginals() {\r\n  const [originals, setOriginals] = usePreference(PreferenceKey.ORIGINALS)\r\n  const toggleOriginals = useCallback(() => setOriginals(!originals), [originals, setOriginals])\r\n  return (\r\n    <Setting\r\n      title='Load original sizes'\r\n      description='Display images and videos at their original resolution. This will consume more data but provides a nicer experience.'\r\n    >\r\n      <Toggle value={originals} onToggle={toggleOriginals} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefMetadata() {\r\n  const [showMetadata, setShowMetadata] = usePreference(PreferenceKey.SHOW_METADATA)\r\n  const toggleShowMetadata = useCallback(() => setShowMetadata(!showMetadata), [showMetadata, setShowMetadata])\r\n\r\n  return (\r\n    <Setting\r\n      title='Show post metadata'\r\n      description=\"Posts display more data in their details. Mainly for developing purposes but maybe it's useful to someone.\"\r\n    >\r\n      <Toggle value={showMetadata} onToggle={toggleShowMetadata} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport { SmallNumberInput } from '../common/SmallInput'\r\n\r\nexport default function PrefPageSize() {\r\n  const [pageSize, setPageSize] = usePreference(PreferenceKey.PAGE_SIZE)\r\n\r\n  return (\r\n    <Setting title='Page size' description='Controls the number of posts loaded at once.'>\r\n      <SmallNumberInput value={pageSize} onSubmit={setPageSize} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefPreloadVideos() {\r\n  const [preloadVideos, setPreloadVideos] = usePreference(PreferenceKey.PRELOAD_VIDEOS)\r\n  const togglePreloadVideos = useCallback(() => setPreloadVideos(!preloadVideos), [preloadVideos, setPreloadVideos])\r\n\r\n  return (\r\n    <Setting\r\n      title='Preload Videos'\r\n      description='Start loading videos immediately instead of just-in-time. This can improve the viewing experience but will consume a LOT of data. Only use with WIFI.'\r\n    >\r\n      <Toggle value={preloadVideos} onToggle={togglePreloadVideos} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { ResultLayout, PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Select from '../common/Select'\r\nimport Setting from '../common/Setting'\r\n\r\nconst layouts = {\r\n  [ResultLayout.INFINITE_COLUMN]: 'Infinite',\r\n  [ResultLayout.PAGES]: 'Pages',\r\n}\r\n\r\nexport default function PrefResultsLayout() {\r\n  const [resultsLayout, setResultsLayout] = usePreference(PreferenceKey.RESULTS_LAYOUT)\r\n  const onChangeResultsLayout = useCallback((event) => setResultsLayout(event.target.value), [setResultsLayout])\r\n\r\n  return (\r\n    <Setting title='Results Layout' description='Choose how your results are displayed.'>\r\n      <Select options={layouts} value={resultsLayout} onChange={onChangeResultsLayout} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport Toggle from '../common/Toggle'\r\n\r\nexport default function PrefShowComments() {\r\n  const [showComments, setShowComments] = usePreference(PreferenceKey.SHOW_COMMENTS)\r\n  const toggleShowComments = useCallback(() => setShowComments(!showComments), [showComments, setShowComments])\r\n\r\n  return (\r\n    <Setting\r\n      title='Show comments'\r\n      description=\"If there are comments on a post, they will appear in the details. They can be a bit weird though, that's why they are disabled by default.\"\r\n    >\r\n      <Toggle value={showComments} onToggle={toggleShowComments} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport TagDataClass from '../../data/TagDataClass'\r\nimport { Modifier } from '../../data/types'\r\nimport { removeSupertag, setTagsOfSupertag } from '../../firebase'\r\nimport { SupertagDetails } from '../../firebase/types'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { CloseIcon, SupertagIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexColumnWithGap, gridWithGap } from '../../styled/mixins'\r\nimport TagList from '../tag/TagList'\r\nimport TagSelector from '../tagSelector/TagSelector'\r\nimport { Faded } from './Text'\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnWithGap}\r\n\r\n  padding: ${(props) => props.theme.dimensions.gutter};\r\n\r\n  :not(:last-child) {\r\n    border-bottom: solid gray 1px;\r\n  }\r\n\r\n  :active {\r\n    background: ${(props) => props.theme.colors.layerBgHighlight};\r\n  }\r\n`\r\n\r\nconst Row = styled.div`\r\n  ${gridWithGap}\r\n  grid-template-columns: auto auto 1fr auto;\r\n  grid-template-rows: 1fr auto;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  > :first-child {\r\n    place-items: center;\r\n    grid-area: 1/1/3/2;\r\n  }\r\n  > :nth-child(2) {\r\n    grid-area: 1/2/2/3;\r\n  }\r\n  > :nth-child(3) {\r\n    grid-area: 1/3/2/4;\r\n  }\r\n  > :nth-child(4) {\r\n    grid-area: 2/2/3/4;\r\n  }\r\n  > :nth-child(5) {\r\n    grid-area: 1/4/3/5;\r\n  }\r\n`\r\n\r\ninterface SuperTagEntryProps extends SupertagDetails {\r\n  name: string\r\n}\r\n\r\nexport default function SuperTagEntry(props: SuperTagEntryProps) {\r\n  const { name, description, tags } = props\r\n\r\n  const [isOpen, toggleOpen] = useToggle()\r\n  const remove = useCallback(() => removeSupertag(name), [name])\r\n  const addTag = useCallback(\r\n    (tag: TagDataClass) => {\r\n      const newTags = { ...tags, [tag.name]: tag.modifier as Modifier }\r\n      setTagsOfSupertag(name, newTags)\r\n    },\r\n    [name, tags]\r\n  )\r\n  const removeTag = useCallback(\r\n    (tag: TagDataClass) => {\r\n      const newTags = { ...tags }\r\n      delete newTags[tag.name]\r\n      setTagsOfSupertag(name, newTags)\r\n    },\r\n    [name, tags]\r\n  )\r\n  const tagObjects = useMemo(\r\n    () =>\r\n      Object.entries(tags).reduce((result, [name, modifier]) => {\r\n        result[name] = new TagDataClass(name, [], 0, modifier)\r\n        return result\r\n      }, {} as Record<string, TagDataClass>),\r\n    [tags]\r\n  )\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Row onClick={toggleOpen}>\r\n        <SupertagIcon />\r\n        <span>{name}</span>\r\n        <Faded>{Object.keys(tags).length} tags</Faded>\r\n        <Faded>{description}</Faded>\r\n        <CloseIcon onClick={remove} />\r\n      </Row>\r\n\r\n      {isOpen && (\r\n        <>\r\n          <TagSelector onSubmit={addTag} />\r\n          <TagList tags={tagObjects} detailed={false} onTagClick={removeTag}></TagList>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ModalIds } from '../../data/types'\r\nimport { useSupertags } from '../../firebase'\r\nimport { PlusIcon } from '../../icons/FontAwesomeIcons'\r\nimport { openModal } from '../../redux/actions'\r\nimport { RedButton } from '../common/Buttons'\r\nimport Setting from '../common/Setting'\r\nimport SuperTagEntry from '../common/SuperTagEntry'\r\n\r\nexport default function PrefSupertags() {\r\n  const supertags = useSupertags()\r\n\r\n  const dispatch = useDispatch()\r\n  const openSupertagModal = useCallback(() => dispatch(openModal(ModalIds.CREATE_SUPERTAG)), [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Setting\r\n        title='Supertags'\r\n        description='You can manage your supertags here. To create on sign in and try adding two or more tags to your search. Adding supertag to your search will add all the tags inside instead.'\r\n      >\r\n        <RedButton onClick={openSupertagModal}>\r\n          <PlusIcon /> Add new\r\n        </RedButton>\r\n      </Setting>\r\n\r\n      <div>\r\n        {Object.entries(supertags).map(([name, details]) => (\r\n          <SuperTagEntry key={name} name={name} {...details}></SuperTagEntry>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../common/Setting'\r\nimport { SmallNumberInput } from '../common/SmallInput'\r\n\r\nexport default function PrefTagSuggestions() {\r\n  const [tagSuggestionsCount, setTagSuggestionsCount] = usePreference(PreferenceKey.TAG_SUGGESTIONS_COUNT)\r\n\r\n  return (\r\n    <Setting\r\n      title='Number of Tag suggestions'\r\n      description='Controls the number of tags displayed when searching. Increase this when searching for niche tags.'\r\n    >\r\n      <SmallNumberInput value={tagSuggestionsCount} onSubmit={setTagSuggestionsCount} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { ThemeId, PreferenceKey } from '../../data/types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Select from '../common/Select'\r\nimport Setting from '../common/Setting'\r\n\r\nconst themes = {\r\n  [ThemeId.DARK]: 'Dark',\r\n  [ThemeId.LIGHT]: 'Light',\r\n  [ThemeId.COFFEE]: 'Coffee',\r\n  [ThemeId.ELECTRIC]: 'Electric',\r\n}\r\n\r\nexport default function PrefTheme() {\r\n  const [themeId, setThemeId] = usePreference(PreferenceKey.THEME_ID)\r\n  const changeTheme = useCallback((event) => setThemeId(event.target.value), [setThemeId])\r\n\r\n  return (\r\n    <Setting title='Theme' description='Choose how the app looks.'>\r\n      <Select options={themes} value={themeId} onChange={changeTheme} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FailedIcon, SuccessIcon } from '../../icons/FontAwesomeIcons'\r\n\r\nconst Positive = styled(SuccessIcon).attrs((props) => ({\r\n  color: props.theme.colors.positive,\r\n}))``\r\n\r\nconst Negative = styled(FailedIcon).attrs((props) => ({\r\n  color: props.theme.colors.negative,\r\n}))``\r\n\r\ntype StatusImageProps = {\r\n  value: boolean\r\n}\r\n\r\nexport default function StatusImage(props: StatusImageProps) {\r\n  return props.value ? <Positive /> : <Negative />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  supportsAspectRatio,\r\n  supportsFlexGap,\r\n  supportsFullscreen,\r\n  supportsGap,\r\n  supportsObjectFit,\r\n} from '../../data/browserUtils'\r\nimport { flexColumnWithGap, gutter, borderRadius } from '../../styled/mixins'\r\nimport StatusImage from '../common/StatusImage'\r\nimport { SmallTitle, Faded } from '../common/Text'\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnWithGap}\r\n`\r\n\r\nconst FeatureList = styled.div`\r\n  ${flexColumnWithGap}\r\n  ${gutter}\r\n  ${borderRadius}\r\n  background: ${(props) => props.theme.colors.backgroundColor};\r\n`\r\n\r\nexport default function FeatureDetection() {\r\n  return (\r\n    <Wrapper>\r\n      <SmallTitle>Feature Detection</SmallTitle>\r\n      <FeatureList>\r\n        <Faded>\r\n          <StatusImage value={supportsGap} /> Supports grid-gap\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsFlexGap} /> Supports flex-gap\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsAspectRatio} /> Supports aspect-ratio\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsObjectFit} /> Supports object-fit\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsFullscreen} /> Supports fullscreen\r\n        </Faded>\r\n      </FeatureList>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { resetSeenPosts } from '../../firebase'\r\nimport { UndoIcon } from '../../icons/FontAwesomeIcons'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetSeenPostsButton() {\r\n  const onResetSeenPosts = useCallback(resetSeenPosts, [])\r\n\r\n  return (\r\n    <BlockButton onClick={onResetSeenPosts}>\r\n      <UndoIcon /> Reset seen posts\r\n    </BlockButton>\r\n  )\r\n}\r\n","import styled, { css, useTheme } from 'styled-components'\r\n\r\nimport { getVersionString } from '../../data/utils'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { CodeBranchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap, gap } from '../../styled/mixins'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../common/FlexColumn'\r\nimport { HorizontalLine } from '../common/Lines'\r\nimport Surface from '../common/Surface'\r\nimport { Faded, Title } from '../common/Text'\r\nimport Header from '../features/Header'\r\nimport PrefAccount from '../preferences/PrefAccount'\r\nimport PrefAutoPlay from '../preferences/PrefAutoPlay'\r\nimport PrefCorsProxy from '../preferences/PrefCorsProxy'\r\nimport PrefHideSeenPosts from '../preferences/PrefHideSeenPosts'\r\nimport PrefLoadOriginals from '../preferences/PrefLoadOriginals'\r\nimport PrefMetadata from '../preferences/PrefMetadata'\r\nimport PrefPageSize from '../preferences/PrefPageSize'\r\nimport PrefPreloadVideos from '../preferences/PrefPreloadVideos'\r\nimport PrefResultsLayout from '../preferences/PrefResultsLayout'\r\nimport PrefShowComments from '../preferences/PrefShowComments'\r\nimport PrefSupertags from '../preferences/PrefSupertags'\r\nimport PrefTagSuggestions from '../preferences/PrefTagSuggestions'\r\nimport PrefTheme from '../preferences/PrefTheme'\r\nimport FeatureDetection from '../widgets/FeatureDetection'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport ResetSeenPostsButton from '../widgets/ResetSeenPostsButton'\r\n\r\nconst SettingsSurface = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    ${gap(theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\nconst VersionWrapper = styled.div`\r\n  ${flexRowWithGap}\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n`\r\n\r\nconst SettingsColumn = styled(FlexColumnWithSpacing)`\r\n  flex-grow: 1;\r\n`\r\n\r\nexport default function Settings() {\r\n  document.title = 'R34 React - Settings'\r\n\r\n  const theme = useTheme()\r\n  const versionString = getVersionString()\r\n  const [isSignedIn] = useFirebaseAuthState()\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <SettingsColumn>\r\n        <Title>General</Title>\r\n        <SettingsSurface>\r\n          <PrefResultsLayout />\r\n          <PrefPreloadVideos />\r\n          <PrefLoadOriginals />\r\n          <PrefTagSuggestions />\r\n          <PrefPageSize />\r\n          <PrefShowComments />\r\n        </SettingsSurface>\r\n\r\n        <Title>Account</Title>\r\n        <SettingsSurface>\r\n          <PrefAccount />\r\n          <PrefTheme />\r\n          {isSignedIn && (\r\n            <>\r\n              <PrefSupertags />\r\n              <PrefHideSeenPosts />\r\n            </>\r\n          )}\r\n        </SettingsSurface>\r\n\r\n        <Title>Experimental</Title>\r\n        <SettingsSurface>\r\n          <Faded>\r\n            These features that are still under active development. They might change a lot in the future. Please report\r\n            any bugs you find so I can fix them :)\r\n          </Faded>\r\n          <HorizontalLine />\r\n          <PrefAutoPlay />\r\n        </SettingsSurface>\r\n\r\n        <Title>Developer</Title>\r\n        <SettingsSurface>\r\n          <PrefCorsProxy />\r\n          <PrefMetadata />\r\n          <FeatureDetection />\r\n          <ResetSeenPostsButton />\r\n          <ResetButton />\r\n        </SettingsSurface>\r\n\r\n        <VersionWrapper>\r\n          <CodeBranchIcon color={theme.colors.subduedText} />\r\n          <Faded>{versionString}</Faded>\r\n        </VersionWrapper>\r\n      </SettingsColumn>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}