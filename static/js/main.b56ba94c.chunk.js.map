{"version":3,"sources":["misc/activeTags.js","components/Tag.js","components/Post.js","misc/api.js","misc/converter.js","components/TagSelector.js","pages/Search.js","pages/Help.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["tags","activeTags","add","tagName","push","remove","splice","indexOf","has","console","log","includes","Tag","props","count","react_default","a","createElement","className","onClick","name","TagList","map","tag","Tag_Tag","key","Post","Media","type","media_type","src","media_src","Rating","value","rating","Score","score","Source","source","onTagClick","PostList","posts","post","Post_Post","id","file_url","alt","controls","loop","toUpperCase","startsWith","href","api","getTags","_getTags","Object","asyncToGenerator","regenerator_default","mark","_callee","searchTerm","res","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","_x","apply","arguments","getPosts","_getPosts","_callee2","_context2","t","join","_x2","converter","query","queryString","parse","split","getSuggestionValue","suggestion","renderSuggestion","TagSelector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","method","setState","onSuggestionsFetchRequested","_ref2","then","result","suggestions","onSuggestionsClearRequested","state","onSubmit","preventDefault","_this$state","inputProps","placeholder","dist_default","Component","Search","handleAddTag","bind","assertThisInitialized","handleSearch","handleToggleTag","queryTags","s","location","search","length","toConsumableArray","updatePosts","newTag","some","e","_this2","p","pp","history","src_components_TagSelector","withRouter","NotFound","App","react_router_dom","to","react_router","exact","path","component","Help","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b56ba94c.chunk.js","sourcesContent":["const tags = []\r\n\r\nexport default {\r\n    add(tagName) {\r\n        tags.push(tagName)\r\n    },\r\n\r\n    remove(tagName) {\r\n        tags.splice(tags.indexOf(tagName), 1)\r\n    },\r\n\r\n    has(tagName) {\r\n        console.log(tagName)\r\n        console.log(tags)\r\n        console.log(tags.includes(tagName))\r\n        return tags.includes(tagName)\r\n    }\r\n}","import React from 'react';\r\nimport './Tag.css';\r\nimport activeTags from \"../misc/activeTags\"\r\n\r\nexport default function Tag(props) {\r\n    return !props.count ? (\r\n      <span className={\"badge badge-tag\" + (activeTags.has(props.name) ? ' active' : ' ')} onClick={props.onClick}>{props.name}</span>\r\n    ) : (\r\n        <span className=\"badge badge-tag\" onClick={props.onClick}>{props.name} ({props.count})</span>\r\n    )\r\n}\r\n\r\nexport function TagList(props) {\r\n    return (    \r\n      <div className=\"tag-list\">\r\n        {props.tags.map(tag =>\r\n          <Tag key={\"t_\"+ tag.name} name={tag.name} count={tag.count} onClick={() => props.onClick(tag)}/>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TagList } from './Tag';\r\nimport './Post.css'\r\n\r\nexport default function Post(props) {\r\n    return (\r\n    <li className=\"list-group-item post  gray\">\r\n        <Media type={props.media_type} src={props.media_src}/>\r\n\r\n        <div>\r\n            <div className=\"d-flex justify-content-between info-bar\">\r\n                <Rating value={props.rating}/>\r\n                <Score value={props.score}/>\r\n                <Source value={props.source}/>\r\n            </div>\r\n            <TagList tags={props.tags} onClick={props.onTagClick}/>\r\n        </div>\r\n    </li>\r\n)\r\n}\r\n\r\nexport function PostList(props) {\r\n    return (    \r\n      <ul className=\"list-group list-inline post-list\">\r\n        {props.posts.map((post) => {\r\n            return (<Post key={\"p_\" + post.id} media_type={post.type} media_src={post.file_url} rating={post.rating} score={post.score} source={post.source} tags={post.tags} onTagClick={props.onTagClick}/>)\r\n        })}\r\n      </ul>\r\n    );\r\n}\r\n\r\nfunction Media(props) {\r\n    if(props.type === \"image\")\r\n        return(\r\n            <img src={props.src} alt={props.src} className=\"img-fluid\"/>\r\n        )\r\n    else if(props.type === \"video\")\r\n        return (\r\n            <video controls loop src={props.src} alt={props.src} className=\"img-fluid\"></video>\r\n        )\r\n    else\r\n        return null\r\n}\r\n\r\nfunction Rating(props) {\r\n    return (<span className=\"rating\">{props.value[0].toUpperCase()}</span>)\r\n}\r\n\r\nfunction Score(props){\r\n    return (<span className=\"score\">{props.value}</span>)\r\n}\r\n\r\nfunction Source(props){\r\n    if(props.value)\r\n        if(props.value.startsWith('http'))\r\n            return (<a href={props.value} className=\"source\">Source</a>)\r\n        else\r\n            return (<span className=\"source\">{props.value}</span>)\r\n    else\r\n        return null;\r\n}\r\n","const pageSize = 10,\r\n    api = {\r\n        async getTags(searchTerm) {\r\n            const res = await fetch(\"https://custom-r34-api.herokuapp.com/tags?limit=10&name=\" + searchTerm + \"*&order_by=posts\");\r\n            return await res.json();\r\n        },\r\n\r\n        async getPosts(tags) {\r\n            const res = await fetch(\"https://custom-r34-api.herokuapp.com/posts?limit=\" + pageSize + \"&tags=\" + tags.map(t => t.name).join(\"+\"));\r\n            return await res.json();\r\n        }\r\n    }\r\n\r\nexport default api;","import queryString from 'query-string'\r\n\r\nexport default {\r\n    queryAsTags(query) {\r\n        return queryString.parse(query).tags.split(\" \").map(t => {return {name: t}})\r\n    },\r\n\r\n    tagsAsQuery(tags) {\r\n        return \"?tags=\" + tags.map(t => t.name).join(\"+\")\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport api from \"../misc/api\";\r\nimport './TagSelector.css'\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n\r\nfunction renderSuggestion(suggestion) {\r\n    return ( \r\n        <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass TagSelector extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n      onSubmit: (event) => {\r\n        props.onSubmit(this.state.value)\r\n        event.preventDefault();\r\n      }\r\n    };    \r\n  }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n  \r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    api.getTags(value)\r\n      .then(result => {\r\n        this.setState({\r\n          suggestions:result\r\n        });\r\n      })\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Search for tags\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={this.state.onSubmit} className=\"tag-selector input-group\">\r\n        <Autosuggest \r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps} />\r\n        <div className=\"input-group-append\">\r\n          <input type=\"submit\" value=\"Add\" className=\"btn btn-red\" />\r\n        </div> \r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TagSelector","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TagList } from '../components/Tag';\r\nimport { PostList } from '../components/Post';\r\nimport api from \"../misc/api\";\r\nimport converter from \"../misc/converter\"\r\nimport TagSelector from '../components/TagSelector';\r\nimport activeTags from \"../misc/activeTags\"\r\n\r\nclass Search extends Component { //TODO: data saver => use sample values\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tags: [],\r\n      suggestions: [],\r\n      posts: [],\r\n      searchTerm: \"\"\r\n    }\r\n\r\n    this.handleAddTag = this.handleAddTag.bind(this)\r\n    this.handleSearch = this.handleSearch.bind(this)\r\n    this.handleToggleTag = this.handleToggleTag.bind(this)\r\n  }\r\n\r\n  componentDidMount() { //TODO: add back navigation handling\r\n    let queryTags,\r\n    s= this.state\r\n    if(this.props.location.search)\r\n      queryTags = converter.queryAsTags(this.props.location.search)\r\n\r\n    s.tags = queryTags || []\r\n    this.setState(s)\r\n\r\n    if(this.state.tags.length > 0){\r\n      activeTags.add(...this.state.tags.map(t => t.name))\r\n      this.updatePosts()\r\n    }\r\n  }\r\n    \r\n  handleAddTag(tagName) {\r\n    let s = this.state,\r\n    newTag = {\r\n      name: tagName\r\n    }\r\n\r\n    if(!s.tags.some(e => e.name === tagName)) {\r\n      s.tags.push(newTag)\r\n      activeTags.add(tagName)\r\n      this.setState(s)\r\n    }\r\n  }\r\n\r\n  handleToggleTag(tag) {\r\n    let s = this.state\r\n    if(s.tags.some(e => e.name === tag.name)) {\r\n      s.tags.splice(s.tags.indexOf(tag),1)\r\n      activeTags.remove(tag.name)\r\n    } else {\r\n      s.tags.push(tag)\r\n      activeTags.add(tag.name)\r\n    }\r\n\r\n    this.setState(s)\r\n  }\r\n\r\n  handleSearch(event) {\r\n    this.updatePosts();\r\n    event.preventDefault();\r\n  }\r\n\r\n  updatePosts() {\r\n    api.getPosts(this.state.tags)\r\n      .then(result => {\r\n        let s = this.state\r\n        s.posts = result.map(p => {\r\n          let pp = p\r\n          pp.tags = p.tags.map(t => {\r\n            return { name: t} \r\n          })\r\n          return pp\r\n        })\r\n\r\n        this.props.history.push(converter.tagsAsQuery(this.state.tags));\r\n\r\n        this.setState(s)\r\n      })\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <main>\r\n        <section className=\"search\">\r\n          <h3 className=\"centered\">Search</h3>\r\n          <TagSelector onSubmit={this.handleAddTag} className=\"centered\"/>\r\n          <label>Tags:</label>\r\n          <TagList tags={this.state.tags} onClick={this.handleToggleTag}/>\r\n\r\n          <form onSubmit={this.handleSearch}>\r\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-block btn-red\"/>\r\n          </form>\r\n        </section>\r\n\r\n        <section className=\"results\">\r\n          <h3 className=\"centered\">Results</h3>\r\n          <PostList posts={this.state.posts} onTagClick={this.handleToggleTag}/>\r\n        </section>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Search)","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {   \r\n      render() {\r\n        return (\r\n          <div className=\"app\">\r\n            <header>\r\n              <h1>Help</h1>\r\n            </header>\r\n    \r\n            <main>\r\n              <p>Helpful things</p>\r\n            </main>\r\n    \r\n            <footer>\r\n              <p>Footer-info sentence...</p>\r\n            </footer>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default Search","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {   \r\n      render() {\r\n        return (\r\n          <div className=\"app\">\r\n            <header>\r\n              <h1>404 - not found</h1>\r\n            </header>\r\n    \r\n            <main>\r\n              <p>Go away</p>\r\n            </main>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\nimport Search from './pages/Search';\nimport Help from './pages/Help';\nimport NotFound from './pages/NotFound';\nimport { Route, Link, Switch, BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return(\n      <Router>\n        <header>\n          <h1 className=\"centered\">Browse <a href=\"https://rule34.xxx\">Rule34</a></h1>\n          <div className=\"container d-flex justify-content-center menu-bar\">\n            <Link to=\"/\" className=\"menu-item\">Search</Link>\n            <Link to=\"/help\" className=\"menu-item\">Help</Link>\n          </div>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/help\" component={Help} />\n          <Route component={NotFound} />\n        </Switch>\n        <footer>\n          <div className=\"d-flex justify-content-center\">\n            <p>\n              <a href=\"https://github.com/kurozenzen/r34\">Github Repository</a>\n            </p>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <p>Please, if you notice\n              <a href=\"https://github.com/kurozenzen/r34/issues/new?template=bug_report.md\">something isn't right</a>, or you\n              <a href=\"https://github.com/kurozenzen/r34/issues/new?template=feature_request.md\">want a feature</a> to be implemented take the time to let me know.\n            </p>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <p>Hosted with Github Pages.</p>\n          </div>\n        </footer>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app-root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}