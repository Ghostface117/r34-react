{"version":3,"sources":["icons/FontAwesomeIcons.ts","components/common/FlexPair.tsx","hooks/useToggle.ts","components/tag/TagWrapper.tsx","components/tag/TagName.tsx","components/tag/Alias.tsx","components/tag/AliasesList.tsx","components/tag/Tag.tsx","components/tag/TagList.tsx","components/common/Toggle.tsx","components/common/Select.tsx","icons/TypeIcon.tsx","hooks/useModifier.tsx","components/tagSelector/DropdownListEntry.tsx","components/tagSelector/DropdownList.tsx","components/tagSelector/TagInput.tsx","components/tagSelector/TagSelector.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx"],"names":["CharacterIcon","styled","FontAwesomeIcon","attrs","icon","faUser","ArtistIcon","faPen","CopyrightIcon","faCopyright","MetaDataIcon","faInfoCircle","CloseIcon","faTimes","ExpandIcon","faExpand","ExternalLinkIcon","faExternalLinkAlt","DownloadIcon","faDownload","SourceIcon","faHashtag","RatingIcon","faRegistered","HeartIcon","faHeart","LinkIcon","faLink","ArrowDown","faCaretDown","CodeBranchIcon","faCodeBranch","GithubIcon","faGithub","PatreonIcon","faPatreon","TwitterIcon","faTwitter","DeviantArtIcon","faDeviantart","DiscordIcon","faDiscord","TumblrIcon","faTumblr","CalendarIcon","faCalendarDay","CheckIcon","faCheckSquare","ImageIcon","faImage","GoogleIcon","faGoogle","WrenchIcon","faWrench","SearchIcon","faSearch","FlexPair","div","flexRowWithGap","useToggle","initialValue","useState","value","setValue","toggleValue","useCallback","resetValue","TagWrapper","props","css","theme","active","fg","colors","backgroundColor","accentColor","bg","dimensions","borderWidth","timings","transitionTime","backgroundColor2","switchingColors","gutter","blockHeight","collapsed","borderRadius","fontSizes","content","modifierToStyle","Modifier","PLUS","MINUS","OR","TagNameSpan","span","modifier","TagName","name","count","text","formatTagnameAndCount","tabIndex","AliasWrapper","bigSpacing","Alias","dispatch","useDispatch","handleClick","event","stopPropagation","tag","TagDataClass","addTag","onClick","ListWrapper","parentRef","offsetTop","clientHeight","offsetLeft","clientWidth","AliasesList","aliases","map","DropdownArrow","$collapsed","Tag","types","detailed","tagRef","setTagRef","toggleCollapsed","resetCollapsed","activeTags","useSelector","selectActiveTags","selectAliasesByTagName","filteredAliases","useMemo","filter","alias","isActive","hasAliases","length","removeTag","handleArrowClick","handleEnter","key","onKeyDown","onMouseLeave","ref","TypeIcon","TagListWrapper","flexRowGap","flexColumnGap","TagList","tags","className","Object","entries","Track","defaultBorder","longTransitionTime","Thumb","supportsAspectRatio","Toggle","onToggle","Wrapper","StyledSelect","select","defaultBlock","Option","option","Select","options","onChange","optionKey","optionValue","NO_OP","find","t","match","TagType","CHARACTER","COPYRIGHT","ARTIST","RATING","SOURCE","METADATA","order","EntryWrapper","Name","Count","Icon","DropdownListEntry","posts","formatTagname","formatCount","tagSelectorRef","flexColumn","tagSelector","sizeAndPosition","layerBg","DropdownList","entry","Input","input","TagInput","onSubmit","handleChange","target","id","placeholder","aria-label","TagSelectorWrapper","closed","AddButton","ModifierButton","TagSelector","setTagSelectorRef","setModifier","nextModifier","currentIndex","indexOf","useModifier","suggestions","selectSuggestions","activateTag","prepareTag","toString","setSuggestions","useThrottledEffect","fetchSuggestions","handleAddClick","trim","sanitizedTagname","serializeTagname","suggestion","s","LabeledToggle","children","OptionsWrapper","gridWithGap","StyledInput","spacing","RatedRow","SortRow","sortOptions","SortType","SCORE","DATE","Options","usePreference","PreferenceKey","RATED","rated","setRated","RATED_THRESHOLD","ratedThreshold","setRatedThreshold","SORT","sort","setSort","toggleRated","ratedThresholdInternal","setRatedThresholdInternal","onBlur","Number","handleSortChange","type"],"mappings":"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","file":"static/js/1.4ed228dd.chunk.js","sourcesContent":["import {\r\n  faDeviantart,\r\n  faDiscord,\r\n  faGithub,\r\n  faGoogle,\r\n  faPatreon,\r\n  faTumblr,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport {\r\n  faCalendarDay,\r\n  faCaretDown,\r\n  faCheckSquare,\r\n  faCodeBranch,\r\n  faCopyright,\r\n  faDownload,\r\n  faExpand,\r\n  faExternalLinkAlt,\r\n  faHashtag,\r\n  faHeart,\r\n  faImage,\r\n  faInfoCircle,\r\n  faLink,\r\n  faPen,\r\n  faRegistered,\r\n  faSearch,\r\n  faTimes,\r\n  faUser,\r\n  faWrench,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\n\r\nexport const CharacterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faUser,\r\n})``\r\n\r\nexport const ArtistIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPen,\r\n})``\r\n\r\nexport const CopyrightIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCopyright,\r\n})``\r\n\r\nexport const MetaDataIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faInfoCircle,\r\n})``\r\n\r\nexport const CloseIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTimes,\r\n})``\r\n\r\nexport const ExpandIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExpand,\r\n})``\r\n\r\nexport const ExternalLinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExternalLinkAlt,\r\n})``\r\n\r\nexport const DownloadIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDownload,\r\n})``\r\n\r\nexport const SourceIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHashtag,\r\n})``\r\n\r\nexport const RatingIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faRegistered,\r\n})``\r\n\r\nexport const HeartIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHeart,\r\n})``\r\n\r\nexport const LinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faLink,\r\n})``\r\n\r\nexport const ArrowDown = styled(FontAwesomeIcon).attrs({\r\n  icon: faCaretDown,\r\n})``\r\n\r\nexport const CodeBranchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCodeBranch,\r\n})``\r\n\r\nexport const GithubIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGithub,\r\n})``\r\n\r\nexport const PatreonIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPatreon,\r\n})``\r\n\r\nexport const TwitterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTwitter,\r\n})``\r\n\r\nexport const DeviantArtIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDeviantart,\r\n})``\r\n\r\nexport const DiscordIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDiscord,\r\n})``\r\n\r\nexport const TumblrIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTumblr,\r\n})``\r\n\r\nexport const CalendarIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCalendarDay,\r\n})``\r\n\r\nexport const CheckIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCheckSquare,\r\n})``\r\n\r\nexport const ImageIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faImage,\r\n})``\r\n\r\nexport const GoogleIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGoogle,\r\n})``\r\n\r\nexport const WrenchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faWrench,\r\n})``\r\n\r\nexport const SearchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faSearch,\r\n})``\r\n","import styled from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst FlexPair = styled.div`\n  ${flexRowWithGap}\n`\n\nexport default FlexPair\n","import { useCallback, useState } from 'react'\n\n/**\n * A small wrapper for a useState<boolean> that is primarily used for toggling.\n * Saves me a few useCallbacks.\n */\nexport default function useToggle(initialValue = false): [boolean, () => void, () => void] {\n  const [value, setValue] = useState<boolean>(initialValue)\n  const toggleValue = useCallback(() => setValue(!value), [value])\n  const resetValue = useCallback(() => setValue(initialValue), [initialValue])\n\n  return [value, toggleValue, resetValue]\n}\n","import { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst dropdownBorderRadius = (collapsed: boolean, theme: DefaultTheme) =>\n  collapsed ? theme.dimensions.borderRadius : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`\n\nconst switchingColors = (active: boolean, theme: DefaultTheme) => {\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor\n\n  return css`\n    color: ${fg};\n    background-color: ${bg};\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\n    transition: all ${theme.timings.transitionTime} ease-out;\n\n    svg {\n      color: ${fg};\n    }\n\n    cursor: pointer;\n\n    :hover,\n    :focus,\n    :active {\n      border-color: ${theme.colors.backgroundColor2};\n      color: ${theme.colors.backgroundColor2};\n\n      svg {\n        color: ${theme.colors.backgroundColor2};\n      }\n    }\n\n    :active {\n      transform: scale(1.05);\n    }\n  `\n}\n\nconst TagWrapper = styled.div(\n  (props: { active: boolean; collapsed: boolean; onMouseLeave: MouseEventHandler; theme: DefaultTheme }) =>\n    css`\n      ${flexRowWithGap({ theme: props.theme })}\n      ${switchingColors(props.active, props.theme)}\n      padding: 0 ${props.theme.dimensions.gutter};\n      height: ${props.theme.dimensions.blockHeight};\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\n      font-size: ${props.theme.fontSizes.content};\n    `\n)\n\nexport default TagWrapper\n","import styled, { css } from 'styled-components'\nimport { Modifier, TagType } from '../../data/types'\nimport { formatTagnameAndCount } from '../../misc/formatting'\n\ninterface TagNameProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n  types?: TagType[]\n}\n\nconst modifierToStyle = {\n  [Modifier.PLUS]: css``,\n  [Modifier.MINUS]: css`\n    text-decoration: line-through;\n  `,\n  [Modifier.OR]: css`\n    font-style: italic;\n  `,\n}\n\nconst TagNameSpan = styled.span(\n  ({ modifier = Modifier.PLUS }: Pick<TagNameProps, 'modifier'>) => modifierToStyle[modifier]\n)\n\nexport default function TagName(props: TagNameProps) {\n  const { modifier, name, count } = props\n\n  const text = formatTagnameAndCount(name, count)\n\n  return (\n    <TagNameSpan modifier={modifier} tabIndex={0}>\n      {text}\n    </TagNameSpan>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/TagDataClass'\nimport { Modifier } from '../../data/types'\nimport { addTag } from '../../redux/actions'\nimport { flexRowWithGap } from '../../styled/mixins'\nimport TagName from './TagName'\n\ninterface AliasProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n}\n\nconst AliasWrapper = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    padding: 0 ${theme.dimensions.bigSpacing};\n    height: ${theme.dimensions.blockHeight};\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport default function Alias(props: AliasProps) {\n  const { modifier, name, count } = props\n\n  const dispatch = useDispatch()\n\n  const handleClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      const tag = new TagDataClass(name, [], count, modifier)\n\n      dispatch(addTag(tag))\n    },\n    [count, dispatch, modifier, name]\n  )\n\n  return (\n    <AliasWrapper onClick={handleClick}>\n      <TagName modifier={modifier} name={name} count={count} />\n    </AliasWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport TagDataClass from '../../data/TagDataClass'\nimport { Modifier } from '../../data/types'\nimport Alias from './Alias'\n\nconst ListWrapper = styled.div(\n  ({ theme, parentRef }: { theme: DefaultTheme; parentRef: HTMLDivElement }) => css`\n    position: absolute;\n    top: ${parentRef.offsetTop + parentRef.clientHeight + 4}px;\n    left: ${parentRef.offsetLeft}px;\n    width: ${parentRef.clientWidth + 5}px;\n\n    display: flex;\n    flex-direction: column;\n\n    border-bottom-left-radius: ${theme.dimensions.borderRadius};\n    border-bottom-right-radius: ${theme.dimensions.borderRadius};\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    border-top: none;\n\n    background: ${theme.colors.backgroundColor};\n    z-index: 3;\n    color: ${theme.colors.accentColor};\n\n    > :not(:last-child) {\n      border-bottom: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    }\n  `\n)\n\ninterface AliasesListProps {\n  aliases: TagDataClass[]\n  modifier: Modifier\n  parentRef: HTMLDivElement\n}\n\nexport default function AliasesList(props: AliasesListProps) {\n  const { aliases, modifier, parentRef } = props\n\n  return (\n    <ListWrapper parentRef={parentRef}>\n      {aliases.map(({ name, count }) => (\n        <Alias key={'a_' + name} modifier={modifier} name={name} count={count} />\n      ))}\n    </ListWrapper>\n  )\n}\n","import React, { KeyboardEventHandler, MouseEventHandler, useCallback, useMemo, useState } from 'react'\r\nimport TypeIcon from '../../icons/TypeIcon'\r\nimport { ArrowDown } from '../../icons/FontAwesomeIcons'\r\nimport TagDataClass from '../../data/TagDataClass'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectActiveTags, selectAliasesByTagName } from '../../redux/selectors'\r\nimport { addTag, removeTag } from '../../redux/actions'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport TagWrapper from './TagWrapper'\r\nimport TagName from './TagName'\r\nimport { Modifier } from '../../data/types'\r\nimport AliasesList from './AliasesList'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\n\r\nconst DropdownArrow = styled(ArrowDown)(\r\n  ({ $collapsed, theme }: { $collapsed: boolean; theme: DefaultTheme }) => css`\r\n    transition: all ${theme.timings.transitionTime} ease-out;\r\n    height: 32px;\r\n    width: 32px !important;\r\n    padding: 8px;\r\n    margin: 0 -8px;\r\n    ${$collapsed\r\n      ? css``\r\n      : css`\r\n          transform: rotate(180deg);\r\n        `}\r\n  `\r\n)\r\n\r\ninterface TagProps extends TagDataClass {\r\n  detailed: boolean\r\n}\r\n\r\nexport default function Tag(props: TagProps) {\r\n  const { name, count, modifier = Modifier.PLUS, types, detailed } = props\r\n\r\n  const [tagRef, setTagRef] = useState<HTMLDivElement | null>(null)\r\n  const [collapsed, toggleCollapsed, resetCollapsed] = useToggle(true)\r\n\r\n  const dispatch = useDispatch()\r\n  const activeTags = useSelector(selectActiveTags)\r\n  const aliases = useSelector(selectAliasesByTagName(name))\r\n\r\n  const filteredAliases = useMemo(() => (aliases ? aliases.filter((alias) => !(alias.name in activeTags)) : []), [\r\n    activeTags,\r\n    aliases,\r\n  ])\r\n\r\n  const isActive = name in activeTags\r\n  const hasAliases = filteredAliases?.length > 0\r\n\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent | React.KeyboardEvent) => {\r\n      event.stopPropagation()\r\n      const tag = new TagDataClass(name, types, count, modifier)\r\n\r\n      if (isActive) {\r\n        dispatch(removeTag(tag))\r\n      } else {\r\n        dispatch(addTag(tag))\r\n      }\r\n    },\r\n    [count, dispatch, isActive, modifier, name, types]\r\n  )\r\n\r\n  const handleArrowClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      toggleCollapsed()\r\n    },\r\n    [toggleCollapsed]\r\n  )\r\n\r\n  const handleEnter: KeyboardEventHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleClick(event)\r\n      }\r\n    },\r\n    [handleClick]\r\n  )\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onClick={handleClick}\r\n      onKeyDown={handleEnter}\r\n      onMouseLeave={resetCollapsed}\r\n      ref={setTagRef}\r\n    >\r\n      {detailed && <TypeIcon types={types} />}\r\n      <TagName modifier={modifier} name={name} count={count} />\r\n      {detailed && hasAliases && (\r\n        <>\r\n          <DropdownArrow onClick={handleArrowClick} $collapsed={collapsed} />\r\n          {!collapsed && tagRef && <AliasesList aliases={filteredAliases} modifier={modifier} parentRef={tagRef} />}\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport TagDataClass from '../../data/TagDataClass'\r\nimport { flexRowGap, flexColumnGap } from '../../styled/mixins'\r\nimport Tag from './Tag'\r\n\r\nconst TagListWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    ${flexRowGap(theme.dimensions.gutter)}\r\n    ${flexColumnGap(theme.dimensions.gutter)}\r\n  `\r\n)\r\n\r\ninterface TagListProps {\r\n  tags: Record<string, TagDataClass>\r\n  className?: string\r\n  detailed: boolean\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, className, detailed } = props\r\n\r\n  return (\r\n    <TagListWrapper className={className}>\r\n      {Object.entries(tags).map(([key, tag]) => (\r\n        <Tag key={key} detailed={detailed} {...tag} />\r\n      ))}\r\n    </TagListWrapper>\r\n  )\r\n}\r\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: DefaultTheme }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import React, { ChangeEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst Wrapper = styled.div(\n  ({ theme }) => css`\n    width: 100px;\n    height: ${theme.dimensions.blockHeight};\n  `\n)\n\nconst StyledSelect = styled.select(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    ${defaultBlock({ theme })}\n    width: 100%;\n    height: 100%;\n    background-color: ${theme.colors.backgroundColor2};\n  `\n)\n\nconst Option = styled.option(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n  `\n)\n\ninterface SelectProps {\n  options: Record<string, string>\n  value: string\n  onChange: ChangeEventHandler\n}\n\nexport default function Select(props: SelectProps) {\n  const { options, value, onChange } = props\n\n  return (\n    <Wrapper>\n      <StyledSelect value={value} onChange={onChange}>\n        {Object.entries(options).map(([optionKey, optionValue]) => (\n          <Option key={optionKey} value={optionKey}>\n            {optionValue}\n          </Option>\n        ))}\n      </StyledSelect>\n    </Wrapper>\n  )\n}\n","import React, { MouseEventHandler, useMemo } from 'react'\nimport { NO_OP, TagType } from '../data/types'\nimport { CharacterIcon, CopyrightIcon, ArtistIcon, RatingIcon, SourceIcon, MetaDataIcon } from './FontAwesomeIcons'\n\ninterface TypeIconProps {\n  types?: string[]\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  left?: boolean\n  right?: boolean\n}\n\nexport default function TypeIcon(props: TypeIconProps) {\n  const { types = [], className = '', onClick = NO_OP } = props\n  const interestingType = useMemo(() => types.find((t) => !t.match(/^[general|ambiguous]$/)), [types])\n\n  switch (interestingType) {\n    case TagType.CHARACTER:\n      return <CharacterIcon className={className} onClick={onClick} />\n    case TagType.COPYRIGHT:\n      return <CopyrightIcon className={className} onClick={onClick} />\n    case TagType.ARTIST:\n      return <ArtistIcon className={className} onClick={onClick} />\n    case TagType.RATING:\n      return <RatingIcon className={className} onClick={onClick} />\n    case TagType.SOURCE:\n      return <SourceIcon className={className} onClick={onClick} />\n    case TagType.METADATA:\n      return <MetaDataIcon className={className} onClick={onClick} />\n    default:\n      return null\n  }\n}\n","import { useCallback, useState } from 'react'\nimport { Modifier } from '../data/types'\n\nconst order = [Modifier.PLUS, Modifier.MINUS, Modifier.OR]\n\n/**\n * Small utility hook to abstract the rotating modifier away\n */\nexport default function useModifier(initialValue: Modifier = Modifier.PLUS): [Modifier, () => void] {\n  const [modifier, setModifier] = useState(initialValue)\n\n  const nextModifier = useCallback(() => {\n    const currentIndex = order.indexOf(modifier)\n    const nextIndex = currentIndex + 1\n\n    // make the value rotate\n    setModifier(order[nextIndex % order.length])\n  }, [modifier])\n\n  return [modifier, nextModifier]\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TagType } from '../../data/types'\nimport TypeIcon from '../../icons/TypeIcon'\nimport { formatCount, formatTagname } from '../../misc/formatting'\n\ninterface EntryProps {\n  name: string\n  posts: number\n  types: TagType[]\n  onClick: MouseEventHandler\n}\n\nconst EntryWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 48px 1fr auto;\n    min-height: ${theme.dimensions.blockHeight}; // COMPAT: Kiwi Browser\n    height: ${theme.dimensions.blockHeight};\n    background: white;\n    align-items: center;\n  `\n)\n\nconst Name = styled.span`\n  grid-column: 2/3;\n`\n\nconst Count = styled.span(\n  ({ theme }) => css`\n    grid-column: 3/4;\n    padding-right: ${theme.dimensions.bigSpacing};\n  `\n)\n\nconst Icon = styled.div`\n  grid-column: 1/2;\n  text-align: center;\n`\n\nexport default function DropdownListEntry(props: EntryProps) {\n  const { name, posts, types, onClick } = props\n\n  return (\n    <EntryWrapper onClick={onClick}>\n      <Icon>\n        <TypeIcon types={types} />\n      </Icon>\n      <Name>{formatTagname(name)}</Name>\n      <Count>{formatCount(posts)} posts</Count>\n    </EntryWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport DropdownListEntry from './DropdownListEntry'\nimport { TagLike } from '../../data/types'\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\n\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\n  if (tagSelector) {\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector\n\n    return css`\n      position: absolute;\n      top: ${offsetTop + clientHeight}px;\n      left: ${offsetLeft}px;\n      width: ${clientWidth}px;\n      max-height: 50vh;\n    `\n  }\n\n  return ''\n}\n\nconst ListWrapper = styled.div(\n  ({ theme, tagSelectorRef }: { tagSelectorRef: HTMLDivElement | null; theme: DefaultTheme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap('1px')}\n    ${sizeAndPosition(tagSelectorRef)};\n    background: lightgrey;\n    box-sizing: border-box;\n    border: ${theme.dimensions.borderWidth} ${theme.colors.accentColor} solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    color: black;\n    overflow-y: auto;\n    z-index: 3;\n\n    ::-webkit-scrollbar {\n      width: 8px;\n\n      :hover {\n        background: ${theme.colors.layerBg};\n      }\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: ${theme.colors.backgroundColor2};\n      border-left: 1px lightgray solid;\n    }\n\n    /* Handle */\n    :hover {\n      ::-webkit-scrollbar {\n        background: ${theme.colors.backgroundColor}20;\n      }\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: ${theme.colors.backgroundColor}40;\n      border-radius: 1000px;\n\n      :hover {\n        background: ${theme.colors.backgroundColor}30;\n      }\n    }\n  `\n)\n\ninterface DropdownListProps {\n  tagSelectorRef: HTMLDivElement | null\n  entries: TagLike[]\n  onClick: (entry: TagLike) => void\n}\n\nexport default function DropdownList(props: DropdownListProps) {\n  const { tagSelectorRef, entries, onClick } = props\n\n  return entries && entries.length > 0 ? (\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\n      {entries.map((entry) => (\n        <DropdownListEntry\n          key={entry.name}\n          onClick={() => onClick(entry)}\n          name={entry.name}\n          types={entry.types}\n          posts={entry.count || entry.posts || 0}\n        />\n      ))}\n    </ListWrapper>\n  ) : null\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Input = styled.input(\n  (props) => css`\n    width: 100%;\n    border: none;\n    outline: none;\n    background: none;\n    font-size: ${props.theme.fontSizes.content};\n    border-top: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n    border-bottom: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n  `\n)\n\ninterface TagInputProps {\n  value: string\n  setValue: (newValue: string) => void\n  onSubmit: () => void\n}\n\nexport default function TagInput(props: TagInputProps) {\n  const { value, setValue, onSubmit } = props\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      setValue(event.target.value)\n    },\n    [setValue]\n  )\n\n  const handleEnter: KeyboardEventHandler = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        onSubmit()\n      }\n    },\n    [onSubmit]\n  )\n\n  return (\n    <Input\n      id='tag-input'\n      value={value}\n      onChange={handleChange}\n      onKeyDown={handleEnter}\n      placeholder='Search for tags'\n      aria-label='Search'\n    />\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport useThrottledEffect from 'use-throttled-effect'\nimport { TagLike } from '../../data/types'\nimport useModifier from '../../hooks/useModifier'\nimport { serializeTagname } from '../../misc/formatting'\nimport { prepareTag } from '../../misc/prepare'\nimport { addTag, fetchSuggestions, setSuggestions } from '../../redux/actions'\nimport { selectSuggestions } from '../../redux/selectors'\nimport { AddButton, ModifierButton } from '../common/Buttons'\nimport DropdownList from './DropdownList'\nimport TagInput from './TagInput'\n\nconst TagSelectorWrapper = styled.div(\n  (props: { closed: boolean; ref: (ref: HTMLInputElement) => void; theme: DefaultTheme }) => css`\n    display: flex;\n    background: white;\n    ${props.closed\n      ? css`\n          border-radius: ${props.theme.dimensions.borderRadius};\n        `\n      : css`\n          border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\n\n          > ${AddButton} {\n            border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\n          }\n\n          > ${ModifierButton} {\n            border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\n          }\n        `}\n  `\n)\n\nexport default function TagSelector() {\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(null)\n  const [modifier, nextModifier] = useModifier()\n\n  const suggestions = useSelector(selectSuggestions)\n\n  const activateTag = useCallback(\n    ({ name, posts, count, types }: TagLike) => {\n      const tag = prepareTag({\n        name,\n        types,\n        modifier,\n        count: (count || posts || 0).toString(),\n      })\n\n      dispatch(addTag(tag))\n\n      setValue('')\n      dispatch(setSuggestions([]))\n    },\n    [dispatch, modifier]\n  )\n\n  // This effect fetches suggestions for the input value if the value\n  //is empty, it ensures the suggestions are as well\n  useThrottledEffect(\n    () => {\n      if (value === '') {\n        if (suggestions.length > 0) {\n          // Reset Suggestions\n          dispatch(setSuggestions([]))\n        }\n      } else {\n        // Fetch Suggestions\n        dispatch(fetchSuggestions(value))\n      }\n    },\n    300,\n    [value]\n  )\n\n  const handleAddClick = useCallback(() => {\n    if (value && value.trim()) {\n      const sanitizedTagname = serializeTagname(value)\n      const suggestion: TagLike | undefined = suggestions.find((s) => s.name === sanitizedTagname)\n\n      if (suggestion) {\n        activateTag(suggestion)\n      }\n    }\n  }, [value, activateTag, suggestions])\n\n  return (\n    <TagSelectorWrapper ref={setTagSelectorRef} closed={suggestions.length === 0}>\n      <ModifierButton onClick={nextModifier} aria-label='Tag Modifier'>\n        {modifier}\n      </ModifierButton>\n      <TagInput value={value} setValue={setValue} onSubmit={handleAddClick} />\n      <AddButton onClick={handleAddClick} aria-label='Add Tag'>\n        Add\n      </AddButton>\n      {suggestions.length > 0 && (\n        <DropdownList tagSelectorRef={tagSelectorRef} entries={suggestions} onClick={activateTag} />\n      )}\n    </TagSelectorWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport FlexPair from './FlexPair'\nimport Toggle from './Toggle'\n\ninterface LabeledToggleProps {\n  children: React.ReactNode\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function LabeledToggle(props: LabeledToggleProps) {\n  const { children, value, onToggle } = props\n\n  return (\n    <FlexPair>\n      <Toggle value={value} onToggle={onToggle} />\n      <span>{children}</span>\n    </FlexPair>\n  )\n}\n","import React, { ChangeEventHandler, useCallback, useState } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport LabeledToggle from '../common/LabeledToggle'\nimport { PreferenceKey, SortType } from '../../data/types'\nimport usePreference from '../../hooks/usePreference'\nimport { borderRadius, flexRowWithGap, gridWithGap, PropsWithTheme } from '../../styled/mixins'\nimport Select from '../common/Select'\n\nconst OptionsWrapper = styled.div`\n  ${gridWithGap}\n`\n\nconst StyledInput = styled.input(\n  (props: { value: string; theme: DefaultTheme }) => css`\n    background: ${props.theme.colors.backgroundColor};\n    padding: ${props.theme.dimensions.spacing};\n    ${borderRadius}\n    border: none;\n    outline: none;\n    color: ${props.theme.colors.accentColor};\n    width: 3.4rem;\n    text-align: right;\n    font-size: ${props.theme.fontSizes.content};\n\n    ::-webkit-inner-spin-button,\n    ::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    -moz-appearance: textfield;\n  `\n)\n\nconst RatedRow = styled.div`\n  ${flexRowWithGap}\n`\n\nconst SortRow = styled.div`\n  ${flexRowWithGap}\n  height: ${({ theme }: PropsWithTheme) => theme.dimensions.blockHeight};\n`\n\nconst sortOptions = {\n  [SortType.SCORE]: 'Score',\n  [SortType.DATE]: 'Date',\n}\n\nexport default function Options() {\n  const [rated, setRated] = usePreference(PreferenceKey.RATED)\n  const [ratedThreshold, setRatedThreshold] = usePreference(PreferenceKey.RATED_THRESHOLD)\n  const [sort, setSort] = usePreference(PreferenceKey.SORT)\n\n  const toggleRated = useCallback(() => setRated(!rated), [rated, setRated])\n\n  const [ratedThresholdInternal, setRatedThresholdInternal] = useState(ratedThreshold ? ratedThreshold.toString() : '1')\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => setRatedThresholdInternal(event.target.value),\n    []\n  )\n  const onBlur = useCallback(\n    () => setRatedThreshold(Number(ratedThresholdInternal)),\n    [ratedThresholdInternal, setRatedThreshold]\n  )\n\n  const handleSortChange: ChangeEventHandler<HTMLSelectElement> = useCallback(\n    (event) => setSort(event.target.value as SortType),\n    [setSort]\n  )\n\n  return (\n    <OptionsWrapper>\n      <LabeledToggle value={rated} onToggle={toggleRated}>\n        {rated ? (\n          <RatedRow>\n            <span>More than</span>\n            <StyledInput type='text' value={ratedThresholdInternal} onChange={onChange} onBlur={onBlur} />\n            <span>likes</span>\n          </RatedRow>\n        ) : (\n          'Only show Rated Posts'\n        )}\n      </LabeledToggle>\n      <SortRow>\n        <span>Sort by:</span>\n        <Select options={sortOptions} value={sort} onChange={handleSortChange} />\n      </SortRow>\n    </OptionsWrapper>\n  )\n}\n"],"sourceRoot":""}