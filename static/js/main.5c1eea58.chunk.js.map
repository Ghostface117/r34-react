{"version":3,"sources":["redux/selectors.ts","styled/mixins.tsx","data/utils.ts","data/browserUtils.ts","data/TagDataClass.ts","misc/api.ts","components/common/Buttons.tsx","hooks/useAction.tsx","components/styled/FlexImage.tsx","icons/Loading.tsx","components/widgets/ResetButton.tsx","icons/OutOfResults.png","data/PostDataClass.ts","misc/prepare.ts","redux/actions.ts","data/types.ts","components/widgets/CookieConfirmation.tsx","GlobalStyles.tsx","misc/theme.ts","redux/reducers/preferences.ts","analytics/events.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/index.ts","redux/middleware/eventLogging.ts","redux/middleware/apiRequests.ts","redux/store.ts","components/pages/LoadingScreen.tsx","components/features/ErrorBoundary.tsx","components/pages/ErrorScreen.tsx","App.tsx","index.tsx"],"names":["selectActiveTags","state","tags","active","selectPosts","results","posts","selectCount","count","selectPageNumber","pageNumber","selectPreferences","preferences","selectResultsLayout","resultsLayout","selectPreloadVideos","selectOriginals","originals","selectCookies","cookies","selectFullsceenState","reader","isEnabled","selectPageSize","pageSize","selectTagSuggestionCount","tagSuggestionsCount","selectUseCorsProxy","useCorsProxy","selectShowMetadata","showMetadata","selectShowComments","showComments","selectSort","sort","selectNumberOfActiveTags","createSelector","Object","keys","length","selectAliasesAsList","aliases","values","flat","selectOutOfResults","selectHasMoreResults","outOfResults","selectLastPage","Math","ceil","selectFullScreenPost","postId","fullScreenPostId","find","post","id","selectFullScreenIndex","fullScreenPost","indexOf","selectMinRating","rated","ratedThreshold","selectAliasesByTagName","tagName","selectPostById","defaultBorder","theme","css","colors","accentColor","dimensions","borderWidth","borderRadius","layer","layerBg","boxShadow","primaryHover","backgroundColor","backgroundColor2","flexColumn","flexColumnWithGap","flexColumnGap","gutter","gridWithGap","gap","flexRowWithGap","flexRowGap","amount","supportsGap","supportsFlexGap","centeredMaxWidth","bodyWidth","defaultBlock","blockHeight","flexMedia","preserveAspectRatio","width","height","supportsAspectRatio","shadow","radius","color","dropShadow","mediaStyle","getMediaType","type","PostType","VIDEO","MediaType","small_src","includes","big_src","GIF","PICTURE","listToMap","list","keyProp","reduce","result","current","tagsToString","map","tag","modifier","name","parseUrl","value","URL","err","versionToNumber","majorMinorPatch","Number","split","join","download","url","filename","pop","fetch","headers","Headers","Origin","window","location","origin","mode","then","response","blob","a","document","createElement","href","createObjectURL","body","appendChild","click","remove","catch","e","console","error","getVersion","process","REACT_APP_VERSION","getVersionString","version","getCorrectSource","loadOriginal","source","searchParams","get","flex","style","display","flexDirection","rowGap","isSupported","scrollHeight","parentNode","removeChild","supportsObjectFit","TagDataClass","types","Modifier","PLUS","this","sourceTags","TagType","SOURCE","ratingTags","RATING","API","activeApi","apiUrl2","apiUrl1","searchTerm","limit","defaultPageSize","json","startsWith","matchingRating","filter","replace","matchingSourceTags","minScore","buildPostUrl","res","preparePost","encodeURIComponent","page","tagList","normalTags","OR","orTags","tagParts","push","TextButton","styled","button","bigSpacing","fontSizes","content","timings","longTransitionTime","RedButton","transitionTime","BlockButton","AddButton","ModifierButton","useAction","actionCreator","dispatch","useDispatch","useCallback","FlexImage","img","StyledSvg","svg","Loading","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","ResetButton","props","reset","localStorage","clear","hash","reload","onClick","PostDataClass","score","rating","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","comments","Date","parse","prepareTag","dirtyTag","sample_url","preview_url","t","Boolean","ADD_TAG","REMOVE_TAG","ADD_ALIASES","ADD_TYPES","ADD_POSTS","SET_POSTS","SET_COMMENTS","SET_OPTION","GET_RESULTS","GET_MORE_RESULTS","ALLOW_COOKIES","ENTER_FULLSCREEN","EXIT_FULLSCREEN","SET_FULLSCREEN_POST","addTag","removeTag","addAliases","forTag","addPosts","setPosts","setComments","setOption","key","getResults","getMoreResults","allowCookiesAction","enterFullscreen","exitFullscreen","setFullScreenPost","ResultLayout","RouteName","RatingType","PreferenceKey","NO_OP","CookieWrapper","div","layerBgSolid","StyledSpan","span","CookieConfirmation","useSelector","aria-label","createGlobalStyle","layerBgHighlight","spacing","hugeSpacing","hoverAccent","subduedText","liked","bigTitle","initialPreferencesState","infinite","preloadVideos","INFINITE_COLUMN","produce","draft","AnalyticsEventId","action","COOKIES","initialResultsState","postCount","postIndex","findIndex","p","initialTagsState","newTag","addTypes","tagToRemove","initialReaderState","setPostId","combineReducers","firebaseApp","analytics","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","eventLogging","store","next","getState","firebase","initializeApp","activeTags","page_number","SEARCH","payload","active_tags","searchEvent","logEvent","apiRequests","hasMoreResults","minRating","api","getPosts","getAliases","sanitizedAliases","b","alias","getTags","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","FullScreenCentered","LoadingScreen","ErrorBoundary","hasError","fallback","children","React","Component","ErrorScreen","GlobalStyles","src","outOfResultsPicture","alt","Help","lazy","Settings","Search","About","App","loading","exact","path","HELP","SETTINGS","ABOUT","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5c1eea58.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\r\nimport { DefaultRootState } from '../react-redux'\r\n\r\n// Simple selectors\r\nexport const selectActiveTags = (state: DefaultRootState) => state.tags.active\r\nexport const selectResults = (state: DefaultRootState) => state.results\r\nexport const selectPosts = (state: DefaultRootState) => state.results.posts\r\nexport const selectCount = (state: DefaultRootState) => state.results.count\r\nexport const selectPageNumber = (state: DefaultRootState) => state.results.pageNumber\r\nexport const selectPreferences = (state: DefaultRootState) => state.preferences\r\nexport const selectResultsLayout = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectPreloadVideos = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectInfinite = (state: DefaultRootState) => state.preferences.infinite\r\nexport const selectOriginals = (state: DefaultRootState) => state.preferences.originals\r\nexport const selectRated = (state: DefaultRootState) => state.preferences.rated\r\nexport const selectRatedThreshold = (state: DefaultRootState) => state.preferences.ratedThreshold\r\nexport const selectCookies = (state: DefaultRootState) => state.preferences.cookies\r\nexport const selectFullsceenState = (state: DefaultRootState) => state.reader.isEnabled\r\nexport const selectFullsceenPostId = (state: DefaultRootState) => state.reader.postId\r\nexport const selectAliases = (state: DefaultRootState) => state.tags.aliases\r\nexport const selectPageSize = (state: DefaultRootState) => state.preferences.pageSize\r\nexport const selectTagSuggestionCount = (state: DefaultRootState) => state.preferences.tagSuggestionsCount\r\nexport const selectUseCorsProxy = (state: DefaultRootState) => state.preferences.useCorsProxy\r\nexport const selectShowMetadata = (state: DefaultRootState) => state.preferences.showMetadata\r\nexport const selectShowComments = (state: DefaultRootState) => state.preferences.showComments\r\nexport const selectSort = (state: DefaultRootState) => state.preferences.sort\r\n\r\n// Memoized selectors\r\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\r\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\r\n\r\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\r\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\r\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\r\nexport const selectLastPage = createSelector(\r\n  selectCount,\r\n  selectPageSize,\r\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\r\n)\r\nexport const selectFullScreenPost = createSelector(selectPosts, selectFullsceenPostId, (posts, fullScreenPostId) =>\r\n  posts.find((post) => post.id === fullScreenPostId)\r\n)\r\nexport const selectFullScreenIndex = createSelector(selectPosts, selectFullScreenPost, (posts, fullScreenPost) =>\r\n  fullScreenPost ? posts.indexOf(fullScreenPost) : -1\r\n)\r\nexport const selectMinRating = createSelector(selectRated, selectRatedThreshold, (rated, ratedThreshold) =>\r\n  rated ? ratedThreshold : 0\r\n)\r\n\r\n// Parameterized selectors\r\nexport const selectAliasesByTagName = (tagName: string) => (state: DefaultRootState) => state.tags.aliases[tagName]\r\nexport const selectPostById = (id: number) => (state: DefaultRootState) =>\r\n  state.results.posts.find((post) => post.id === id)\r\n","import { css, DefaultTheme } from 'styled-components'\r\nimport { supportsAspectRatio, supportsFlexGap, supportsGap } from '../data/browserUtils'\r\n\r\nexport interface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    ${borderRadius({ theme })}\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    ${boxShadow({ theme })}\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColumn() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\nexport function flexColumnWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gridWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: grid;\r\n    ${gap(theme.dimensions.gutter)}\r\n  `\r\n}\r\n\r\nexport function flexRowWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n    ${flexRowGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gap(amount: string) {\r\n  return supportsGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexRowGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexColumnGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    ${gap(theme.dimensions.gutter)};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  if (!width || !height) {\r\n    return ''\r\n  }\r\n\r\n  return supportsAspectRatio\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : css`\r\n        max-width: 100%;\r\n        height: auto;\r\n      `\r\n}\r\n\r\nexport function borderRadius({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n}\r\n\r\nexport function boxShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    box-shadow: 0 0 ${theme.shadow.radius} ${theme.shadow.color};\r\n  `\r\n}\r\n\r\nexport function dropShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    filter: drop-shadow(0 0 ${theme.shadow.radius} ${theme.shadow.color});\r\n  `\r\n}\r\n\r\nexport function mediaStyle() {\r\n  return css`\r\n    ${borderRadius}\r\n    ${boxShadow}\r\n    grid-area: 1/1/2/2;\r\n    z-index: 1;\r\n  `\r\n}\r\n","import PostDataClass from './PostDataClass'\nimport TagDataClass from './TagDataClass'\nimport { PostType, MediaType } from './types'\n\nexport const getMediaType = (type: PostType, post: PostDataClass) => {\n  if (type === PostType.VIDEO) {\n    return MediaType.VIDEO\n  }\n\n  // can't use .endsWith because of queryString\n  if (post.small_src.includes('.gif') || post.big_src.includes('.gif')) {\n    return MediaType.GIF\n  }\n\n  return MediaType.PICTURE\n}\n\nexport function getUrlParameter(src: string) {\n  return new URL(src).searchParams.get('url') || ''\n}\n\n/**\n * Converts a list of objects into a map.\n * @param list The original list\n * @param keyProp The keyProp parameter defines which property of the objects will be used as the index for the map\n */\nexport const listToMap = <T>(list: T[], keyProp: string): Record<string, T> => {\n  return list.reduce((result: Record<string, T>, current: any) => {\n    result[current[keyProp]] = current\n    return result\n  }, {})\n}\n\n/**\n * Joins tags together for analytics event\n */\nexport function tagsToString(tags: Record<string, TagDataClass>) {\n  return Object.values(tags)\n    .map((tag) => `${tag.modifier}${tag.name}`)\n    .sort()\n}\n\n/**\n * Returns a URL object when the value is a hyperlink. Else undefined\n */\nexport function parseUrl(value: string) {\n  try {\n    return new URL(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * converts a version like \"1.2.7\" into 127\n */\nexport function versionToNumber(majorMinorPatch: string) {\n  return Number(majorMinorPatch.split('.').join(''))\n}\n\n/**\n * Hacky ass way to download images cross origin. Could solve this by hosting both the app and the api on the same domain.\n */\nexport function download(url: string) {\n  const filename = url.split('/').pop() || ''\n\n  fetch(url, {\n    headers: new Headers({\n      Origin: window.location.origin,\n    }),\n    mode: 'cors',\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      var a = document.createElement('a')\n      a.download = filename\n      a.href = window.URL.createObjectURL(blob)\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    })\n    .catch((e) => console.error(e))\n}\n\n/**\n * Returns the current version of the project\n */\nexport function getVersion() {\n  // Some browsers fail to get environment variables. In that case return unknown.\n  if (process?.env?.REACT_APP_VERSION) {\n    return process.env.REACT_APP_VERSION\n  }\n\n  return 'unknown'\n}\n\n/**\n * Render ready version.\n */\nexport function getVersionString() {\n  const version = getVersion()\n\n  return version === 'unknown' ? 'Latest Release' : `Version ${version}`\n}\n\n/**\n * Returns the correct source based on preferences\n */\nexport function getCorrectSource(loadOriginal: boolean, useCorsProxy: boolean, big_src: string, small_src: string) {\n  const source = loadOriginal ? big_src : small_src\n  return useCorsProxy ? source : getUrlParameter(source)\n}\n","export const supportsFlexGap = (() => {\r\n  // create flex container with row-gap set\r\n  var flex = document.createElement('div')\r\n  flex.style.display = 'flex'\r\n  flex.style.flexDirection = 'column'\r\n  flex.style.rowGap = '1px'\r\n\r\n  // create two, elements inside it\r\n  flex.appendChild(document.createElement('div'))\r\n  flex.appendChild(document.createElement('div'))\r\n\r\n  // append to the DOM (needed to obtain scrollHeight)\r\n  document.body.appendChild(flex)\r\n  var isSupported = flex.scrollHeight === 1 // flex container should be 1px high from the row-gap\r\n  //@ts-expect-error\r\n  flex.parentNode.removeChild(flex)\r\n\r\n  return isSupported\r\n})()\r\n\r\nexport const supportsGap = 'gap' in document.body.style\r\nexport const supportsAspectRatio = 'aspect-ratio' in document.body.style\r\nexport const supportsObjectFit = 'object-fit' in document.body.style\r\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { Modifier, TagLike, TagType } from '../data/types'\nimport { preparePost } from './prepare'\n\nconst sourceTags: TagLike[] = [\n  { name: 'source:*patreon*', posts: 12711, types: [TagType.SOURCE] },\n  { name: 'source:*twitter*', posts: 99927, types: [TagType.SOURCE] },\n  { name: 'source:*pixiv*', posts: 185080, types: [TagType.SOURCE] },\n]\n\nconst ratingTags: TagLike[] = [\n  { name: 'rating:safe', posts: 14293, types: [TagType.RATING] },\n  { name: 'rating:questionable', posts: 219552, types: [TagType.RATING] },\n  { name: 'rating:explicit', posts: 3821144, types: [TagType.RATING] },\n]\n\nclass API {\n  static defaultPageSize = 20\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n\n  activeApi = API.apiUrl2\n\n  constructor() {\n    this.activeApi = API.apiUrl1\n\n    // Failover to apiUrl2\n    fetch(this.activeApi).catch(() => (this.activeApi = API.apiUrl2))\n  }\n\n  async getTags(searchTerm: string, limit: number = API.defaultPageSize) {\n    const tags: TagLike[] = await (\n      await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n    ).json()\n\n    // HACKY: Inject suggestions for ratings and some sources\n    if (searchTerm.startsWith('rating:')) {\n      const matchingRating = ratingTags.filter((tag) => tag.name.includes(searchTerm.replace('rating:', '')))\n      return [...tags, ...matchingRating]\n    }\n\n    if (searchTerm.startsWith('source:')) {\n      const matchingSourceTags = sourceTags.filter((tag) => tag.name.includes(searchTerm.replace('source:', '')))\n      return [...tags, ...matchingSourceTags]\n    }\n\n    return tags\n  }\n\n  async getPosts(\n    tags: Record<string, TagDataClass>,\n    limit: number = API.defaultPageSize,\n    pageNumber = 0,\n    minScore = 0,\n    sort: 'score' | 'date' = 'date'\n  ) {\n    const res = await (await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit, sort))).json()\n\n    return {\n      posts: res.posts.map(preparePost) as PostDataClass[],\n      count: Number(res.count),\n    }\n  }\n\n  async getAliases(tagName: string) {\n    const aliases: TagLike[] = await (await fetch(`${this.activeApi}/alias/${encodeURIComponent(tagName)}`)).json()\n\n    return aliases\n  }\n\n  buildPostUrl(\n    page: number,\n    tags: Record<string, TagDataClass>,\n    minScore: number,\n    limit: number = API.defaultPageSize,\n    sort: 'score' | 'date'\n  ) {\n    const tagList = Object.values(tags)\n\n    const normalTags = tagList.filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = tagList.filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    const tagParts = [...normalTags.map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)]\n\n    if (orTags.length > 0) {\n      tagParts.push('( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )')\n    }\n\n    if (minScore > 0) {\n      tagParts.push(encodeURIComponent('score:>=' + minScore))\n    }\n\n    if (sort !== 'date') {\n      tagParts.push(encodeURIComponent('sort:' + sort + ':desc'))\n    }\n\n    if (tagParts.length > 0) {\n      url += `&tags=${tagParts.join(' + ')}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, dropShadow, primaryHover } from '../../styled/mixins'\n\nconst TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n\n    transition: all ${theme.timings.longTransitionTime} ease-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    ${dropShadow({ theme })}\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-out;\n    }\n\n    :active {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)`\n  ${primaryHover}\n`\n\nexport const BlockButton = styled(RedButton)`\n  width: 100%;\n\n  :active {\n    transform: scaleX(1.03) scaleY(1.1);\n  }\n`\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AnyAction } from 'redux'\n\n/**\n * A hook that simplifies usage of simple (unparameterized) Redux actions\n */\nexport default function useAction<T extends () => AnyAction>(actionCreator: T) {\n  const dispatch = useDispatch()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(() => dispatch(actionCreator()), [actionCreator, dispatch])\n}\n","import styled from 'styled-components'\nimport { preserveAspectRatio, flexMedia } from '../../styled/mixins'\n\nconst FlexImage = styled.img`\n  ${flexMedia}\n  ${preserveAspectRatio}\n`\n\nexport default FlexImage\n","import React from 'react'\nimport styled from 'styled-components'\n\n// Don't use theme here so the loadingScreen is independent\nconst StyledSvg = styled.svg`\n  height: 32px;\n  padding: 8px;\n`\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='25' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='44' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import React, { useCallback } from 'react'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetButton(props: any) {\r\n  const reset = useCallback(() => {\r\n    localStorage.clear()\r\n    window.location.hash = ''\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <BlockButton onClick={reset} {...props}>\r\n      Reset Application\r\n    </BlockButton>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OutOfResults.9c71691c.png\";","import { RatingType, PostType } from './types'\nimport TagDataClass from './TagDataClass'\nimport CommentDataClass from './CommentDataClass'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: number\n  change: string\n\n  comments?: CommentDataClass[]\n\n  constructor(\n    id: number,\n    score: number,\n    rating: RatingType,\n    source: string,\n    tags: TagDataClass[],\n    media_type: PostType,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = Date.parse(created_at)\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { TagType, Modifier, RatingType, PostType } from '../data/types'\n\n/**\n * A tag as received from the backend.\n * All strings\n */\ninterface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\n/**\n * A post as received from the backend.\n * All strings\n */\ninterface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\n/**\n * Introduce types for nicer use later\n */\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\n/**\n * Introduce types for nicer use later and parse tag names to tag objects.\n */\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type as PostType,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","import { PreferenceKey, TagType } from '../data/types'\nimport TagDataClass from '../data/TagDataClass'\nimport PostDataClass from '../data/PostDataClass'\nimport CommentDataClass from '../data/CommentDataClass'\n\n// Action Names\nexport const ADD_TAG = 'R34_ADD_TAG'\nexport const REMOVE_TAG = 'R34_REMOVE_TAG'\nexport const ADD_ALIASES = 'R34_ADD_ALIASES'\nexport const ADD_TYPES = 'R34_ADD_TYPES'\nexport const ADD_POSTS = 'R34_ADD_POSTS'\nexport const SET_POSTS = 'R34_SET_POSTS'\nexport const SET_COMMENTS = 'R34_SET_COMMENTS'\nexport const SET_OPTION = 'R34_SET_OPTION'\nexport const GET_RESULTS = 'R34_GET_RESULTS'\nexport const GET_MORE_RESULTS = 'R34_GET_MORE_RESULTS'\nexport const ALLOW_COOKIES = 'R34_ALLOW_COOKIES'\nexport const ENTER_FULLSCREEN = 'R34_ENTER_FULLSCREEN'\nexport const EXIT_FULLSCREEN = 'R34_EXIT_FULLSCREEN'\nexport const SET_FULLSCREEN_POST = 'R34_SET_FULLSCREEN_POST'\n\n// Action Types\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\ninterface AddTypesAction {\n  type: typeof ADD_TYPES\n  types: TagType[]\n  forTag: string\n}\n\ninterface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: number\n  pageNumber?: number\n}\n\ninterface SetCommentsAction {\n  type: typeof SET_COMMENTS\n  postId: number\n  comments: CommentDataClass[]\n}\n\ninterface SetOptionAction {\n  type: typeof SET_OPTION\n  key: PreferenceKey\n  value: any\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface AllowCookiesAction {\n  type: typeof ALLOW_COOKIES\n  value: boolean\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\nexport type AppAction =\n  | AddTagAction\n  | RemoveTagAction\n  | AddAliasesAction\n  | AddTypesAction\n  | AddPostsAction\n  | SetPostsAction\n  | SetCommentsAction\n  | SetOptionAction\n  | GetResultsAction\n  | GetMoreResultsAction\n  | AllowCookiesAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | SetFullScreenPostAction\n\n// Action Creators\nexport function addTag(tag: TagDataClass): AddTagAction {\n  return {\n    type: ADD_TAG,\n    tag,\n  }\n}\n\nexport function removeTag(tag: TagDataClass): RemoveTagAction {\n  return {\n    type: REMOVE_TAG,\n    tag,\n  }\n}\n\nexport function addAliases(aliases: TagDataClass[], forTag: string): AddAliasesAction {\n  return {\n    type: ADD_ALIASES,\n    aliases,\n    forTag,\n  }\n}\n\nexport function addTypes(types: TagType[], forTag: string): AddTypesAction {\n  return {\n    type: ADD_TYPES,\n    types,\n    forTag,\n  }\n}\n\nexport function addPosts(posts: PostDataClass[]): AddPostsAction {\n  return {\n    type: ADD_POSTS,\n    posts,\n  }\n}\n\nexport function setPosts(posts: PostDataClass[], count: number, pageNumber: number = 0): SetPostsAction {\n  return {\n    type: SET_POSTS,\n    posts,\n    count,\n    pageNumber,\n  }\n}\n\nexport function setComments(postId: number, comments: CommentDataClass[]): SetCommentsAction {\n  return {\n    type: SET_COMMENTS,\n    postId,\n    comments,\n  }\n}\n\nexport function setOption(key: PreferenceKey, value: any): SetOptionAction {\n  return {\n    type: SET_OPTION,\n    key,\n    value,\n  }\n}\n\nexport function getResults(pageNumber: number = 0): GetResultsAction {\n  return {\n    type: GET_RESULTS,\n    pageNumber,\n  }\n}\n\nexport function getMoreResults(): GetMoreResultsAction {\n  return {\n    type: GET_MORE_RESULTS,\n  }\n}\n\nexport function allowCookiesAction(): AllowCookiesAction {\n  return {\n    type: ALLOW_COOKIES,\n    value: true,\n  }\n}\n\nexport function enterFullscreen(postId: number): EnterFullcreenAction {\n  return {\n    type: ENTER_FULLSCREEN,\n    postId,\n  }\n}\n\nexport function exitFullscreen(): ExitFullscreenAction {\n  return {\n    type: EXIT_FULLSCREEN,\n  }\n}\n\nexport function setFullScreenPost(postId: number): SetFullScreenPostAction {\n  return {\n    type: SET_FULLSCREEN_POST,\n    postId,\n  }\n}\n","/**\r\n * Metadata. Describes the kind of tag.\r\n */\r\nexport enum TagType {\r\n  GENERAL = 'general',\r\n  CHARACTER = 'character',\r\n  AMBIGUOUS = 'ambiguous',\r\n  ARTIST = 'artist',\r\n  COPYRIGHT = 'copyright',\r\n  RATING = 'rating',\r\n  SOURCE = 'source',\r\n  METADATA = 'metadata',\r\n}\r\n\r\n/**\r\n * Describes how the tag should influence the search.\r\n */\r\nexport enum Modifier {\r\n  PLUS = '+',\r\n  MINUS = '-',\r\n  OR = '~',\r\n}\r\n\r\n/**\r\n * Type of a post according to the backend.\r\n */\r\nexport enum PostType {\r\n  VIDEO = 'video',\r\n  IMAGE = 'image',\r\n}\r\n\r\n/**\r\n * Derived form PostType. On the frontend I split PostType.IMAGE into GIF and PICTURE.\r\n */\r\nexport enum MediaType {\r\n  VIDEO = 'video',\r\n  PICTURE = 'picture',\r\n  GIF = 'gif',\r\n}\r\n\r\n/**\r\n * The possible layouts.\r\n */\r\nexport enum ResultLayout {\r\n  INFINITE_COLUMN = 'infinite_column',\r\n  PAGES = 'pages',\r\n}\r\n\r\n/**\r\n * All routes of the app.\r\n */\r\nexport enum RouteName {\r\n  SEARCH = '/',\r\n  HELP = '/help',\r\n  SETTINGS = '/settings',\r\n  ABOUT = '/about',\r\n}\r\n\r\n/**\r\n * Explicity rating as provided by the backend.\r\n */\r\nexport enum RatingType {\r\n  SAFE = 'safe',\r\n  QUESTIONABLE = 'questionable',\r\n  EXPLICIT = 'explicit',\r\n}\r\n\r\n/**\r\n * All preferences.\r\n */\r\n\r\nexport enum PreferenceKey {\r\n  INFINITE = 'infinite',\r\n  RATED = 'rated',\r\n  RATEDThreshold = 'ratedThreshold',\r\n  ORIGINALS = 'originals',\r\n  COOKIES = 'cookies',\r\n  PRELOAD_VIDEOS = 'preloadVideos',\r\n  TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount',\r\n  RESULTS_LAYOUT = 'resultsLayout',\r\n  PAGE_SIZE = 'pageSize',\r\n  USE_CORS_PROXY = 'useCorsProxy',\r\n  SHOW_METADATA = 'showMetadata',\r\n  SHOW_COMMENTS = 'showComments',\r\n  SORT = 'sort',\r\n}\r\n\r\n/**\r\n * One-time definition of an empty function. Reusing this improves React's performance as it does not break memoization.\r\n */\r\nexport const NO_OP = () => {}\r\n\r\n/**\r\n * Same data as a tag but different names\r\n */\r\nexport type TagLike = {\r\n  name: string\r\n  posts: number\r\n  types: TagType[]\r\n}\r\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport { useSelector } from 'react-redux'\nimport { allowCookiesAction } from '../../redux/actions'\nimport { selectCookies } from '../../redux/selectors'\nimport useAction from '../../hooks/useAction'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: ${theme.colors.backgroundColor2};\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const cookies = useSelector(selectCookies)\n  const onClick = useAction(allowCookiesAction)\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={onClick} aria-label='Allow Cookies'>\n        Got it\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.backgroundColor2};\n      background-color: ${theme.colors.backgroundColor};\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    // Not a touch device\n    // Touch devices have nice scrollbars by default\n    @media (pointer: fine) {\n      // Underline stuff that is focused on non-touch devices\n      // makes keyboard navigation clearer\n      :focus {\n        text-decoration: underline;\n      }\n\n      ::-webkit-scrollbar {\n        height: 8px;\n        transition: all ${theme.timings.transitionTime} ease-in-out;\n\n        :hover {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      /* Track */\n      ::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      /* Handle */\n      :hover {\n        ::-webkit-scrollbar {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: ${theme.colors.layerBg};\n        border-radius: 1000px;\n\n        :hover {\n          background: ${theme.colors.layerBgHighlight};\n        }\n      }\n    }\n  `\n)\n","const theme = {\n  dimensions: {\n    borderRadius: '3px',\n    borderWidth: '2px',\n    spacing: '4px',\n    bigSpacing: '8px',\n    hugeSpacing: '16px',\n    gutter: '8px',\n    blockHeight: '32px',\n    bodyWidth: '1000px',\n  },\n  colors: {\n    accentColor: '#ee3344',\n    hoverAccent: '#ee3344',\n    backgroundColor: '#121212',\n    backgroundColor2: '#fff',\n    subduedText: '#ffffff80',\n    layerBg: '#ffffff11',\n    layerBgSolid: '#222222',\n    layerBgHighlight: '#ffffff22',\n    liked: '#ff0d50',\n  },\n  shadow: {\n    radius: '4px',\n    color: '#000',\n  },\n  timings: {\n    transitionTime: '0.2s',\n    longTransitionTime: '0.2s',\n  },\n  fontSizes: {\n    content: '15px',\n    bigTitle: '24px',\n  },\n}\n\nexport default theme\n\nexport type ThemeType = typeof theme\n","import produce from 'immer'\r\nimport { PreferenceKey, ResultLayout } from '../../data/types'\r\nimport { AppAction, SET_OPTION, ALLOW_COOKIES } from '../actions'\r\n\r\nexport interface PreferencesState {\r\n  infinite: boolean\r\n  rated: boolean\r\n  ratedThreshold: number\r\n  originals: boolean\r\n  cookies: boolean\r\n  preloadVideos: boolean\r\n  tagSuggestionsCount: number\r\n  resultsLayout: ResultLayout\r\n  pageSize: number\r\n  useCorsProxy: boolean\r\n  showMetadata: boolean\r\n  showComments: boolean\r\n  sort: 'score' | 'date'\r\n}\r\n\r\nconst initialPreferencesState: PreferencesState = {\r\n  infinite: true,\r\n  rated: false,\r\n  ratedThreshold: 1,\r\n  originals: false,\r\n  cookies: false,\r\n  preloadVideos: false,\r\n  tagSuggestionsCount: 20,\r\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\r\n  pageSize: 20,\r\n  useCorsProxy: false,\r\n  showMetadata: false,\r\n  showComments: false,\r\n  sort: 'date',\r\n}\r\n\r\nfunction setOption<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\r\n  return produce(state, (draft) => {\r\n    draft[key] = value\r\n  })\r\n}\r\n\r\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_OPTION:\r\n      return setOption(state, action.key, action.value)\r\n    case ALLOW_COOKIES:\r\n      return setOption(state, PreferenceKey.COOKIES, action.value)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default preferences\r\n","import TagDataClass from '../data/TagDataClass'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { tagsToString } from '../data/utils'\n\nenum AnalyticsEventId {\n  SEARCH = 'r34_search',\n}\n\n/**\n * Should be called whenever a new search is started.\n */\nexport const searchEvent = (\n  activeTags: Record<string, TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n) => ({\n  id: AnalyticsEventId.SEARCH,\n  payload: {\n    active_tags: tagsToString(activeTags),\n    page_number,\n    preferences,\n  },\n})\n","import produce from 'immer'\nimport CommentDataClass from '../../data/CommentDataClass'\nimport PostDataClass from '../../data/PostDataClass'\nimport { SET_POSTS, ADD_POSTS, SET_COMMENTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nconst initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: number, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = postCount\n    draft.pageNumber = pageNumber\n  })\n\nconst setComments = (state: ResultsState, postId: number, comments: CommentDataClass[]) =>\n  produce(state, (draft) => {\n    const postIndex = state.posts.findIndex((p) => p.id === postId)\n    if (postIndex >= 0) {\n      draft.posts[postIndex].comments = comments\n    }\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    case SET_COMMENTS:\n      return setComments(state, action.postId, action.comments)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/TagDataClass'\nimport { TagType } from '../../data/types'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES, ADD_TYPES } from '../actions'\n\nexport interface TagsState {\n  active: Record<string, TagDataClass>\n  aliases: Record<string, TagDataClass[]>\n}\n\nconst initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst addTypes = (state: TagsState, types: TagType[], forTag: string) =>\n  produce(state, (draft) => {\n    debugger\n    draft.active[forTag].types = types\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    case ADD_TYPES:\n      return addTypes(state, action.types, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nconst initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\n\nexport default combineReducers({ tags, results, preferences, reader })\n","import { AppAction, SET_POSTS, ADD_POSTS } from '../actions'\nimport firebase from 'firebase/app'\nimport 'firebase/analytics'\nimport { searchEvent } from '../../analytics/events'\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\nimport { MiddlewareAPI, Dispatch } from 'redux'\n\nconst config = {\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\n  authDomain: 'r34-react.firebaseapp.com',\n  databaseURL: 'https://r34-react.firebaseio.com',\n  projectId: 'r34-react',\n  storageBucket: 'r34-react.appspot.com',\n  messagingSenderId: '844749417844',\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\n  measurementId: 'G-27J3QXZ8YR',\n}\n\nlet firebaseApp: firebase.app.App\nlet analytics: firebase.analytics.Analytics\n\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\n  const state = store.getState()\n  const cookies = selectCookies(state)\n\n  // Only send analytics if the user consented\n  if (cookies) {\n    if (!firebaseApp) {\n      firebaseApp = firebase.initializeApp(config)\n      analytics = firebaseApp.analytics()\n    }\n\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\n      const activeTags = selectActiveTags(state)\n      const pageNumber = selectPageNumber(state)\n      const preferences = selectPreferences(state)\n      const { id, payload } = searchEvent(activeTags, pageNumber, preferences)\n      analytics.logEvent<typeof id>(id, payload)\n    }\n  }\n\n  next(action)\n}\n\nexport default eventLogging\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport { AppAction, GET_RESULTS, GET_MORE_RESULTS, addPosts, setPosts, ADD_TAG, addAliases } from '../actions'\nimport api from '../../misc/api'\nimport {\n  selectActiveTags,\n  selectPageNumber,\n  selectHasMoreResults,\n  selectMinRating,\n  selectPageSize,\n  selectSort,\n} from '../selectors'\nimport TagDataClass from '../../data/TagDataClass'\n\nconst apiRequests = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\n  const state = store.getState()\n  const hasMoreResults = selectHasMoreResults(state)\n\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const result = await api.getPosts(activeTags, pageSize, action.pageNumber, minRating, sort)\n\n    store.dispatch(setPosts(result.posts, result.count, action.pageNumber))\n  }\n\n  if (action.type === GET_MORE_RESULTS && hasMoreResults) {\n    const activeTags = selectActiveTags(state)\n    const pageNumber = selectPageNumber(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n\n    const res = await api.getPosts(activeTags, pageSize, pageNumber + 1, minRating, sort)\n\n    store.dispatch(addPosts(res.posts))\n  }\n\n  if (action.type === ADD_TAG) {\n    const activeTags = selectActiveTags(state)\n    const aliases = await api.getAliases(action.tag.name)\n\n    const sanitizedAliases = aliases\n      .sort((a, b) => b.posts - a.posts)\n      .filter((alias) => !(alias.name in activeTags))\n      .map((alias) => new TagDataClass(alias.name, [], alias.posts))\n\n    store.dispatch(addAliases(sanitizedAliases, action.tag.name))\n\n    // Request types for newly added tag\n    if (action.tag.types?.length === 0) {\n      const tags = await api.getTags(action.tag.name)\n      const tag = tags.find((tag) => (tag.name = action.tag.name))\n\n      if (tag) {\n        action.tag.types = tag.types\n        action.tag.count = tag.posts\n      }\n    }\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers'\nimport eventLogging from './middleware/eventLogging'\nimport apiRequests from './middleware/apiRequests'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { getVersion, versionToNumber } from '../data/utils'\n\nconst version = getVersion()\n\nconst persistConfig = {\n  key: 'appstate',\n  version: versionToNumber(version),\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(eventLogging, apiRequests)))\n\nexport const persistor = persistStore(store)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ninterface ErrorBoundaryProps {\r\n  fallback: JSX.Element\r\n  children: JSX.Element\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\r\nimport FlexImage from '../styled/FlexImage'\r\nimport theme from '../../misc/theme'\r\nimport GlobalStyles from '../../GlobalStyles'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  align-content: center;\r\n  padding: 30px;\r\n  background: ${({ theme }) => theme.colors.backgroundColor};\r\n\r\n  > * {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default function ErrorScreen() {\r\n  return (\r\n    <FullScreenCentered theme={theme}>\r\n      <GlobalStyles theme={theme} />\r\n      <FlexImage src={outOfResultsPicture} alt='Shironeko does not understand' />\r\n      <h1>Sorry about that...</h1>\r\n      <ResetButton theme={theme} />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport CookieConfirmation from './components/widgets/CookieConfirmation'\nimport GlobalStyles from './GlobalStyles'\nimport theme from './misc/theme'\nimport { persistor, store } from './redux/store'\nimport { RouteName } from './data/types'\nimport LoadingScreen from './components/pages/LoadingScreen'\nimport ErrorBoundary from './components/features/ErrorBoundary'\nimport ErrorScreen from './components/pages/ErrorScreen'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\nconst About = React.lazy(() => import('./components/pages/About'))\n\nexport default function App() {\n  return (\n    <ErrorBoundary fallback={<ErrorScreen />}>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <PersistGate loading={<LoadingScreen />} persistor={persistor}>\n            <GlobalStyles />\n            <HashRouter>\n              <Suspense fallback={<LoadingScreen />}>\n                <Switch>\n                  <Route exact path={RouteName.HELP}>\n                    <Help />\n                  </Route>\n                  <Route exact path={RouteName.SETTINGS}>\n                    <Settings />\n                  </Route>\n                  <Route exact path={RouteName.ABOUT}>\n                    <About />\n                  </Route>\n                  <Route path={RouteName.SEARCH}>\n                    <Search />\n                  </Route>\n                </Switch>\n              </Suspense>\n              <CookieConfirmation />\n            </HashRouter>\n          </PersistGate>\n        </Provider>\n      </ThemeProvider>\n    </ErrorBoundary>\n  )\n}\n","// Polyfills\nimport 'whatwg-fetch'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n"],"sourceRoot":""}