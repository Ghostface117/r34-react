{"version":3,"sources":["icons/R34Icon.tsx","components/features/Header.tsx","components/common/Toggle.tsx","hooks/usePreference.tsx","icons/TypeIcon.tsx","hooks/useThrottledEffect.tsx","components/tagSelector/TagInput.tsx","components/tagSelector/DropdownListEntry.tsx","components/tagSelector/DropdownList.tsx","hooks/useModifier.tsx","components/tagSelector/TagSelector.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/common/Text.tsx","icons/Icons.tsx","components/common/Lines.tsx","misc/formatting.ts","components/common/Surface.tsx","components/common/FlexPair.tsx","hooks/useToggle.ts","components/common/FlexColumn.tsx","components/tag/TagWrapper.tsx","components/tag/TagName.tsx","components/tag/Alias.tsx","components/tag/AliasesList.tsx","components/tag/Tag.tsx","components/tag/TagList.tsx"],"names":["R34Icon","props","theme","useTheme","xmlns","width","size","height","viewBox","transform","id","cx","cy","fill","stroke","colors","accentColor","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","HeaderWrapper","styled","header","css","flexColumn","flexColumnGap","dimensions","bigSpacing","TitleBar","div","flexRowWithGap","layerBgSolid","gutter","boxShadow","MenuBar","nav","flexRowGap","hugeSpacing","LocationStyledLink","Link","to","current","backgroundColor2","Header","useLocation","pathname","role","href","RouteName","SEARCH","HELP","SETTINGS","Track","defaultBorder","backgroundColor","timings","longTransitionTime","Thumb","supportsAspectRatio","value","Toggle","onToggle","onClick","usePreference","key","dispatch","useDispatch","preferences","useSelector","selectPreferences","setPreference","useCallback","setOption","TypeIcon","types","className","NO_OP","useMemo","find","t","match","useThrottledEffect","callback","delay","deps","lastRun","useRef","Date","now","useEffect","handler","setTimeout","clearTimeout","Input","input","fontSizes","content","borderWidth","TagInput","setValue","onSubmit","handleChange","event","target","handleEnter","onChange","onKeyDown","placeholder","aria-label","EntryWrapper","blockHeight","Name","span","Count","Icon","DropdownListEntry","name","posts","formatTagname","formatCount","ListWrapper","tagSelector","offsetTop","clientHeight","offsetLeft","clientWidth","sizeAndPosition","tagSelectorRef","DropdownList","entries","length","map","entry","order","Modifier","PLUS","MINUS","OR","TagSelectorWrapper","closed","borderRadius","AddButton","ModifierButton","TagSelector","useState","suggestions","setSuggestions","setTagSelectorRef","initialValue","modifier","setModifier","nextModifier","currentIndex","indexOf","useModifier","tagSuggestionsCount","selectTagSuggestionCount","activateTag","addTag","prepareTag","count","a","api","getTags","serializeTagname","newSuggestions","onAddClick","trim","sanitizedTagname","suggestion","s","ref","LabeledToggle","children","FlexPair","OptionsWrapper","gridWithGap","StyledInput","Options","PreferenceKey","RATED","rated","setRated","RATEDThreshold","ratedThreshold","setRatedThreshold","toggleRated","toString","ratedThresholdInternal","setRatedThresholdInternal","onBlur","Number","style","display","type","Title","h2","bigTitle","BigTitle","h1","SmallTitle","h3","Faded","subduedText","StyledIcon","i","color","StyledSvg","svg","icon","prefix","PixivIcon","CharacterIcon","attrs","ArtistIcon","CopyrightIcon","CloseIcon","ExpandIcon","ExternalLinkIcon","DownloadIcon","SourceIcon","RatingIcon","HeartIcon","LinkIcon","BrandIcon","PlayIcon","memo","PauseIcon","ArrowDown","CodeBranchIcon","d","HorizontalLine","layerBg","VerticalLine","numberString","number","toFixed","formatSource","source","url","parseUrl","host","formatDuration","duration","min","Math","trunc","sec","tagname","replace","toLowerCase","formatTagnameAndCount","layer","Wrapper","useToggle","toggleValue","resetValue","FlexColumn","FlexColumnWithSpacing","centeredMaxWidth","TagWrapper","active","fg","bg","transitionTime","switchingColors","collapsed","modifierToStyle","TagNameSpan","TagName","text","tabIndex","AliasWrapper","Alias","handleClick","stopPropagation","tag","TagDataClass","parentRef","AliasesList","aliases","DropdownArrow","Tag","detailed","tagRef","setTagRef","toggleCollapsed","resetCollapsed","activeTags","selectActiveTags","selectAliasesByTagName","filteredAliases","filter","alias","isActive","hasAliases","removeTag","handleArrowClick","onMouseLeave","TagListWrapper","TagList","tags","Object"],"mappings":"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","file":"static/js/0.0bfb1f56.chunk.js","sourcesContent":["import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number }) {\n  const theme = useTheme()\n\n  return (\n    <svg xmlns='http://www.w3.org/2000/svg' width={props.size} height={props.size} viewBox='0 0 12.7 12.7'>\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { boxShadow, flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${boxShadow({ theme })}\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.backgroundColor2};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar role='cell'>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { ThemeType } from '../../misc/theme'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: ThemeType }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setOption } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setPreference = useCallback((value: any) => dispatch(setOption(key, value)), [dispatch, key])\n\n  return [preferences[key], setPreference]\n}\n","import React, { MouseEventHandler, useMemo } from 'react'\nimport { NO_OP } from '../data/types'\nimport { CharacterIcon, CopyrightIcon, ArtistIcon } from './Icons'\n\ninterface TypeIconProps {\n  types?: string[]\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  left?: boolean\n  right?: boolean\n}\n\nexport default function TypeIcon(props: TypeIconProps) {\n  const { types = [], className = '', onClick = NO_OP } = props\n  const interestingType = useMemo(() => types.find((t) => !t.match(/^[general|ambiguous]$/)), [types])\n\n  switch (interestingType) {\n    case 'character':\n      return <CharacterIcon className={className} onClick={onClick} />\n    case 'copyright':\n      return <CopyrightIcon className={className} onClick={onClick} />\n    case 'artist':\n      return <ArtistIcon className={className} onClick={onClick} />\n    default:\n      return null\n  }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * wraps your effect so that it can only be called in a set interval\n */\nexport default function useThrottledEffect(callback: () => void, delay: number, deps: any[] = []) {\n  const lastRun = useRef(Date.now())\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      const now = Date.now()\n      const then = lastRun.current\n\n      if (now - then >= delay) {\n        callback()\n        lastRun.current = now\n      }\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [delay, ...deps])\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Input = styled.input(\n  (props) => css`\n    width: 100%;\n    border: none;\n    outline: none;\n    background: none;\n    font-size: ${props.theme.fontSizes.content};\n    border-top: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n    border-bottom: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n  `\n)\n\ninterface TagInputProps {\n  value: string\n  setValue: (newValue: string) => void\n  onSubmit: () => void\n}\n\nexport default function TagInput(props: TagInputProps) {\n  const { value, setValue, onSubmit } = props\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      setValue(event.target.value)\n    },\n    [setValue]\n  )\n\n  const handleEnter: KeyboardEventHandler = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        onSubmit()\n      }\n    },\n    [onSubmit]\n  )\n\n  return (\n    <Input\n      id='tag-input'\n      value={value}\n      onChange={handleChange}\n      onKeyDown={handleEnter}\n      placeholder='Search for tags'\n      aria-label='Search'\n    />\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TagType } from '../../data/types'\nimport TypeIcon from '../../icons/TypeIcon'\nimport { formatCount, formatTagname } from '../../misc/formatting'\n\ninterface EntryProps {\n  name: string\n  posts: number\n  types: TagType[]\n  onClick: MouseEventHandler\n}\n\nconst EntryWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 48px 1fr auto;\n    min-height: ${theme.dimensions.blockHeight}; // COMPAT: Kiwi Browser\n    height: ${theme.dimensions.blockHeight};\n    background: white;\n    align-items: center;\n  `\n)\n\nconst Name = styled.span`\n  grid-column: 2/3;\n`\n\nconst Count = styled.span`\n  grid-column: 3/4;\n`\n\nconst Icon = styled.div`\n  grid-column: 1/2;\n  text-align: center;\n`\n\nexport default function DropdownListEntry(props: EntryProps) {\n  const { name, posts, types, onClick } = props\n\n  return (\n    <EntryWrapper onClick={onClick}>\n      <Icon>\n        <TypeIcon types={types} />\n      </Icon>\n      <Name>{formatTagname(name)}</Name>\n      <Count>{formatCount(posts)} posts</Count>\n    </EntryWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport DropdownListEntry from './DropdownListEntry'\nimport TagDataClass from '../../data/Tag'\nimport { TagType } from '../../data/types'\nimport { ThemeType } from '../../misc/theme'\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\n\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\n  if (tagSelector) {\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector\n\n    return css`\n      position: absolute;\n      top: ${offsetTop + clientHeight}px;\n      left: ${offsetLeft}px;\n      width: ${clientWidth}px;\n      max-height: 50vh;\n    `\n  }\n\n  return ''\n}\n\nconst ListWrapper = styled.div(\n  (props: { tagSelectorRef: HTMLDivElement | null; theme: ThemeType }) => css`\n    ${flexColumn()}\n    ${flexColumnGap('1px')}\n    ${sizeAndPosition(props.tagSelectorRef)};\n    background: lightgrey;\n    box-sizing: border-box;\n    border: ${props.theme.dimensions.borderWidth} ${props.theme.colors.accentColor} solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    color: black;\n    overflow-y: scroll;\n    z-index: 3;\n  `\n)\n\ninterface DropdownListProps {\n  tagSelectorRef: HTMLDivElement | null\n  entries: {\n    name: string\n    posts: number\n    types: TagType[]\n  }[]\n  onClick: (entry: TagDataClass) => void\n}\n\nexport default function DropdownList(props: DropdownListProps) {\n  const { tagSelectorRef, entries, onClick } = props\n\n  return entries && entries.length > 0 ? (\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\n      {entries.map((entry) => (\n        <DropdownListEntry key={entry.name} onClick={() => onClick(entry)} {...entry} />\n      ))}\n    </ListWrapper>\n  ) : null\n}\n","import { useCallback, useState } from 'react'\nimport { Modifier } from '../data/types'\n\nconst order = [Modifier.PLUS, Modifier.MINUS, Modifier.OR]\n\n/**\n * Small utility hook to abstract the rotating modifier away\n */\nexport default function useModifier(initialValue: Modifier = Modifier.PLUS): [Modifier, () => void] {\n  const [modifier, setModifier] = useState(initialValue)\n\n  const nextModifier = useCallback(() => {\n    const currentIndex = order.indexOf(modifier)\n    const nextIndex = currentIndex + 1\n\n    // make the value rotate\n    setModifier(order[nextIndex % order.length])\n  }, [modifier])\n\n  return [modifier, nextModifier]\n}\n","import React, { useState, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport api from '../../misc/api'\nimport { prepareTag } from '../../misc/prepare'\nimport { AddButton, ModifierButton } from '../common/Buttons'\nimport TagInput from './TagInput'\nimport DropdownList from './DropdownList'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addTag } from '../../redux/actions'\nimport { ThemeType } from '../../misc/theme'\nimport { selectTagSuggestionCount } from '../../redux/selectors'\nimport useThrottledEffect from '../../hooks/useThrottledEffect'\nimport useModifier from '../../hooks/useModifier'\nimport { serializeTagname } from '../../misc/formatting'\nimport { TagLike } from '../../data/types'\n\nconst TagSelectorWrapper = styled.div(\n  (props: { closed: boolean; ref: (ref: HTMLInputElement) => void; theme: ThemeType }) => css`\n    display: flex;\n    background: white;\n    ${props.closed\n      ? css`\n          border-radius: ${props.theme.dimensions.borderRadius};\n        `\n      : css`\n          border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\n\n          > ${AddButton} {\n            border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\n          }\n\n          > ${ModifierButton} {\n            border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\n          }\n        `}\n  `\n)\n\nexport default function TagSelector() {\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState<TagLike[]>([])\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(null)\n  const [modifier, nextModifier] = useModifier()\n\n  const tagSuggestionsCount = useSelector(selectTagSuggestionCount)\n\n  const activateTag = useCallback(\n    ({ name, posts, types }) => {\n      dispatch(\n        addTag(\n          prepareTag({\n            name,\n            types,\n            modifier,\n            count: posts,\n          })\n        )\n      )\n\n      setValue('')\n      setSuggestions([])\n    },\n    [dispatch, modifier]\n  )\n\n  useThrottledEffect(\n    async () => {\n      if (!value) {\n        setSuggestions([])\n        return\n      }\n\n      const newSuggestions = await api.getTags(serializeTagname(value), tagSuggestionsCount)\n\n      setSuggestions(newSuggestions)\n    },\n    300,\n    [tagSuggestionsCount, value]\n  )\n\n  const onAddClick = useCallback(() => {\n    if (value && value.trim()) {\n      const sanitizedTagname = serializeTagname(value)\n      const suggestion = suggestions.find((s) => s.name === sanitizedTagname) || {}\n      activateTag({ ...suggestion, name: value })\n    }\n  }, [value, activateTag, suggestions])\n\n  return (\n    <TagSelectorWrapper ref={setTagSelectorRef} closed={suggestions.length === 0}>\n      <ModifierButton onClick={nextModifier} aria-label='Tag Modifier'>\n        {modifier}\n      </ModifierButton>\n      <TagInput value={value} setValue={setValue} onSubmit={onAddClick} />\n      <AddButton onClick={onAddClick} aria-label='Add Tag'>\n        Add\n      </AddButton>\n      {suggestions.length > 0 && (\n        <DropdownList tagSelectorRef={tagSelectorRef} entries={suggestions} onClick={activateTag} />\n      )}\n    </TagSelectorWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport FlexPair from './FlexPair'\nimport Toggle from './Toggle'\n\ninterface LabeledToggleProps {\n  children: JSX.Element | string\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function LabeledToggle(props: LabeledToggleProps) {\n  const { children, value, onToggle } = props\n\n  return (\n    <FlexPair>\n      <Toggle value={value} onToggle={onToggle} />\n      <span>{children}</span>\n    </FlexPair>\n  )\n}\n","import React, { ChangeEventHandler, useCallback, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport LabeledToggle from '../common/LabeledToggle'\nimport { ThemeType } from '../../misc/theme'\nimport { PreferenceKey } from '../../data/types'\nimport usePreference from '../../hooks/usePreference'\nimport { gridWithGap } from '../../styled/mixins'\n\nconst OptionsWrapper = styled.div`\n  ${gridWithGap}\n`\n\nconst StyledInput = styled.input(\n  (props: { value: string; theme: ThemeType }) => css`\n    background: none;\n    border: none;\n    outline: none;\n    color: ${props.theme.colors.accentColor};\n    width: ${0.65 * props.value.length}em;\n    text-align: right;\n    font-size: ${props.theme.fontSizes.content};\n    margin: -1px 0.2em 0 0.2em;\n\n    ::-webkit-inner-spin-button,\n    ::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    -moz-appearance: textfield;\n  `\n)\n\nexport default function Options() {\n  const [rated, setRated] = usePreference(PreferenceKey.RATED)\n  const [ratedThreshold, setRatedThreshold] = usePreference(PreferenceKey.RATEDThreshold)\n  const toggleRated = useCallback(() => setRated(!rated), [rated, setRated])\n\n  const [ratedThresholdInternal, setRatedThresholdInternal] = useState(ratedThreshold ? ratedThreshold.toString() : '1')\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => setRatedThresholdInternal(event.target.value),\n    []\n  )\n  const onBlur = useCallback(() => setRatedThreshold(Number(ratedThresholdInternal)), [\n    ratedThresholdInternal,\n    setRatedThreshold,\n  ])\n\n  return (\n    <OptionsWrapper>\n      <LabeledToggle value={rated} onToggle={toggleRated}>\n        {rated ? (\n          <div style={{ display: 'flex' }}>\n            <span>More than</span>\n            <StyledInput type='text' value={ratedThresholdInternal} onChange={onChange} onBlur={onBlur} />\n            <span>likes</span>\n          </div>\n        ) : (\n          'Only show Rated Posts'\n        )}\n      </LabeledToggle>\n    </OptionsWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import React, { MouseEventHandler, memo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { NO_OP } from '../data/types'\n\nimport { ThemeType } from '../misc/theme'\n\nconst StyledIcon = styled.i(\n  (props: { color: string; size: number; theme: ThemeType }) => css`\n    color: ${props.color};\n    min-width: ${props.size}px;\n    height: ${props.size}px;\n\n    svg {\n      color: ${props.color};\n    }\n  `\n)\n\nconst StyledSvg = styled.svg(\n  (props: { size: number } & JSX.IntrinsicAttributes) => css`\n    width: ${props.size}px;\n    height: ${props.size}px;\n  `\n)\n\ninterface IconProps {\n  icon: string\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  prefix?: string\n}\n\nconst Icon = (props: IconProps) => {\n  const { icon, className = '', color = 'black', size = 14, onClick = NO_OP, prefix = 'fas' } = props\n\n  if (icon === 'pixiv') {\n    return <PixivIcon {...props} />\n  }\n\n  return (\n    <div onClick={onClick} className={className}>\n      <StyledIcon className={`${prefix} ${icon}`} color={color} size={size} />\n    </div>\n  )\n}\n\nexport const CharacterIcon = styled(Icon).attrs({\n  icon: 'fa-user',\n})``\n\nexport const ArtistIcon = styled(Icon).attrs({\n  icon: 'fa-pen',\n})``\n\nexport const CopyrightIcon = styled(Icon).attrs({\n  icon: 'fa-copyright',\n})``\n\nexport const CloseIcon = styled(Icon).attrs({\n  icon: 'fa-times',\n})``\n\nexport const ExpandIcon = styled(Icon).attrs({\n  icon: 'fa-expand',\n})``\n\nexport const ExternalLinkIcon = styled(Icon).attrs({\n  icon: 'fa-external-link-alt',\n})``\n\nexport const DownloadIcon = styled(Icon).attrs({\n  icon: 'fa-download',\n})``\n\nexport const SourceIcon = styled(Icon).attrs({\n  icon: 'fa-hashtag',\n})``\n\nexport const RatingIcon = styled(Icon).attrs({\n  icon: 'fa-registered',\n})``\n\nexport const HeartIcon = styled(Icon).attrs({\n  icon: 'fa-heart',\n})``\n\nexport const LinkIcon = styled(Icon).attrs({\n  icon: 'fa-link',\n})``\n\nexport const BrandIcon = styled(Icon).attrs({\n  prefix: 'fab',\n})``\n\nexport const PlayIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-play',\n  })``\n)\n\nexport const PauseIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-pause',\n  })``\n)\n\nexport const ArrowDown = styled(Icon).attrs({\n  icon: 'fa-caret-down',\n})``\n\nexport const CodeBranchIcon = styled(Icon).attrs({\n  icon: ' fa-code-branch',\n})``\n\nconst PixivIcon = (props: Omit<IconProps, 'icon'>) => {\n  const { color = 'black', size = 14, onClick = NO_OP } = props\n\n  return (\n    <StyledSvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' size={size} onClick={onClick}>\n      <path\n        fill={color}\n        d='M4.935 0A4.924 4.924 0 0 0 0 4.935v14.13A4.924 4.924 0 0 0 4.935 24h14.13A4.924 4.924 0 0 0 24 19.065V4.935A4.924 4.924 0 0 0 19.065 0zm7.81 4.547c2.181 0 4.058.676 5.399 1.847a6.118 6.118 0 0 1 2.116 4.66c.005 1.854-.88 3.476-2.257 4.563-1.375 1.092-3.225 1.697-5.258 1.697-2.314 0-4.46-.842-4.46-.842v2.718c.397.116 1.048.365.635.779H5.79c-.41-.41.19-.65.644-.779V7.666c-1.053.81-1.593 1.51-1.868 2.031.32 1.02-.284.969-.284.969l-1.09-1.73s3.868-4.39 9.553-4.39zm-.19.971c-1.423-.003-3.184.473-4.27 1.244v8.646c.988.487 2.484.832 4.26.832h.01c1.596 0 2.98-.593 3.93-1.533.952-.948 1.486-2.183 1.492-3.683-.005-1.54-.504-2.864-1.42-3.86-.918-.992-2.274-1.645-4.002-1.646Z'\n      />\n    </StyledSvg>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname.replace(/_/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n","import styled from 'styled-components'\nimport { borderRadius, boxShadow, gutter, layer } from '../../styled/mixins'\n\nexport default styled.div`\n  display: grid;\n  ${gutter}\n  ${layer}\n  ${boxShadow}\n  ${borderRadius}\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\ninterface FlexPairProps {\n  children: [JSX.Element, JSX.Element]\n}\n\nconst Wrapper = styled.div`\n  ${flexRowWithGap}\n`\n\nexport default function FlexPair({ children }: FlexPairProps) {\n  return <Wrapper>{children}</Wrapper>\n}\n","import { useCallback, useState } from 'react'\n\n/**\n * A small wrapper for a useState<boolean> that is primarily used for toggling.\n * Saves me a few useCallbacks.\n */\nexport default function useToggle(initialValue = false): [boolean, () => void, () => void] {\n  const [value, setValue] = useState<boolean>(initialValue)\n  const toggleValue = useCallback(() => setValue(!value), [value])\n  const resetValue = useCallback(() => setValue(initialValue), [initialValue])\n\n  return [value, toggleValue, resetValue]\n}\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\n\nimport { ThemeType } from '../../misc/theme'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst dropdownBorderRadius = (collapsed: boolean, theme: ThemeType) =>\n  collapsed ? theme.dimensions.borderRadius : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`\n\nconst switchingColors = (active: boolean, theme: ThemeType) => {\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor\n\n  return css`\n    color: ${fg};\n    background-color: ${bg};\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\n    transition: all ${theme.timings.transitionTime} ease-out;\n\n    svg {\n      color: ${fg};\n    }\n\n    cursor: pointer;\n\n    :hover,\n    :focus,\n    :active {\n      border-color: ${theme.colors.backgroundColor2};\n      color: ${theme.colors.backgroundColor2};\n\n      svg {\n        color: ${theme.colors.backgroundColor2};\n      }\n    }\n\n    :active {\n      transform: scale(1.05);\n    }\n  `\n}\n\nconst TagWrapper = styled.div(\n  (props: { active: boolean; collapsed: boolean; onMouseLeave: MouseEventHandler; theme: DefaultTheme }) =>\n    css`\n      ${flexRowWithGap({ theme: props.theme })}\n      ${switchingColors(props.active, props.theme)}\n      padding: 0 ${props.theme.dimensions.gutter};\n      height: ${props.theme.dimensions.blockHeight};\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\n      font-size: ${props.theme.fontSizes.content};\n    `\n)\n\nexport default TagWrapper\n","import styled, { css } from 'styled-components'\nimport { Modifier, TagType } from '../../data/types'\nimport { formatTagnameAndCount } from '../../misc/formatting'\n\ninterface TagNameProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n  types?: TagType[]\n}\n\nconst modifierToStyle = {\n  [Modifier.PLUS]: css``,\n  [Modifier.MINUS]: css`\n    text-decoration: line-through;\n  `,\n  [Modifier.OR]: css`\n    font-style: italic;\n  `,\n}\n\nconst TagNameSpan = styled.span(\n  ({ modifier = Modifier.PLUS }: Pick<TagNameProps, 'modifier'>) => css`\n    ${modifierToStyle[modifier]};\n  `\n)\n\nexport default function TagName(props: TagNameProps) {\n  const { modifier, name, count } = props\n\n  const text = formatTagnameAndCount(name, count)\n\n  return (\n    <TagNameSpan modifier={modifier} tabIndex={0}>\n      {text}\n    </TagNameSpan>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport { addTag } from '../../redux/actions'\nimport { flexRowWithGap } from '../../styled/mixins'\nimport TagName from './TagName'\n\ninterface AliasProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n}\n\nconst AliasWrapper = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    padding: 0 ${theme.dimensions.bigSpacing};\n    height: ${theme.dimensions.blockHeight};\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport default function Alias(props: AliasProps) {\n  const { modifier, name, count } = props\n\n  const dispatch = useDispatch()\n\n  const handleClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      const tag = new TagDataClass(name, [], count, modifier)\n\n      dispatch(addTag(tag))\n    },\n    [count, dispatch, modifier, name]\n  )\n\n  return (\n    <AliasWrapper onClick={handleClick}>\n      <TagName modifier={modifier} name={name} count={count} />\n    </AliasWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport Alias from './Alias'\nimport { ThemeType } from '../../misc/theme'\n\nconst ListWrapper = styled.div(\n  ({ theme, parentRef }: { theme: ThemeType; parentRef: HTMLDivElement }) => css`\n    position: absolute;\n    top: ${parentRef.offsetTop + parentRef.clientHeight + 4}px;\n    left: ${parentRef.offsetLeft}px;\n    width: ${parentRef.clientWidth + 5}px;\n\n    display: flex;\n    flex-direction: column;\n\n    border-bottom-left-radius: ${theme.dimensions.borderRadius};\n    border-bottom-right-radius: ${theme.dimensions.borderRadius};\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    border-top: none;\n\n    background: ${theme.colors.backgroundColor};\n    z-index: 3;\n    color: ${theme.colors.accentColor};\n\n    > :not(:last-child) {\n      border-bottom: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    }\n  `\n)\n\ninterface AliasesListProps {\n  aliases: TagDataClass[]\n  modifier: Modifier\n  parentRef: HTMLDivElement\n}\n\nexport default function AliasesList(props: AliasesListProps) {\n  const { aliases, modifier, parentRef } = props\n\n  return (\n    <ListWrapper parentRef={parentRef}>\n      {aliases.map(({ name, count }) => (\n        <Alias key={'a_' + name} modifier={modifier} name={name} count={count} />\n      ))}\n    </ListWrapper>\n  )\n}\n","import React, { KeyboardEventHandler, MouseEventHandler, useCallback, useMemo, useState } from 'react'\r\nimport TypeIcon from '../../icons/TypeIcon'\r\nimport { ArrowDown } from '../../icons/Icons'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectActiveTags, selectAliasesByTagName } from '../../redux/selectors'\r\nimport { addTag, removeTag } from '../../redux/actions'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport TagWrapper from './TagWrapper'\r\nimport TagName from './TagName'\r\nimport { Modifier } from '../../data/types'\r\nimport AliasesList from './AliasesList'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\n\r\nconst DropdownArrow = styled(ArrowDown)(\r\n  ({ collapsed, theme }: { collapsed: boolean; theme: DefaultTheme }) => css`\r\n    transition: all ${theme.timings.transitionTime} ease-out;\r\n    ${collapsed\r\n      ? css``\r\n      : css`\r\n          transform: rotate(180deg);\r\n        `}\r\n  `\r\n)\r\n\r\ninterface TagProps extends TagDataClass {\r\n  detailed: boolean\r\n}\r\n\r\nexport default function Tag(props: TagProps) {\r\n  const { name, count, modifier = Modifier.PLUS, types, detailed } = props\r\n\r\n  const [tagRef, setTagRef] = useState<HTMLDivElement | null>(null)\r\n  const [collapsed, toggleCollapsed, resetCollapsed] = useToggle(true)\r\n\r\n  const dispatch = useDispatch()\r\n  const activeTags = useSelector(selectActiveTags)\r\n  const aliases = useSelector(selectAliasesByTagName(name))\r\n\r\n  const filteredAliases = useMemo(() => (aliases ? aliases.filter((alias) => !(alias.name in activeTags)) : []), [\r\n    activeTags,\r\n    aliases,\r\n  ])\r\n\r\n  const isActive = name in activeTags\r\n  const hasAliases = filteredAliases?.length > 0\r\n\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent | React.KeyboardEvent) => {\r\n      event.stopPropagation()\r\n      const tag = new TagDataClass(name, types, count, modifier)\r\n\r\n      if (isActive) {\r\n        dispatch(removeTag(tag))\r\n      } else {\r\n        dispatch(addTag(tag))\r\n      }\r\n    },\r\n    [count, dispatch, isActive, modifier, name, types]\r\n  )\r\n\r\n  const handleArrowClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      toggleCollapsed()\r\n    },\r\n    [toggleCollapsed]\r\n  )\r\n\r\n  const handleEnter: KeyboardEventHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleClick(event)\r\n      }\r\n    },\r\n    [handleClick]\r\n  )\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onClick={handleClick}\r\n      onKeyDown={handleEnter}\r\n      onMouseLeave={resetCollapsed}\r\n      ref={setTagRef}\r\n    >\r\n      {detailed && <TypeIcon types={types} />}\r\n      <TagName modifier={modifier} name={name} count={count} />\r\n      {detailed && hasAliases && (\r\n        <>\r\n          <DropdownArrow onClick={handleArrowClick} collapsed={collapsed} />\r\n          {!collapsed && tagRef && <AliasesList aliases={filteredAliases} modifier={modifier} parentRef={tagRef} />}\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { flexRowGap, flexColumnGap } from '../../styled/mixins'\r\nimport Tag from './Tag'\r\n\r\nconst TagListWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    ${flexRowGap(theme.dimensions.gutter)}\r\n    ${flexColumnGap(theme.dimensions.gutter)}\r\n  `\r\n)\r\n\r\ninterface TagListProps {\r\n  tags: Record<string, TagDataClass>\r\n  className?: string\r\n  detailed: boolean\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, className, detailed } = props\r\n\r\n  return (\r\n    <TagListWrapper className={className}>\r\n      {Object.entries(tags).map(([key, tag]) => (\r\n        <Tag key={key} detailed={detailed} {...tag} />\r\n      ))}\r\n    </TagListWrapper>\r\n  )\r\n}\r\n"],"sourceRoot":""}