{"version":3,"sources":["styled/animations.tsx","components/common/SmallInput.tsx","components/widgets/KofiButton.tsx","components/layout/infinite/InfiniteColumn.tsx","components/post/source/FallbackSource.tsx","components/common/ColoredIconLink.tsx","components/post/source/LinkSource.tsx","components/post/source/SpecialLinkSource.tsx","components/post/source/Source.tsx","icons/PixivIcon.tsx","components/post/details/AdditonalDetails.tsx","components/post/details/Comments.tsx","components/post/details/Metadata.tsx","components/post/details/Rating.tsx","components/post/details/Score.tsx","components/post/details/Details.tsx","components/player/ProgressBar.tsx","icons/PlayPauseIcon.tsx","components/player/Overlay.tsx","components/styled/FlexVideo.tsx","components/player/media/StyledMedia.ts","components/player/media/Video.tsx","components/player/media/Gif.tsx","components/player/media/Picture.tsx","components/player/Player.tsx","components/post/Post.tsx","hooks/useAction.tsx","components/widgets/SearchButton.tsx","components/widgets/ActiveTags.tsx","components/features/Config.tsx","components/widgets/RandomTip.tsx","components/widgets/SearchPlaceholder.tsx","components/widgets/ResultsTitle.tsx","components/layout/LayoutHeader.tsx","components/layout/LayoutOutOfItems.tsx","components/layout/LayoutLoadingItem.tsx","components/layout/pages/PageNavigation.tsx","components/layout/pages/PageLayout.tsx","components/reader/Reader.tsx","hooks/useFullscreenCloseEffect.tsx","components/pages/Search.tsx"],"names":["fadeOut","keyframes","kofiWiggle","StyledInput","styled","input","theme","css","defaultBorder","colors","backgroundColor2","defaultBlock","SmallNumberInput","props","value","onSubmit","className","useState","toString","internalValue","setInternalValue","useEffect","onChange","useCallback","event","target","onBlur","Number","onKeyDown","key","type","Container","div","AButton","a","layerBg","dimensions","borderRadius","text","Text","span","Image","img","KofiButton","id","label","title","href","rel","src","alt","InifinteColumn","Header","items","LoadingItem","hasMoreRows","ItemComponent","loadMore","OutOfItems","isLoading","setLoading","listRef","setListRef","cache","useMemo","CellMeasurerCache","fixedWidth","prependedRows","rowCount","length","isRowLoaded","index","listener","measureAllRows","recomputeRowHeights","forceUpdateGrid","window","addEventListener","removeEventListener","rowRenderer","parent","style","columnIndex","rowIndex","measure","registerChild","virtualRef","onLoad","console","warn","loadMoreRows","params","Promise","reject","resolve","setTimeout","onRowsRendered","ref","child","deferredMeasurementCache","overscanRowCount","rowHeight","width","innerWidth","height","innerHeight","FallbackSource","FlexPair","color","ColoredIconLink","flexRowWithGap","DefaultLinkSource","useTheme","accentColor","formatSource","SpecialLinkSource","Icon","extractFirstElement","split","sources","TwitterIcon","viewBox","xmlns","fill","d","PatreonIcon","path","startsWith","extractSecondElement","DeviantArtIcon","DiscordIcon","TumblrIcon","URL","hostname","Source","parseUrl","links","map","link","source","Object","keys","find","includes","getTitle","AdditionalDetails","flexColumnWithGap","gutter","Comment","flexColumnGap","Username","Message","Faded","Comments","comments","comment","creator","body","Entry","Metadata","created_at","status","formatDateTime","Date","formatTime","now","Rating","toUpperCase","ScorePair","$liked","liked","Score","postId","dispatch","useDispatch","useSelector","selectLikedByPostId","handleClick","stopPropagation","likePost","onClick","boolToNumber","Bar","layer","flexRowGap","hugeSpacing","Menu","MenuEntry","active","DetailsTagList","TagList","Details","NO_OP","activeTab","setActiveTab","selectPostById","rating","score","tags","tagsForRendering","listToMap","showMetadata","selectShowMetadata","showComments","selectShowComments","commentsLength","setTags","setComments","setMetadata","detailed","metadata","Slider","commonStyle","MorphSvg","svg","Wrapper","isVisible","VideoProgressBar","maxValue","handleChange","log","newValue","chromePercentage","Math","round","step","min","max","backgroundImage","ExpandButton","ExpandIcon","dropShadow","CloseButton","CloseIcon","LinkList","ScrollHint","ArrowDown","PlayButton","useToggle","state","toggleState","internalOnClick","x","y","PreviousButton","NextButton","LengthDisplay","spacing","Overlay","togglePlay","isPaused","isPlayable","currentTime","duration","mediaRef","toggleVisible","post","posts","selectPosts","isReaderOpen","selectFullsceenState","useCorsProxy","selectUseCorsProxy","nextIndex","selectNextIndex","previousIndex","selectPreviousIndex","downloadSrc","getCorrectSourceOrigin","big_src","onDownloadClick","download","onExpandClick","exitFullscreen","pause","enterFullscreen","handlePlayPressed","selectPostAt","postAtindex","setFullScreenPost","selectNext","undefined","selectPrevious","onSeek","aria-label","isNaN","formatDuration","FlexVideo","video","flexMedia","preserveAspectRatio","PostVideo","mediaStyle","PostImage","FlexImage","Video","videoRef","setVideoRef","setTime","intervalId","setIntervalId","play","setInterval","clearInterval","paused","preload","selectPreloadVideos","controls","loop","onLoadedMetadata","Gif","thumbnail_src","setPaused","usedSource","loading","Picture","Player","MediaComponent","getMediaType","MediaType","VIDEO","GIF","getMedia","small_src","usedThumbnail","usedSrc","ItemWrapper","PositonWrapper","bodyWidth","PostWrapper","Post","media_type","has_comments","collapsed","toggleCollapsed","originals","selectOriginals","media_src","getCorrectSource","fetchComments","role","useAction","actionCreator","SearchButton","search","getResults","ActiveTags","activeTags","selectActiveTags","numberOfActiveTags","selectNumberOfActiveTags","ConfigWrapper","section","flexColumn","centeredMaxWidth","Config","htmlFor","Surface","TagSelector","Options","tips","Span","RandomTip","tip","floor","random","Placeholder","SearchPlaceholder","ResultsTitle","fullNumber","toggleFullNumber","count","selectCount","formattedCount","toLocaleString","formatCount","LayoutHeader","Div","StyledSurface","StyledImage","LayoutOutOfItems","aliases","selectAliasesAsList","aliasesForRendering","reduce","result","alias","name","outOfResultsPicture","LayoutLoadingItem","Loading","PageRow","Left","Right","PageNumber","RedButton","CurrentNumber","PageNavigation","currentPage","loadPage","lastPage","selectLastPage","loadSpecificPage","newPage","loadFirst","loadLast","loadPrevious","loadNext","FlexColumn","BaseFlexColumn","PageLayout","header","scrollAndLoadPage","document","getElementsByClassName","scrollIntoView","item","FullScreenDiv","backgroundColor","Reader","fullScreenPost","selectFullScreenPost","fullScreenIndex","selectFullScreenIndex","getMoreResults","readerRef","setReaderRef","useThrottledEffect","fullscreenElement","openFullscreen","effect","exit","handler","data","Search","hasMorePosts","selectHasMoreResults","resultsLayout","selectResultsLayout","pageSize","selectPageSize","pageNumber","selectPageNumber","ResultLayout","INFINITE_COLUMN","hasMorePages"],"mappings":"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","file":"static/js/9.84bccaeb.chunk.js","sourcesContent":["import { keyframes } from 'styled-components'\n\nexport const fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`\n\nexport const kofiWiggle = keyframes`\n  0% {\n    transform: rotate(0) scale(1);\n  }\n  60% {\n    transform: rotate(0) scale(1);\n  }\n  75% {\n    transform: rotate(0) scale(1.12);\n  }\n  80% {\n    transform: rotate(0) scale(1.1);\n  }\n  84% {\n    transform: rotate(-10deg) scale(1.1);\n  }\n  88% {\n    transform: rotate(10deg) scale(1.1);\n  }\n  92% {\n    transform: rotate(-10deg) scale(1.1);\n  }\n  96% {\n    transform: rotate(10deg) scale(1.1);\n  }\n  100% {\n    transform: rotate(0) scale(1);\n  }\n`\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst StyledInput = styled.input(\n  ({ theme }) => css`\n    width: 50px;\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n    text-align: center;\n  `\n)\n\ninterface SmallInputProps<T> {\n  value: T\n  onSubmit: (value: T) => void\n  className?: string\n}\n\nexport function SmallTextInput(props: SmallInputProps<string>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value)\n\n  useEffect(() => {\n    setInternalValue(value)\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(internalValue)\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(internalValue)\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='text'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n\nexport function SmallNumberInput(props: SmallInputProps<number>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value.toString())\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      setInternalValue(value.toString())\n    }\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(Number(internalValue))\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(Number(internalValue))\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='number'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { kofiWiggle } from '../../styled/animations'\n\nconst Container = styled.div`\n  display: inline-block;\n  white-space: nowrap;\n`\n\nexport const AButton = styled.a(\n  ({ theme }) => css`\n    box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2);\n    line-height: 36px;\n    display: inline-block;\n    background-color: ${theme.colors.layerBg};\n    padding: 2px 12px;\n    text-align: center;\n    border-radius: ${theme.dimensions.borderRadius};\n    color: ${theme.colors.text};\n    cursor: pointer;\n    overflow-wrap: break-word;\n    vertical-align: middle;\n    border: 0 none #fff;\n    font-family: 'Quicksand', Helvetica, Century Gothic, sans-serif !important;\n    text-decoration: none;\n    text-shadow: none;\n    font-weight: 700;\n    font-size: 14px;\n\n    :visited {\n      color: ${theme.colors.text} !important;\n      text-decoration: none !important;\n    }\n\n    :hover {\n      opacity: 0.8;\n      text-decoration: none !important;\n    }\n\n    :active {\n      opacity: 0.6;\n      text-decoration: none !important;\n    }\n  `\n)\n\nconst Text = styled.span`\n  letter-spacing: -0.15px !important;\n  vertical-align: middle;\n  line-height: 33px !important;\n  padding: 0;\n  text-align: center;\n  text-decoration: none !important;\n  text-shadow: 0 1px 1px rgba(34, 34, 34, 0.05);\n\n  a {\n    text-decoration: none !important;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nconst Image = styled.img`\n  display: initial !important;\n  vertical-align: middle;\n  height: 13px !important;\n  width: 20px !important;\n  padding-top: 0;\n  padding-bottom: 0;\n  border: none;\n  margin-top: 0;\n  margin-right: 5px;\n  margin-left: 0;\n  margin-bottom: 3px;\n  content: url('https://ko-fi.com/img/cup-border.png');\n\n  :after {\n    vertical-align: middle;\n    height: 25px;\n    padding-top: 0;\n    padding-bottom: 0;\n    border: none;\n    margin-top: 0;\n    margin-right: 6px;\n    margin-left: 0;\n    margin-bottom: 4px !important;\n    content: url('https://ko-fi.com/img/whitelogo.svg');\n\n    height: 15px !important;\n    width: 22px !important;\n    display: initial;\n    animation: ${kofiWiggle} 3s infinite;\n  }\n`\n\ninterface KofiButtonProps {\n  id: string\n  label: string\n}\n\nexport default function KofiButton(props: KofiButtonProps) {\n  const { id, label } = props\n\n  return (\n    <Container>\n      <AButton title={label} href={'https://ko-fi.com/' + id} target='_blank' rel='noopener noreferrer'>\n        <Text>\n          <Image src='https://ko-fi.com/img/cup-border.png' className='kofiimg' alt='Ko-Fi button' />\n          {label}\n        </Text>\n      </AButton>\n    </Container>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CellMeasurer, CellMeasurerCache, IndexRange, InfiniteLoader, List } from 'react-virtualized'\nimport LayoutElementProps from '../LayoutElementProps'\n\ninterface InfiniteColumnProps<T> {\n  Header?: (props: LayoutElementProps) => JSX.Element\n  OutOfItems?: (props: LayoutElementProps) => JSX.Element\n  items?: T[]\n  LoadingItem: (props: LayoutElementProps) => JSX.Element\n  hasMoreRows: boolean\n  loadMore: () => void\n  ItemComponent: (props: T & LayoutElementProps) => JSX.Element\n  isLoading: boolean\n  setLoading: (value: boolean) => void\n}\n\nexport default function InifinteColumn<T>(props: InfiniteColumnProps<T>) {\n  const {\n    Header,\n    items = [],\n    LoadingItem,\n    hasMoreRows,\n    ItemComponent,\n    loadMore,\n    OutOfItems,\n    isLoading,\n    setLoading,\n  } = props\n\n  const [listRef, setListRef] = useState<List | null>(null)\n\n  const cache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n      }),\n    []\n  )\n\n  const prependedRows = Header ? 1 : 0\n  const loadingRows = 1\n\n  const rowCount = items.length + prependedRows + loadingRows\n\n  const isRowLoaded = useCallback(\n    ({ index }: { index: number }) => index < prependedRows + items.length + (hasMoreRows ? 0 : 1),\n    [hasMoreRows, items.length, prependedRows]\n  )\n\n  useEffect(() => {\n    if (listRef) {\n      const listener = () => {\n        listRef.measureAllRows()\n        listRef.recomputeRowHeights()\n        listRef.forceUpdateGrid()\n      }\n\n      window.addEventListener('resize', listener)\n\n      return () => {\n        window.removeEventListener('resize', listener)\n      }\n    }\n  }, [listRef])\n\n  const rowRenderer = useCallback(\n    ({ index, key, parent, style }: { index: number; key: any; parent: any; style: any }) => {\n      return (\n        <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n          {({ measure, registerChild }) => {\n            // Index 0\n            if (Header && index < prependedRows) {\n              return <Header style={style} virtualRef={registerChild} onLoad={measure} />\n            }\n\n            // Index 1\n            if (index < prependedRows + items.length) {\n              return (\n                <ItemComponent\n                  style={style}\n                  virtualRef={registerChild}\n                  onLoad={measure}\n                  {...items[index - prependedRows]}\n                />\n              )\n            }\n\n            // Index 2\n            if (index < prependedRows + items.length + loadingRows) {\n              return hasMoreRows || isLoading ? (\n                <LoadingItem style={style} virtualRef={registerChild} onLoad={measure} />\n              ) : OutOfItems && items.length > 0 ? (\n                <OutOfItems style={style} virtualRef={registerChild} onLoad={measure} />\n              ) : (\n                <div></div>\n              )\n            }\n\n            console.warn('index not found / out of bounds. INDEX:', index)\n            return null\n          }}\n        </CellMeasurer>\n      )\n    },\n    [cache, Header, prependedRows, items, ItemComponent, hasMoreRows, isLoading, LoadingItem, OutOfItems]\n  )\n\n  const loadMoreRows = (params: IndexRange) => {\n    if (isLoading || !hasMoreRows) {\n      return Promise.reject(0)\n    }\n\n    setLoading(true)\n    loadMore()\n\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setLoading(false)\n        resolve(1)\n      }, 1000)\n    })\n  }\n\n  return (\n    <InfiniteLoader isRowLoaded={isRowLoaded} loadMoreRows={loadMoreRows} rowCount={rowCount}>\n      {({ onRowsRendered, registerChild }) => {\n        const registerChildHereAswell = (child: List) => {\n          setListRef(child)\n          registerChild(child)\n        }\n        return (\n          <List\n            ref={registerChildHereAswell}\n            onRowsRendered={onRowsRendered}\n            rowRenderer={rowRenderer}\n            deferredMeasurementCache={cache}\n            overscanRowCount={10}\n            rowCount={items.length + prependedRows + loadingRows}\n            rowHeight={cache.rowHeight}\n            width={window.innerWidth}\n            height={window.innerHeight}\n          />\n        )\n      }}\n    </InfiniteLoader>\n  )\n}\n","import React from 'react'\r\nimport { SourceIcon } from '../../../icons/FontAwesomeIcons'\r\nimport FlexPair from '../../common/FlexPair'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function FallbackSource({ value }: SourceProps) {\r\n  return (\r\n    <FlexPair>\r\n      <SourceIcon color='white' />\r\n      <span>{value}</span>\r\n    </FlexPair>\r\n  )\r\n}\r\n","import styled, { css } from 'styled-components'\r\nimport { flexRowWithGap } from '../../styled/mixins'\r\n\r\nconst ColoredIconLink = styled.a(\r\n  ({ color, theme }) => css`\r\n    ${flexRowWithGap({ theme })}\r\n    ${color\r\n      ? css`\r\n          color: ${color} !important;\r\n        `\r\n      : ''};\r\n    white-space: nowrap;\r\n\r\n    svg {\r\n      height: 16px;\r\n    }\r\n  `\r\n)\r\n\r\nexport default ColoredIconLink\r\n","import React from 'react'\r\nimport { useTheme } from 'styled-components'\r\nimport { LinkIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { formatSource } from '../../../misc/formatting'\r\nimport ColoredIconLink from '../../common/ColoredIconLink'\r\nimport SourceProps from './SourceProps'\r\n\r\nexport default function DefaultLinkSource({ value }: SourceProps) {\r\n  const color = useTheme().colors.accentColor\r\n  const title = formatSource(value)\r\n\r\n  return (\r\n    <ColoredIconLink color={color} href={value} target='_blank' rel='noopener noreferrer' className='source'>\r\n      <LinkIcon color={color} />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ColoredIconLink from '../../common/ColoredIconLink'\r\n\r\ninterface SpecialLinkSourceProps {\r\n  value: string\r\n  color: string\r\n  Icon: (props: unknown) => JSX.Element\r\n  title: string\r\n}\r\n\r\nexport default function SpecialLinkSource(props: SpecialLinkSourceProps) {\r\n  const { value, color, Icon, title } = props\r\n  return (\r\n    <ColoredIconLink href={value} target='_blank' rel='noopener noreferrer' className='source' color={color}>\r\n      <Icon />\r\n      {title}\r\n    </ColoredIconLink>\r\n  )\r\n}\r\n","import React from 'react'\nimport { parseUrl } from '../../../data/utils'\nimport { DeviantArtIcon, DiscordIcon, PatreonIcon, TumblrIcon, TwitterIcon } from '../../../icons/FontAwesomeIcons'\nimport { PixivIcon } from '../../../icons/PixivIcon'\nimport FallbackSource from './FallbackSource'\nimport DefaultLinkSource from './LinkSource'\nimport SourceProps from './SourceProps'\nimport SpecialLinkSource from './SpecialLinkSource'\n\n/**\n * Cut away all the unnecessary parts of the link\n */\nfunction extractFirstElement(value: string) {\n  return value.split(' ')[0].split('?')[0].split('/')[0]\n}\n\nfunction extractSecondElement(value: string) {\n  return value.split(' ')[0].split('?')[0].split('/')[1]\n}\n\ntype SourceMapping = [string, (props: any) => JSX.Element, (value: string) => string]\n\nconst sources: Record<string, SourceMapping> = {\n  'twitter.com/': ['#1da1f2', TwitterIcon, (value) => extractFirstElement(value.split('twitter.com/')[1])],\n  'pixiv.net/': ['#0096FA', PixivIcon, () => 'Pixiv'],\n  'patreon.com/': [\n    '#FF424D',\n    PatreonIcon,\n    (value) => {\n      const path = value.split('patreon.com/')[1]\n\n      return path.startsWith('posts/') ? extractSecondElement(path) : extractFirstElement(path)\n    },\n  ],\n  'deviantart.com/': ['#00e59b', DeviantArtIcon, (value) => extractFirstElement(value.split('deviantart.com/')[1])],\n  'discordapp.com/': ['#7289DA', DiscordIcon, () => 'Discord'],\n  'tumblr.com': ['#75869C', TumblrIcon, (value) => new URL(value).hostname.split('.')[0]],\n}\n\nexport default function Source({ value }: SourceProps) {\n  if (parseUrl(value)) {\n    // Sources can contain multiple links\n    const links = value.split(' ')\n    return (\n      <>\n        {links.map((link) => {\n          const source = Object.keys(sources).find((key) => link.includes(key))\n\n          if (source) {\n            const [color, Icon, getTitle] = sources[source]\n\n            return <SpecialLinkSource key={link} value={link} color={color} Icon={Icon} title={getTitle(link)} />\n          }\n\n          return <DefaultLinkSource key={link} value={link} />\n        })}\n      </>\n    )\n  }\n\n  return <FallbackSource value={value} />\n}\n","import React, { SVGProps } from 'react'\n\nexport function PixivIcon(props: SVGProps<SVGElement>) {\n  return (\n    <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        fill='currentColor'\n        d='M4.935 0A4.924 4.924 0 0 0 0 4.935v14.13A4.924 4.924 0 0 0 4.935 24h14.13A4.924 4.924 0 0 0 24 19.065V4.935A4.924 4.924 0 0 0 19.065 0zm7.81 4.547c2.181 0 4.058.676 5.399 1.847a6.118 6.118 0 0 1 2.116 4.66c.005 1.854-.88 3.476-2.257 4.563-1.375 1.092-3.225 1.697-5.258 1.697-2.314 0-4.46-.842-4.46-.842v2.718c.397.116 1.048.365.635.779H5.79c-.41-.41.19-.65.644-.779V7.666c-1.053.81-1.593 1.51-1.868 2.031.32 1.02-.284.969-.284.969l-1.09-1.73s3.868-4.39 9.553-4.39zm-.19.971c-1.423-.003-3.184.473-4.27 1.244v8.646c.988.487 2.484.832 4.26.832h.01c1.596 0 2.98-.593 3.93-1.533.952-.948 1.486-2.183 1.492-3.683-.005-1.54-.504-2.864-1.42-3.86-.918-.992-2.274-1.645-4.002-1.646Z'\n      />\n    </svg>\n  )\n}\n","import styled from 'styled-components'\r\nimport { flexColumnWithGap, gutter } from '../../../styled/mixins'\r\n\r\nexport const AdditionalDetails = styled.div`\r\n  ${flexColumnWithGap}\r\n  ${gutter}\r\n  \r\n  flex-wrap: wrap;\r\n  padding-top: 0;\r\n  grid-row: 4/5;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CommentDataClass from '../../../data/CommentDataClass'\r\nimport { flexColumnGap } from '../../../styled/mixins'\r\nimport { Faded } from '../../common/Text'\r\nimport { AdditionalDetails } from './AdditonalDetails'\r\n\r\nconst Comment = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${flexColumnGap('4px')}\r\n`\r\n\r\nconst Username = styled.span`\r\n  line-height: 20px;\r\n`\r\n\r\nconst Message = styled(Faded)`\r\n  line-height: 20px;\r\n`\r\n\r\ninterface CommentsProps {\r\n  comments?: CommentDataClass[]\r\n}\r\n\r\nexport default function Comments(props: CommentsProps) {\r\n  const { comments = [] } = props\r\n\r\n  return (\r\n    <AdditionalDetails>\r\n      {comments &&\r\n        comments.map((comment, index) => (\r\n          <Comment key={index}>\r\n            <Username>{comment.creator}</Username>\r\n            <Message>{comment.body}</Message>\r\n          </Comment>\r\n        ))}\r\n    </AdditionalDetails>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PostDataClass from '../../../data/PostDataClass'\r\nimport { CalendarIcon, CheckIcon, ImageIcon } from '../../../icons/FontAwesomeIcons'\r\nimport { formatDateTime, formatTime } from '../../../misc/formatting'\r\nimport FlexPair from '../../common/FlexPair'\r\nimport { Faded } from '../../common/Text'\r\nimport { AdditionalDetails } from './AdditonalDetails'\r\n\r\nconst Entry = styled(Faded)`\r\n  white-space: nowrap;\r\n`\r\n\r\ntype MetadataProps = Pick<PostDataClass, 'created_at' | 'status' | 'width' | 'height'>\r\n\r\nexport default function Metadata(props: MetadataProps) {\r\n  const { created_at, status, width, height } = props\r\n\r\n  // Status icon is static for now as I don't know what other statuses there are...Probably \"deleted\" or something..\r\n  return (\r\n    <AdditionalDetails>\r\n      <FlexPair>\r\n        <CalendarIcon />\r\n        <Entry>\r\n          {formatDateTime(new Date(created_at))} ({formatTime(Date.now() - created_at)} ago)\r\n        </Entry>\r\n      </FlexPair>\r\n\r\n      <FlexPair>\r\n        <CheckIcon />\r\n        <Entry>{status}</Entry>\r\n      </FlexPair>\r\n\r\n      <FlexPair>\r\n        <ImageIcon />\r\n        <Entry>\r\n          {width} x {height}\r\n        </Entry>\r\n      </FlexPair>\r\n    </AdditionalDetails>\r\n  )\r\n}\r\n","import React from 'react'\nimport { RatingType } from '../../../data/types'\nimport { RatingIcon } from '../../../icons/FontAwesomeIcons'\nimport FlexPair from '../../common/FlexPair'\n\nexport default function Rating(props: { value: RatingType }) {\n  return (\n    <FlexPair>\n      <RatingIcon color='white' />\n      <span>{props.value[0].toUpperCase()}</span>\n    </FlexPair>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { boolToNumber } from '../../../data/utils'\nimport { HeartIcon } from '../../../icons/FontAwesomeIcons'\nimport { likePost } from '../../../redux/actions'\nimport { selectLikedByPostId } from '../../../redux/selectors'\nimport FlexPair from '../../common/FlexPair'\n\nconst ScorePair = styled(FlexPair)(\n  ({ $liked, theme }: { $liked: boolean; theme: DefaultTheme }) => css`\n    transition: transform 0.1s ease-out;\n\n    ${$liked\n      ? css`\n          color: ${theme.colors.liked};\n\n          svg {\n            color: ${theme.colors.liked};\n          }\n        `\n      : css``}\n\n    :active {\n      transform: scale(1.1);\n    }\n  `\n)\n\nexport default function Score(props: { value: number; postId: number }) {\n  const { value, postId } = props\n\n  const dispatch = useDispatch()\n\n  const liked = useSelector(selectLikedByPostId(postId))\n  const handleClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n\n      if (!liked) {\n        dispatch(likePost(postId))\n      }\n    },\n    [dispatch, liked, postId]\n  )\n\n  return (\n    <ScorePair onClick={handleClick} $liked={liked}>\n      <HeartIcon color='white' />\n      <span>{value + boolToNumber(liked)}</span>\n    </ScorePair>\n  )\n}\n","import React, { MouseEventHandler, useCallback, useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport PostDataClass from '../../../data/PostDataClass'\nimport { ActiveTab, NO_OP } from '../../../data/types'\nimport { listToMap } from '../../../data/utils'\nimport { selectPostById, selectShowComments, selectShowMetadata } from '../../../redux/selectors'\nimport { flexRowGap, flexRowWithGap, gutter, layer } from '../../../styled/mixins'\nimport TagList from '../../tag/TagList'\nimport Source from '../source/Source'\nimport Comments from './Comments'\nimport Metadata from './Metadata'\nimport Rating from './Rating'\nimport Score from './Score'\n\nconst Bar = styled.div(\n  ({ theme }) => css`\n    grid-row: 2/3;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    ${layer({ theme })}\n    padding: ${theme.dimensions.gutter};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n    border-radius: 0 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius};\n  `\n)\n\nconst Menu = styled.div`\n  ${flexRowWithGap}\n  ${gutter}\n  justify-content: space-around;\n  margin-top: 8px;\n  grid-row: 3/4;\n`\n\nconst MenuEntry = styled.span`\n  ${({ active, theme }: { active: boolean; theme: DefaultTheme }) =>\n    active\n      ? css`\n          color: ${theme.colors.accentColor};\n        `\n      : ''}\n`\n\nconst DetailsTagList = styled(TagList)(\n  ({ theme }) => css`\n    grid-row: 4/5;\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\ninterface DetailsProps {\n  postId: number\n  onLoad?: () => void\n  activeTab: ActiveTab\n  setActiveTab: React.Dispatch<React.SetStateAction<ActiveTab>>\n}\n\nexport default function Details(props: DetailsProps) {\n  const { postId, onLoad = NO_OP, activeTab, setActiveTab } = props\n  const { rating, score, tags, source, created_at, status, height, width, comments } = useSelector(\n    selectPostById(postId)\n  ) as PostDataClass\n  const tagsForRendering = useMemo(() => listToMap(tags, 'name'), [tags])\n  const showMetadata = useSelector(selectShowMetadata)\n  const showComments = useSelector(selectShowComments)\n\n  const commentsLength = comments?.length || 0\n\n  const setTags: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      setActiveTab('tags')\n    },\n    [setActiveTab]\n  )\n\n  const setComments: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      setActiveTab('comments')\n    },\n    [setActiveTab]\n  )\n\n  const setMetadata: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      setActiveTab('metadata')\n    },\n    [setActiveTab]\n  )\n\n  useEffect(() => {\n    onLoad()\n  }, [onLoad, activeTab])\n\n  return (\n    <>\n      <Bar>\n        <Rating value={rating} />\n        <Score value={score} postId={postId} />\n        {!!source && <Source value={source} />}\n      </Bar>\n      {((showComments && commentsLength > 0) || showMetadata) && (\n        <Menu>\n          <MenuEntry active={activeTab === 'tags'} onClick={setTags}>\n            Tags\n          </MenuEntry>\n          {showComments && commentsLength > 0 && (\n            <MenuEntry active={activeTab === 'comments'} onClick={setComments}>\n              Comments\n            </MenuEntry>\n          )}\n          {showMetadata && (\n            <MenuEntry active={activeTab === 'metadata'} onClick={setMetadata}>\n              Metadata\n            </MenuEntry>\n          )}\n        </Menu>\n      )}\n\n      {\n        {\n          tags: <DetailsTagList tags={tagsForRendering} detailed={false} />,\n          comments: <Comments comments={comments} />,\n          metadata: <Metadata created_at={created_at} status={status} width={width} height={height} />,\n        }[activeTab]\n      }\n    </>\n  )\n}\n","import React, { ChangeEventHandler, MouseEventHandler, useCallback, useEffect, useState } from 'react'\r\nimport styled, { css, useTheme } from 'styled-components'\r\n\r\nfunction thumbStyle() {\r\n  const commonStyle = css`\r\n    height: 16px;\r\n    width: 16px;\r\n    border-radius: 100px;\r\n    background: #ffffff;\r\n    cursor: pointer;\r\n  `\r\n\r\n  return css`\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      ${commonStyle}\r\n    }\r\n\r\n    &::-moz-range-thumb {\r\n      ${commonStyle}\r\n    }\r\n\r\n    &::-ms-thumb {\r\n      ${commonStyle}\r\n    }\r\n  `\r\n}\r\n\r\nfunction trackStyle() {\r\n  return css`\r\n    -webkit-appearance: none;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 100px;\r\n    height: 6px;\r\n\r\n    &::-moz-range-progress {\r\n      background-color: ${(props) => props.theme.colors.accentColor};\r\n    }\r\n\r\n    &::-ms-fill-lower {\r\n      background-color: ${(props) => props.theme.colors.accentColor};\r\n    }\r\n  `\r\n}\r\n\r\nconst Slider = styled.input`\r\n  ${trackStyle}\r\n  ${thumbStyle}\r\n`\r\n\r\ninterface ProgressBarProps {\r\n  value: number\r\n  maxValue: number\r\n  onChange: (newValue: number) => void\r\n  className?: string\r\n}\r\n\r\nexport default function ProgressBar(props: ProgressBarProps) {\r\n  const { value, maxValue, className, onChange } = props\r\n\r\n  const [internalValue, setInternalValue] = useState(value)\r\n\r\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\r\n    (event) => {\r\n      console.log('update')\r\n      const newValue = Number(event.target.value)\r\n      setInternalValue(newValue)\r\n      onChange(newValue)\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  const handleClick: MouseEventHandler = useCallback((event) => {\r\n    event.stopPropagation()\r\n  }, [])\r\n\r\n  // This hook ensures the parent component can control the state\r\n  useEffect(() => {\r\n    if (value !== internalValue) {\r\n      setInternalValue(value)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value])\r\n\r\n  const theme = useTheme()\r\n  const chromePercentage = Math.round((internalValue / maxValue) * 100)\r\n\r\n  return (\r\n    <Slider\r\n      type='range'\r\n      step={0.034}\r\n      min={0}\r\n      max={maxValue}\r\n      value={internalValue}\r\n      onChange={handleChange}\r\n      className={className}\r\n      onClick={handleClick}\r\n      style={{\r\n        backgroundImage: `linear-gradient(90deg, ${theme.colors.accentColor} ${chromePercentage}%, transparent ${chromePercentage}%\r\n      )`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { SVGProps, useCallback, MouseEventHandler } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NO_OP } from '../data/types'\r\nimport useToggle from '../hooks/useToggle'\r\n\r\nconst MorphSvg = styled.svg`\r\n  > rect {\r\n    transition: all 0.2s ease-in;\r\n  }\r\n\r\n  &.play {\r\n    .left {\r\n      clip-path: path('M1.61 0 L10.1 4.9 L10.1 19.1 L1.61 24');\r\n    }\r\n\r\n    .right {\r\n      clip-path: path('M22.39 12 L9.9 4.79 L9.9 19.21 L22.39 12');\r\n    }\r\n  }\r\n\r\n  &.pause {\r\n    .left {\r\n      clip-path: path('M4.8 0 L10 0 L10 24 L4.8 24');\r\n    }\r\n\r\n    .right {\r\n      clip-path: path('M19.2 0 L14 0 L14 24 L19.2 24');\r\n    }\r\n  }\r\n`\r\n\r\nexport function PlayPauseIcon(props: SVGProps<SVGElement>) {\r\n  const { onClick = NO_OP, className } = props\r\n\r\n  const [state, toggleState] = useToggle(true)\r\n\r\n  const internalOnClick: MouseEventHandler<SVGElement> = useCallback(\r\n    (event) => {\r\n      onClick(event)\r\n      toggleState()\r\n    },\r\n    [onClick, toggleState]\r\n  )\r\n\r\n  return (\r\n    <MorphSvg\r\n      viewBox='0 0 24 24'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      onClick={internalOnClick}\r\n      className={`${className} ${state ? 'play' : 'pause'}`}\r\n    >\r\n      <rect className='left' color='currentColor' x='0' y='0' width='24' height=' 24' />\r\n      <rect className='right' color='currentColor' x='0' y='0' width='24' height=' 24' />\r\n    </MorphSvg>\r\n  )\r\n}\r\n","import React, { MouseEventHandler, useCallback } from 'react'\n\nimport { ExpandIcon, ExternalLinkIcon, CloseIcon, DownloadIcon, ArrowDown } from '../../icons/FontAwesomeIcons'\nimport styled, { css } from 'styled-components'\nimport useToggle from '../../hooks/useToggle'\nimport { fadeOut } from '../../styled/animations'\nimport { NO_OP } from '../../data/types'\nimport { formatDuration } from '../../misc/formatting'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectFullsceenState,\n  selectNextIndex,\n  selectPreviousIndex,\n  selectPostById,\n  selectPosts,\n  selectUseCorsProxy,\n} from '../../redux/selectors'\nimport { enterFullscreen, exitFullscreen, setFullScreenPost } from '../../redux/actions'\nimport PostDataClass from '../../data/PostDataClass'\nimport { download, getCorrectSourceOrigin } from '../../data/utils'\nimport ProgressBar from './ProgressBar'\nimport { dropShadow, gutter } from '../../styled/mixins'\nimport { PlayPauseIcon } from '../../icons/PlayPauseIcon'\n\nfunction overlayVisibility({ isVisible }: { isVisible: boolean }) {\n  return isVisible\n    ? css``\n    : css`\n        opacity: 0;\n        animation: ${fadeOut} 0.4s ease-in;\n      `\n}\n\nconst Wrapper = styled.div`\n  grid-area: 1/1/2/2;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: auto 1fr auto auto;\n  z-index: 1;\n\n  ${overlayVisibility};\n`\n\nconst VideoProgressBar = styled(ProgressBar)`\n  grid-area: 4/1/4/4;\n`\n\nconst ExpandButton = styled(ExpandIcon)(\n  ({ theme }) => css`\n    grid-area: 1/1/2/2;\n    place-self: start start;\n    ${dropShadow}\n    margin: ${theme.dimensions.gutter};\n  `\n)\n\nconst CloseButton = styled(CloseIcon)(\n  ({ theme }) => css`\n    grid-area: 1/1/2/2;\n    place-self: start start;\n    ${dropShadow}\n    margin: ${theme.dimensions.gutter};\n  `\n)\n\nconst LinkList = styled.div`\n  grid-area: 3/1/4/2;\n  place-self: end stretch;\n  display: flex;\n  place-items: start center;\n  ${gutter}\n\n  > svg {\n    ${dropShadow}\n  }\n`\n\nconst ScrollHint = styled(ArrowDown)`\n  grid-area: 3/2/4/3;\n  place-self: end center;\n  height: 32px;\n  width: 32px;\n`\n\nconst PlayButton = styled(PlayPauseIcon)`\n  height: 50px;\n  width: 50px;\n  grid-area: 2/2/3/3;\n  place-self: center center;\n  fill: white;\n  ${dropShadow}\n`\n\nconst PreviousButton = styled.div`\n  grid-area: 2/1/3/2;\n`\n\nconst NextButton = styled.div`\n  grid-area: 2/3/3/4;\n`\n\nconst LengthDisplay = styled.span(\n  (props) => css`\n    grid-area: 3/3/4/4;\n    place-self: end end;\n    background: #00000080;\n    border-radius: 4px;\n    padding: ${props.theme.dimensions.spacing};\n    margin: ${props.theme.dimensions.gutter};\n  `\n)\n\ninterface OverlayProps {\n  postId: number\n  togglePlay?: () => void\n  isPaused?: boolean\n  isPlayable: boolean\n  currentTime?: number\n  duration?: number\n  mediaRef?: HTMLVideoElement | null\n}\n\nfunction Overlay(props: OverlayProps) {\n  const {\n    togglePlay = NO_OP,\n    isPaused = true,\n    isPlayable = false,\n    currentTime = 0,\n    duration = null,\n    mediaRef,\n    postId,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const [isVisible, toggleVisible] = useToggle()\n\n  const post = useSelector(selectPostById(postId)) as PostDataClass\n  const posts = useSelector(selectPosts)\n  const isReaderOpen = useSelector(selectFullsceenState)\n  const useCorsProxy = useSelector(selectUseCorsProxy)\n\n  const nextIndex = useSelector(selectNextIndex)\n  const previousIndex = useSelector(selectPreviousIndex)\n\n  const downloadSrc = getCorrectSourceOrigin(useCorsProxy, post.big_src)\n\n  const onDownloadClick = useCallback<MouseEventHandler>(\n    (event) => {\n      event.stopPropagation()\n      download(downloadSrc)\n    },\n    [downloadSrc]\n  )\n\n  const onExpandClick = useCallback<MouseEventHandler>(\n    (event) => {\n      event.stopPropagation()\n\n      if (isReaderOpen) {\n        dispatch(exitFullscreen())\n      } else {\n        mediaRef && mediaRef.pause()\n        dispatch(enterFullscreen(postId))\n      }\n    },\n    [dispatch, isReaderOpen, mediaRef, postId]\n  )\n\n  const handlePlayPressed: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      togglePlay()\n    },\n    [togglePlay]\n  )\n\n  const selectPostAt = useCallback(\n    (index: number) => {\n      const postAtindex = posts[index]\n\n      if (postAtindex) {\n        dispatch(setFullScreenPost(postAtindex.id))\n      }\n    },\n    [dispatch, posts]\n  )\n\n  const selectNext = useCallback(() => {\n    if (nextIndex !== undefined) {\n      selectPostAt(nextIndex)\n    }\n  }, [selectPostAt, nextIndex])\n\n  const selectPrevious = useCallback(() => {\n    if (previousIndex !== undefined) {\n      selectPostAt(previousIndex)\n    }\n  }, [selectPostAt, previousIndex])\n\n  const onSeek = useCallback(\n    (value: number) => {\n      if (mediaRef) {\n        mediaRef.currentTime = value\n      }\n    },\n    [mediaRef]\n  )\n\n  return (\n    <Wrapper isVisible={isPaused || isVisible} onClick={toggleVisible}>\n      {isReaderOpen ? (\n        <CloseButton color='white' onClick={onExpandClick} aria-label='Open Fullscreen' />\n      ) : (\n        <ExpandButton color='white' onClick={onExpandClick} aria-label='Open Fullscreen' />\n      )}\n\n      <LinkList>\n        <a\n          href={downloadSrc}\n          target='_blank'\n          rel='noopener noreferrer'\n          aria-label='Open In New Tab'\n          title={downloadSrc}\n        >\n          <ExternalLinkIcon color='white' />\n        </a>\n\n        <DownloadIcon color='white' aria-label='Download Image' onClick={onDownloadClick} title={downloadSrc} />\n      </LinkList>\n\n      {isPlayable && (\n        <>\n          <PlayButton color='white' onClick={handlePlayPressed} aria-label='Play/Pause' />\n\n          {!!duration && !!currentTime && (\n            <VideoProgressBar value={currentTime} maxValue={duration} onChange={onSeek} />\n          )}\n\n          {mediaRef && !isNaN(mediaRef.duration) && <LengthDisplay>{formatDuration(mediaRef.duration)}</LengthDisplay>}\n          {downloadSrc.includes('.gif') && <LengthDisplay>GIF</LengthDisplay>}\n        </>\n      )}\n\n      {isReaderOpen && <PreviousButton onClick={selectPrevious}></PreviousButton>}\n      {isReaderOpen && <NextButton onClick={selectNext}></NextButton>}\n      {isReaderOpen && <ScrollHint />}\n    </Wrapper>\n  )\n}\n\nexport default Overlay\n","import styled from 'styled-components'\nimport { flexMedia, preserveAspectRatio } from '../../styled/mixins'\n\nconst FlexVideo = styled.video`\n  ${flexMedia}\n  ${preserveAspectRatio}\n  grid-area: 1/1/2/2;\n`\n\nexport default FlexVideo\n","import styled from 'styled-components'\r\nimport { mediaStyle } from '../../../styled/mixins'\r\nimport FlexImage from '../../styled/FlexImage'\r\nimport FlexVideo from '../../styled/FlexVideo'\r\n\r\nexport const PostVideo = styled(FlexVideo)`\r\n  ${mediaStyle}\r\n`\r\n\r\nexport const PostImage = styled(FlexImage)`\r\n  ${mediaStyle}\r\n`\r\n","import React, { useState, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { NO_OP } from '../../../data/types'\nimport { selectPreloadVideos } from '../../../redux/selectors'\nimport MediaProps from './MediaProps'\nimport Overlay from '../Overlay'\nimport { PostVideo } from './StyledMedia'\n\nexport default function Video(props: MediaProps) {\n  const { src, onLoad = NO_OP, postId, width, height } = props\n\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>(null)\n\n  const [, setTime] = useState(Date.now())\n  const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null)\n\n  const play = useCallback(() => {\n    videoRef && videoRef.play()\n\n    // ~30 fps\n    const id = setInterval(() => {\n      setTime(Date.now())\n    }, 34)\n\n    setIntervalId(id)\n  }, [videoRef])\n\n  const pause = useCallback(() => {\n    videoRef && videoRef.pause()\n    clearInterval(intervalId as NodeJS.Timeout)\n    setIntervalId(null)\n  }, [videoRef, intervalId])\n\n  const togglePlay = useCallback(() => {\n    videoRef && (videoRef.paused ? play() : pause())\n  }, [videoRef, play, pause])\n\n  const preload = useSelector(selectPreloadVideos) ? 'auto' : 'metadata'\n\n  return (\n    <>\n      <PostVideo\n        controls={false}\n        loop\n        preload={preload}\n        ref={setVideoRef}\n        onLoadedMetadata={onLoad}\n        width={width}\n        height={height}\n        src={src}\n      />\n      <Overlay\n        mediaRef={videoRef}\n        isPaused={videoRef ? videoRef.paused : true}\n        currentTime={videoRef?.currentTime}\n        duration={videoRef?.duration}\n        postId={postId}\n        togglePlay={togglePlay}\n        isPlayable\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { NO_OP } from '../../../data/types'\nimport MediaProps from './MediaProps'\nimport Overlay from '../Overlay'\nimport { PostImage } from './StyledMedia'\n\nexport default function Gif(props: MediaProps) {\n  const { src, thumbnail_src, onLoad = NO_OP, postId, width, height } = props\n\n  const [isPaused, setPaused] = useState(true)\n  const usedSource = isPaused ? thumbnail_src : src\n\n  return (\n    <>\n      <PostImage src={usedSource} alt={usedSource} loading='lazy' onLoad={onLoad} width={width} height={height} />\n      <Overlay\n        isPlayable\n        isPaused={isPaused}\n        togglePlay={() => {\n          setPaused(!isPaused)\n        }}\n        postId={postId}\n      />\n    </>\n  )\n}\n","import React from 'react'\r\nimport { NO_OP } from '../../../data/types'\r\nimport MediaProps from './MediaProps'\r\nimport Overlay from '../Overlay'\r\nimport { PostImage } from './StyledMedia'\r\n\r\nexport default function Picture(props: MediaProps) {\r\n  const { src, onLoad = NO_OP, postId, width, height } = props\r\n\r\n  return (\r\n    <>\r\n      <PostImage src={src} alt={src} onLoad={onLoad} loading='lazy' width={width} height={height} />\r\n      <Overlay isPlayable={false} postId={postId} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\nimport Video from './media/Video'\nimport Gif from './media/Gif'\nimport Picture from './media/Picture'\n\nimport { getMediaType } from '../../data/utils'\nimport { MediaType, PostType } from '../../data/types'\nimport { useSelector } from 'react-redux'\nimport PostDataClass from '../../data/PostDataClass'\nimport { selectPostById } from '../../redux/selectors'\n\ninterface PlayerProps {\n  postId: number\n  type: PostType\n  src: string\n  thumbnail_src: string\n  onLoad: () => void\n  width: number\n  height: number\n}\n\nconst getMedia = (type: PostType, post: PostDataClass) => {\n  switch (getMediaType(type, post)) {\n    case MediaType.VIDEO:\n      return Video\n    case MediaType.GIF:\n      return Gif\n    default:\n      return Picture\n  }\n}\n\nexport default function Player(props: PlayerProps) {\n  const { type, src, thumbnail_src, onLoad, postId, width, height } = props\n\n  const post = useSelector(selectPostById(postId)) as PostDataClass\n\n  const MediaComponent = getMedia(type, post)\n\n  const [usedThumbnail, usedSrc] = useMemo(() => {\n    if (getMediaType(type, post) === MediaType.GIF) {\n      // Choose the bigger image that is not a gif\n      const thumbnail = post.small_src.includes('.gif') ? thumbnail_src : post.small_src\n\n      // fallback to big_src in case the sample is not a gif\n      const source = src.includes('.gif') ? src : post.big_src\n\n      return [thumbnail, source]\n    }\n\n    return [thumbnail_src, src]\n  }, [post, src, thumbnail_src, type])\n\n  return (\n    <MediaComponent\n      src={usedSrc}\n      thumbnail_src={usedThumbnail}\n      onLoad={onLoad}\n      postId={postId}\n      width={width}\n      height={height}\n    />\n  )\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport Details from './details/Details'\nimport Player from '../player/Player'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectOriginals, selectShowComments, selectUseCorsProxy } from '../../redux/selectors'\nimport PostDataClass from '../../data/PostDataClass'\nimport LayoutElementProps from '../layout/LayoutElementProps'\nimport { ActiveTab, NO_OP } from '../../data/types'\nimport useToggle from '../../hooks/useToggle'\nimport { layer } from '../../styled/mixins'\nimport { getCorrectSource } from '../../data/utils'\nimport { fetchComments } from '../../redux/actions'\n\nconst ItemWrapper = styled.div(\n  ({ theme }) => css`\n    padding-top: ${theme.dimensions.gutter};\n  `\n)\n\nconst PositonWrapper = styled.div(\n  ({ theme }) => css`\n    padding: 0 ${theme.dimensions.gutter};\n    width: 100%;\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n  `\n)\n\nconst PostWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto auto;\n    border-radius: ${theme.dimensions.borderRadius};\n    ${layer({ theme })}\n  `\n)\n\nexport default function Post(props: PostDataClass & LayoutElementProps) {\n  const {\n    media_type,\n    small_src,\n    big_src,\n    thumbnail_src,\n    style,\n    onLoad = NO_OP,\n    virtualRef,\n    id,\n    width,\n    height,\n    comments,\n    has_comments,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const [collapsed, toggleCollapsed] = useToggle(true)\n\n  const originals = useSelector(selectOriginals)\n  const useCorsProxy = useSelector(selectUseCorsProxy)\n  const showComments = useSelector(selectShowComments)\n\n  const media_src = useMemo(() => {\n    return getCorrectSource(originals, useCorsProxy, big_src, small_src)\n  }, [big_src, originals, small_src, useCorsProxy])\n\n  // re-measure when collapsed state changes\n  useEffect(() => {\n    onLoad()\n  }, [onLoad, collapsed])\n\n  // Loads comments if conditions are met\n  useEffect(() => {\n    if (!collapsed && showComments && has_comments && !comments) {\n      dispatch(fetchComments(id))\n    }\n  }, [collapsed, showComments, has_comments, comments, dispatch, id])\n\n  const [activeTab, setActiveTab] = useState<ActiveTab>('tags')\n\n  return (\n    <ItemWrapper style={style} ref={virtualRef} className='list-div'>\n      <PositonWrapper>\n        <PostWrapper onClick={toggleCollapsed} role='row'>\n          <Player\n            onLoad={onLoad}\n            type={media_type}\n            src={media_src}\n            thumbnail_src={thumbnail_src}\n            postId={id}\n            width={width}\n            height={height}\n          />\n          {!collapsed && <Details postId={id} onLoad={onLoad} activeTab={activeTab} setActiveTab={setActiveTab} />}\n        </PostWrapper>\n      </PositonWrapper>\n    </ItemWrapper>\n  )\n}\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AnyAction } from 'redux'\n\n/**\n * A hook that simplifies usage of simple (unparameterized) Redux actions\n */\nexport default function useAction<T extends () => AnyAction>(actionCreator: T) {\n  const dispatch = useDispatch()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(() => dispatch(actionCreator()), [actionCreator, dispatch])\n}\n","import React from 'react'\nimport useAction from '../../hooks/useAction'\nimport { getResults } from '../../redux/actions'\nimport { BlockButton } from '../common/Buttons'\n\nexport default function SearchButton() {\n  const search = useAction(getResults)\n\n  return (\n    <BlockButton onClick={search} aria-label='Search'>\n      Search\n    </BlockButton>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectActiveTags, selectNumberOfActiveTags } from '../../redux/selectors'\nimport TagList from '../tag/TagList'\n\ninterface ActiveTagsProps {\n  onChange: () => void\n}\n\nexport default function ActiveTags(props: ActiveTagsProps) {\n  const { onChange } = props\n\n  const activeTags = useSelector(selectActiveTags)\n  const numberOfActiveTags = useSelector(selectNumberOfActiveTags)\n\n  // Fire change event when tags change\n  // This is used to re-measure the height\n  useEffect(() => onChange(), [onChange, activeTags])\n\n  return numberOfActiveTags > 0 ? <TagList tags={activeTags} detailed={true} /> : null\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TagSelector from '../tagSelector/TagSelector'\nimport Options from './Options'\nimport { Title } from '../common/Text'\nimport Surface from '../common/Surface'\nimport SearchButton from '../widgets/SearchButton'\nimport ActiveTags from '../widgets/ActiveTags'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst ConfigWrapper = styled.section`\n  ${flexColumn}\n  ${gutter}\n  ${centeredMaxWidth}\n`\n\nexport default function Config(props: { onLoad: () => void }) {\n  const { onLoad } = props\n\n  return (\n    <ConfigWrapper>\n      <Title>\n        <label htmlFor='tag-input'>Search</label>\n      </Title>\n      <Surface>\n        <TagSelector />\n        <ActiveTags onChange={onLoad} />\n        <Options />\n        <SearchButton />\n      </Surface>\n    </ConfigWrapper>\n  )\n}\n","import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Faded } from '../common/Text'\n\nconst tips = [\n  'Try tapping the little plus in the tag search.',\n  \"You can exclude tags with the '-' modifier.\",\n  \"Each result will have at least one of your '~' tags.\",\n  'Check out the settings. There are lots of uesful options there.',\n  'Starting a tag search with a * gives more results.',\n  'When filtering rated posts, you can configure the minimum score by taping the red number.',\n  'You can get more info about a post be tapping it once.',\n  'Tapping on a tag below a post adds it to your active tags.',\n  \"Large gifs and videos can take a while to load in the app. Try clicking the 'Open in new tab' icon in the bottom left corner for faster loading times.\",\n  'If anything stops working or gets weird. Reset the app in the settings.',\n  'I hope you are having a nice day!',\n  'If a tag is ambiguous, it will have a little arrow on the right. Tapping it shows related tags.',\n  'Tapping the icon in the top left of posts brings you into fullscreen mode.',\n  'Searching for nothing returns ALL posts ever made.',\n  'Results are sorted chronologically. Newest first.',\n  \"You can search for safe posts by entering 'rating:safe' in the search field. The same works for questionable and explicit.\",\n  \"You can search for posts from a specific website by entering 'source:*twitter* for example.\",\n  'You can upvote a post by tapping its score in the details.',\n  'Wanna know more about a post? Enable \"Show post metadata\" in the options.',\n  'Every time you reload the page, a random tip will be shown here.',\n  'You can enable comments in the settings. Not all post have comments though.',\n]\n\nconst Span = styled(Faded)(\n  ({ theme }) => css`\n    text-align: center;\n    font-size: 16px;\n    padding: ${theme.dimensions.hugeSpacing};\n    max-width: ${theme.dimensions.bodyWidth};\n  `\n)\n\nexport default function RandomTip() {\n  const tip = useMemo(() => tips[Math.floor(Math.random() * tips.length)], [])\n\n  return <Span>{tip}</Span>\n}\n","import React from 'react'\r\nimport KofiButton from './KofiButton'\r\nimport styled, { css } from 'styled-components'\r\nimport RandomTip from './RandomTip'\r\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\r\n\r\nconst Placeholder = styled.div(\r\n  ({ theme }) => css`\r\n    ${flexColumn()}\r\n    ${flexColumnGap(theme.dimensions.hugeSpacing)}\r\n    align-items: center;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin: auto;\r\n\r\n    height: calc(100vh - 400px);\r\n    padding: 0 10%;\r\n  `\r\n)\r\n\r\nexport default function SearchPlaceholder() {\r\n  return (\r\n    <Placeholder>\r\n      <RandomTip />\r\n      <KofiButton id='V7V73PWW9' label='Support Me on Ko-fi' />\r\n    </Placeholder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { formatCount } from '../../misc/formatting'\r\nimport { selectCount } from '../../redux/selectors'\r\nimport { Title } from '../common/Text'\r\n\r\nexport default function ResultsTitle() {\r\n  const [fullNumber, toggleFullNumber] = useToggle()\r\n  const count = useSelector(selectCount)\r\n\r\n  const formattedCount = fullNumber ? count.toLocaleString() : formatCount(count)\r\n\r\n  return <Title onClick={toggleFullNumber}>{formattedCount} results</Title>\r\n}\r\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectCount } from '../../redux/selectors'\nimport Config from '../features/Config'\nimport Header from '../features/Header'\nimport LayoutElementProps from './LayoutElementProps'\nimport { NO_OP } from '../../data/types'\nimport SearchPlaceholder from '../widgets/SearchPlaceholder'\nimport ResultsTitle from '../widgets/ResultsTitle'\n\nexport default function LayoutHeader({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  const count = useSelector(selectCount)\n\n  // Trigger load event when count is > 0\n  // This is used to re-measure the element\n  useEffect(() => {\n    count > 0 && onLoad()\n  }, [count, onLoad])\n\n  return (\n    <div onLoad={onLoad} ref={virtualRef} style={style} role='row'>\n      <Header />\n      <Config onLoad={onLoad} />\n      {count > 0 ? <ResultsTitle /> : <SearchPlaceholder />}\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport Surface from '../common/Surface'\nimport { SmallTitle } from '../common/Text'\nimport TagList from '../tag/TagList'\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\nimport { useSelector } from 'react-redux'\nimport { selectAliasesAsList } from '../../redux/selectors'\nimport TagDataClass from '../../data/TagDataClass'\nimport { NO_OP } from '../../data/types'\nimport LayoutElementProps from './LayoutElementProps'\nimport { HorizontalLine } from '../common/Lines'\nimport styled, { css } from 'styled-components'\nimport FlexImage from '../styled/FlexImage'\n\nconst Div = styled.div(\n  ({ theme }) => css`\n    padding: ${theme.dimensions.gutter};\n  `\n)\n\nconst StyledSurface = styled(Surface)(\n  ({ theme }) => css`\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n    text-align: center;\n  `\n)\n\nconst StyledImage = styled(FlexImage)`\n  max-height: 50vh;\n`\n\nexport default function LayoutOutOfItems({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  const aliases = useSelector(selectAliasesAsList)\n  const aliasesForRendering = useMemo(\n    () =>\n      aliases.reduce((result: Record<string, TagDataClass>, alias) => {\n        result[alias.name] = alias\n        return result\n      }, {}),\n    [aliases]\n  )\n\n  return (\n    <Div style={style} ref={virtualRef} onLoad={onLoad} role='row'>\n      <StyledSurface>\n        <StyledImage src={outOfResultsPicture} alt='Shironeko does not understand' />\n        <HorizontalLine />\n        <SmallTitle>You have reached the end!</SmallTitle>\n        <p>Go look for something else!</p>\n        {aliases.length > 0 && (\n          <>\n            <p>How about some of these?</p>\n            <TagList tags={aliasesForRendering} detailed />\n          </>\n        )}\n      </StyledSurface>\n    </Div>\n  )\n}\n","import React from 'react'\nimport LayoutElementProps from './LayoutElementProps'\nimport LoadingIcon from '../../icons/Loading'\nimport styled from 'styled-components'\nimport { NO_OP } from '../../data/types'\n\nconst Wrapper = styled.div`\n  display: grid;\n  place-items: center;\n`\n\nexport default function LayoutLoadingItem({ onLoad = NO_OP, virtualRef, style }: LayoutElementProps) {\n  return (\n    <Wrapper onLoad={onLoad} ref={virtualRef} style={style} role='row'>\n      <LoadingIcon />\n    </Wrapper>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport { selectLastPage } from '../../../redux/selectors'\nimport { RedButton } from '../../common/Buttons'\nimport { SmallNumberInput } from '../../common/SmallInput'\n\nconst PageRow = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n    justify-content: center;\n    place-items: center;\n    gap: ${theme.dimensions.gutter};\n    padding: ${theme.dimensions.gutter};\n    padding-bottom: 0;\n    max-width: ${theme.dimensions.bodyWidth};\n    margin: auto;\n  `\n)\nconst Left = styled.div`\n  display: flex;\n  place-self: flex-end;\n  gap: 8px;\n`\nconst Right = styled.div`\n  display: flex;\n  place-self: flex-start;\n  gap: 8px;\n`\n\nconst PageNumber = styled(RedButton)`\n  min-width: 50px;\n`\n\nconst CurrentNumber = styled(SmallNumberInput)`\n  min-width: 50px;\n`\n\ninterface PageNavigationProps {\n  currentPage: number\n  loadPage: (pageNumber: number) => void\n}\n\nexport default function PageNavigation(props: PageNavigationProps) {\n  const { currentPage, loadPage } = props\n\n  const lastPage = useSelector(selectLastPage)\n\n  const loadSpecificPage = useCallback((newPage: number | string) => loadPage(Number(newPage)), [loadPage])\n  const loadFirst: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(0), [loadPage])\n  const loadLast: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(lastPage), [loadPage, lastPage])\n  const loadPrevious: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(currentPage - 1), [\n    currentPage,\n    loadPage,\n  ])\n  const loadNext: MouseEventHandler<HTMLButtonElement> = useCallback(() => loadPage(currentPage + 1), [\n    currentPage,\n    loadPage,\n  ])\n\n  // Render Empty divs to keep everything lined up\n  // Could achive the same with grid-column (might do that in the future)\n  return (\n    <PageRow className='page-navigation'>\n      <Left>\n        {currentPage > 1 && <PageNumber onClick={loadFirst}>0</PageNumber>}\n        {currentPage > 0 && <PageNumber onClick={loadPrevious}>{currentPage - 1}</PageNumber>}\n      </Left>\n      <CurrentNumber value={currentPage} onSubmit={loadSpecificPage} />\n      <Right>\n        {currentPage < lastPage && <PageNumber onClick={loadNext}>{currentPage + 1}</PageNumber>}\n        {currentPage < lastPage - 1 && <PageNumber onClick={loadLast}>{lastPage}</PageNumber>}\n      </Right>\n    </PageRow>\n  )\n}\n","import React, { useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport PostDataClass from '../../../data/PostDataClass'\nimport BaseFlexColumn from '../../common/FlexColumn'\nimport PageNavigation from './PageNavigation'\n\nconst FlexColumn = styled(BaseFlexColumn)(\n  ({ theme }) => css`\n    padding-bottom: ${theme.dimensions.gutter};\n  `\n)\n\ninterface PageLayoutProps<T> {\n  header?: JSX.Element\n  outOfItems?: JSX.Element\n  items?: T[]\n  pageSize: number\n  currentPage: number\n  hasMorePages: boolean\n  loadPage: (pageNumber: number) => void\n  ItemComponent: (props: T) => JSX.Element\n  isLoading: boolean\n  setLoading: (value: boolean) => void\n}\n\nexport default function PageLayout(props: PageLayoutProps<PostDataClass>) {\n  const { header, items, ItemComponent, currentPage, loadPage } = props\n\n  const scrollAndLoadPage = useCallback(\n    (value: number) => {\n      loadPage(value)\n      document.getElementsByClassName('page-navigation')[0].scrollIntoView()\n    },\n    [loadPage]\n  )\n\n  return (\n    <FlexColumn>\n      {header}\n      {items && items.length > 0 && (\n        <>\n          <PageNavigation currentPage={currentPage} loadPage={loadPage} />\n          {items?.map((item) => (\n            <ItemComponent key={item.id} {...item} />\n          ))}\n          <PageNavigation currentPage={currentPage} loadPage={scrollAndLoadPage} />\n        </>\n      )}\n    </FlexColumn>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport useThrottledEffect from 'use-throttled-effect'\nimport { openFullscreen } from '../../data/browserUtils'\nimport PostDataClass from '../../data/PostDataClass'\nimport { ActiveTab, NO_OP } from '../../data/types'\nimport { getCorrectSource } from '../../data/utils'\nimport useAction from '../../hooks/useAction'\nimport useFullScreenCloseEffect from '../../hooks/useFullscreenCloseEffect'\nimport { exitFullscreen, getMoreResults } from '../../redux/actions'\nimport {\n  selectFullsceenState,\n  selectFullScreenIndex,\n  selectFullScreenPost,\n  selectOriginals,\n  selectPosts,\n  selectUseCorsProxy,\n} from '../../redux/selectors'\nimport Player from '../player/Player'\nimport Details from '../post/details/Details'\n\nconst FullScreenDiv = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    width: 100vw;\n    height: 200vh;\n    left: 0;\n    top: 0;\n\n    display: grid;\n    grid-template-columns: 100vw;\n    grid-template-rows: 100vh 40px auto;\n    overflow: auto;\n\n    background: ${theme.colors.backgroundColor};\n\n    z-index: 5;\n\n    scroll-snap-type: y mandatory;\n    //scroll-snap-points-y: 0vh 100vh;\n\n    > * {\n      scroll-snap-align: start;\n    }\n  `\n)\n\nexport default function Reader() {\n  const posts = useSelector(selectPosts)\n  const originals = useSelector(selectOriginals)\n  const isReaderOpen = useSelector(selectFullsceenState)\n  const fullScreenPost = useSelector(selectFullScreenPost) as PostDataClass\n  const fullScreenIndex = useSelector(selectFullScreenIndex)\n  const useCorsProxy = useSelector(selectUseCorsProxy)\n\n  const loadMore = useAction(getMoreResults)\n\n  const [readerRef, setReaderRef] = useState<HTMLDivElement | null>(null)\n\n  useThrottledEffect(\n    () => {\n      if (fullScreenIndex + 3 > posts.length) {\n        loadMore()\n      }\n    },\n    2000,\n    [fullScreenIndex, loadMore, posts.length]\n  )\n\n  useEffect(() => {\n    if (isReaderOpen && readerRef && readerRef !== document.fullscreenElement) {\n      openFullscreen(readerRef)\n    }\n  }, [isReaderOpen, readerRef])\n\n  const [activeTab, setActiveTab] = useState<ActiveTab>('tags')\n\n  const exit = useAction(exitFullscreen)\n\n  useFullScreenCloseEffect(exit)\n\n  if (!isReaderOpen) {\n    return null\n  }\n\n  const { media_type, small_src, big_src, thumbnail_src, id, width, height } = fullScreenPost\n  const media_src = getCorrectSource(originals, useCorsProxy, big_src, small_src)\n\n  return (\n    <FullScreenDiv ref={setReaderRef}>\n      <Player\n        onLoad={NO_OP}\n        type={media_type}\n        src={media_src}\n        thumbnail_src={thumbnail_src}\n        postId={id}\n        width={width}\n        height={height}\n      />\n      <Details postId={id} activeTab={activeTab} setActiveTab={setActiveTab} />\n    </FullScreenDiv>\n  )\n}\n","import { useEffect } from 'react'\r\n\r\nexport default function useFullScreenCloseEffect(effect: () => void) {\r\n  useEffect(() => {\r\n    const handler = (data: any) => {\r\n      console.log(document.fullscreenElement)\r\n      if (!document.fullscreenElement) {\r\n        effect()\r\n      }\r\n    }\r\n\r\n    document.addEventListener('fullscreenchange', handler)\r\n\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', handler)\r\n    }\r\n  }, [effect])\r\n}\r\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport InifinteColumn from '../layout/infinite/InfiniteColumn'\nimport Post from '../post/Post'\nimport { getMoreResults, getResults } from '../../redux/actions'\nimport {\n  selectHasMoreResults,\n  selectPageNumber,\n  selectPageSize,\n  selectPosts,\n  selectResultsLayout,\n} from '../../redux/selectors'\nimport LayoutHeader from '../layout/LayoutHeader'\nimport LayoutOutOfItems from '../layout/LayoutOutOfItems'\nimport LayoutLoadingItem from '../layout/LayoutLoadingItem'\nimport useAction from '../../hooks/useAction'\nimport { ResultLayout } from '../../data/types'\nimport PageLayout from '../layout/pages/PageLayout'\n\nimport Reader from '../reader/Reader'\n\nexport default function Search() {\n  const [isLoading, setLoading] = useState(false)\n\n  const posts = useSelector(selectPosts)\n  const hasMorePosts = useSelector(selectHasMoreResults)\n  const resultsLayout = useSelector(selectResultsLayout)\n  const pageSize = useSelector(selectPageSize)\n  const pageNumber = useSelector(selectPageNumber)\n\n  const dispatch = useDispatch()\n  const loadMore = useAction(getMoreResults)\n  const loadPage = useCallback((index: number) => dispatch(getResults(index)), [dispatch])\n\n  document.title = 'R34 React'\n\n  return (\n    <>\n      <Reader />\n      {resultsLayout === ResultLayout.INFINITE_COLUMN ? (\n        <InifinteColumn\n          Header={LayoutHeader}\n          OutOfItems={LayoutOutOfItems}\n          items={posts}\n          LoadingItem={LayoutLoadingItem}\n          hasMoreRows={hasMorePosts}\n          ItemComponent={Post}\n          loadMore={loadMore}\n          isLoading={isLoading}\n          setLoading={setLoading}\n        />\n      ) : (\n        <PageLayout\n          header={<LayoutHeader />}\n          pageSize={pageSize}\n          currentPage={pageNumber}\n          hasMorePages={hasMorePosts}\n          loadPage={loadPage}\n          ItemComponent={Post}\n          isLoading={isLoading}\n          setLoading={setLoading}\n          items={posts}\n        />\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}