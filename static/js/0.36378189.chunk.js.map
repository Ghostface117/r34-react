{"version":3,"sources":["hooks/useToggle.ts","components/tag/TagWrapper.tsx","components/tag/TagName.tsx","components/tag/Alias.tsx","components/tag/AliasesList.tsx","components/tag/Tag.tsx","components/tag/TagList.tsx","components/common/Toggle.tsx","hooks/usePreference.tsx","icons/TypeIcon.tsx","hooks/useThrottledEffect.tsx","components/tagSelector/TagInput.tsx","components/tagSelector/DropdownListEntry.tsx","components/tagSelector/DropdownList.tsx","hooks/useModifier.tsx","components/tagSelector/TagSelector.tsx","components/common/LabeledToggle.tsx","components/features/Options.tsx","components/common/Text.tsx","icons/Icons.tsx","components/common/Lines.tsx","components/common/Surface.tsx","misc/formatting.ts","components/features/Header.tsx","icons/R34Icon.tsx","components/common/FlexColumn.tsx","components/common/FlexPair.tsx"],"names":["useToggle","initialValue","useState","value","setValue","toggleValue","useCallback","resetValue","TagWrapper","styled","div","props","css","flexRowWithGap","theme","active","fg","colors","backgroundColor","accentColor","bg","dimensions","borderWidth","timings","transitionTime","backgroundColor2","switchingColors","gutter","blockHeight","collapsed","borderRadius","fontSizes","content","modifierToStyle","Modifier","PLUS","MINUS","OR","TagNameSpan","span","modifier","TagName","name","count","text","formatTagnameAndCount","tabIndex","AliasWrapper","bigSpacing","Alias","dispatch","useDispatch","handleClick","event","stopPropagation","tag","TagDataClass","addTag","onClick","ListWrapper","parentRef","offsetTop","clientHeight","offsetLeft","clientWidth","AliasesList","aliases","map","DropdownArrow","ArrowDown","Tag","types","detailed","tagRef","setTagRef","toggleCollapsed","resetCollapsed","activeTags","useSelector","selectActiveTags","selectAliasesByTagName","filteredAliases","useMemo","filter","alias","isActive","hasAliases","length","removeTag","handleArrowClick","handleEnter","key","onKeyDown","onMouseLeave","ref","TypeIcon","TagListWrapper","flexRowGap","flexColumnGap","TagList","tags","className","Object","entries","Track","defaultBorder","longTransitionTime","Thumb","supportsAspectRatio","Toggle","onToggle","usePreference","preferences","selectPreferences","setPreference","setOption","NO_OP","find","t","match","useThrottledEffect","callback","delay","deps","lastRun","useRef","Date","now","useEffect","handler","setTimeout","current","clearTimeout","Input","input","TagInput","onSubmit","handleChange","target","id","onChange","placeholder","aria-label","EntryWrapper","Name","Count","Icon","DropdownListEntry","posts","formatTagname","formatCount","flexColumn","tagSelector","sizeAndPosition","tagSelectorRef","DropdownList","entry","order","TagSelectorWrapper","closed","AddButton","ModifierButton","TagSelector","suggestions","setSuggestions","setTagSelectorRef","setModifier","nextModifier","currentIndex","indexOf","useModifier","tagSuggestionsCount","selectTagSuggestionCount","activateTag","prepareTag","a","api","getTags","serializeTagname","newSuggestions","onAddClick","trim","sanitizedTagname","suggestion","s","LabeledToggle","children","FlexPair","OptionsWrapper","gridWithGap","StyledInput","Options","PreferenceKey","RATED","rated","setRated","RATEDThreshold","ratedThreshold","setRatedThreshold","toggleRated","toString","ratedThresholdInternal","setRatedThresholdInternal","onBlur","Number","style","display","type","Title","h2","bigTitle","BigTitle","h1","SmallTitle","h3","Faded","subduedText","StyledIcon","i","color","size","StyledSvg","svg","icon","prefix","PixivIcon","CharacterIcon","attrs","ArtistIcon","CopyrightIcon","CloseIcon","ExpandIcon","ExternalLinkIcon","DownloadIcon","SourceIcon","RatingIcon","HeartIcon","LinkIcon","BrandIcon","PlayIcon","memo","PauseIcon","CodeBranchIcon","viewBox","xmlns","fill","d","HorizontalLine","layerBg","VerticalLine","layer","boxShadow","numberString","number","toFixed","formatSource","source","url","parseUrl","host","formatDuration","duration","min","Math","trunc","sec","tagname","replace","toLowerCase","HeaderWrapper","header","TitleBar","layerBgSolid","MenuBar","nav","hugeSpacing","LocationStyledLink","Link","to","Header","useLocation","pathname","role","href","RouteName","SEARCH","HELP","SETTINGS","ABOUT","R34Icon","useTheme","width","height","transform","cx","cy","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","r","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","FlexColumn","FlexColumnWithSpacing","centeredMaxWidth","Wrapper"],"mappings":"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","file":"static/js/0.36378189.chunk.js","sourcesContent":["import { useCallback, useState } from 'react'\n\n/**\n * A small wrapper for a useState<boolean> that is primarily used for toggling.\n * Saves me a few useCallbacks.\n */\nexport default function useToggle(initialValue = false): [boolean, () => void, () => void] {\n  const [value, setValue] = useState<boolean>(initialValue)\n  const toggleValue = useCallback(() => setValue(!value), [value])\n  const resetValue = useCallback(() => setValue(initialValue), [initialValue])\n\n  return [value, toggleValue, resetValue]\n}\n","import { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\n\nimport { ThemeType } from '../../misc/theme'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nconst dropdownBorderRadius = (collapsed: boolean, theme: ThemeType) =>\n  collapsed ? theme.dimensions.borderRadius : `${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0 0`\n\nconst switchingColors = (active: boolean, theme: ThemeType) => {\n  const fg = active ? theme.colors.backgroundColor : theme.colors.accentColor\n  const bg = active ? theme.colors.accentColor : theme.colors.backgroundColor\n\n  return css`\n    color: ${fg};\n    background-color: ${bg};\n    border: ${theme.colors.accentColor} ${theme.dimensions.borderWidth} solid;\n    transition: all ${theme.timings.transitionTime} ease-out;\n\n    svg {\n      color: ${fg};\n    }\n\n    cursor: pointer;\n\n    :hover,\n    :focus,\n    :active {\n      border-color: ${theme.colors.backgroundColor2};\n      color: ${theme.colors.backgroundColor2};\n\n      svg {\n        color: ${theme.colors.backgroundColor2};\n      }\n    }\n\n    :active {\n      transform: scale(1.05);\n    }\n  `\n}\n\nconst TagWrapper = styled.div(\n  (props: { active: boolean; collapsed: boolean; onMouseLeave: MouseEventHandler; theme: DefaultTheme }) =>\n    css`\n      ${flexRowWithGap({ theme: props.theme })}\n      ${switchingColors(props.active, props.theme)}\n      padding: 0 ${props.theme.dimensions.gutter};\n      height: ${props.theme.dimensions.blockHeight};\n      border-radius: ${dropdownBorderRadius(props.collapsed, props.theme)};\n      font-size: ${props.theme.fontSizes.content};\n    `\n)\n\nexport default TagWrapper\n","import styled, { css } from 'styled-components'\nimport { Modifier, TagType } from '../../data/types'\nimport { formatTagnameAndCount } from '../../misc/formatting'\n\ninterface TagNameProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n  types?: TagType[]\n}\n\nconst modifierToStyle = {\n  [Modifier.PLUS]: css``,\n  [Modifier.MINUS]: css`\n    text-decoration: line-through;\n  `,\n  [Modifier.OR]: css`\n    font-style: italic;\n  `,\n}\n\nconst TagNameSpan = styled.span(\n  ({ modifier = Modifier.PLUS }: Pick<TagNameProps, 'modifier'>) => modifierToStyle[modifier]\n)\n\nexport default function TagName(props: TagNameProps) {\n  const { modifier, name, count } = props\n\n  const text = formatTagnameAndCount(name, count)\n\n  return (\n    <TagNameSpan modifier={modifier} tabIndex={0}>\n      {text}\n    </TagNameSpan>\n  )\n}\n","import React, { MouseEventHandler, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport { addTag } from '../../redux/actions'\nimport { flexRowWithGap } from '../../styled/mixins'\nimport TagName from './TagName'\n\ninterface AliasProps {\n  modifier: Modifier\n  name: string\n  count?: number | null\n}\n\nconst AliasWrapper = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    padding: 0 ${theme.dimensions.bigSpacing};\n    height: ${theme.dimensions.blockHeight};\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport default function Alias(props: AliasProps) {\n  const { modifier, name, count } = props\n\n  const dispatch = useDispatch()\n\n  const handleClick: MouseEventHandler = useCallback(\n    (event) => {\n      event.stopPropagation()\n      const tag = new TagDataClass(name, [], count, modifier)\n\n      dispatch(addTag(tag))\n    },\n    [count, dispatch, modifier, name]\n  )\n\n  return (\n    <AliasWrapper onClick={handleClick}>\n      <TagName modifier={modifier} name={name} count={count} />\n    </AliasWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TagDataClass from '../../data/Tag'\nimport { Modifier } from '../../data/types'\nimport Alias from './Alias'\nimport { ThemeType } from '../../misc/theme'\n\nconst ListWrapper = styled.div(\n  ({ theme, parentRef }: { theme: ThemeType; parentRef: HTMLDivElement }) => css`\n    position: absolute;\n    top: ${parentRef.offsetTop + parentRef.clientHeight + 4}px;\n    left: ${parentRef.offsetLeft}px;\n    width: ${parentRef.clientWidth + 5}px;\n\n    display: flex;\n    flex-direction: column;\n\n    border-bottom-left-radius: ${theme.dimensions.borderRadius};\n    border-bottom-right-radius: ${theme.dimensions.borderRadius};\n    border: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    border-top: none;\n\n    background: ${theme.colors.backgroundColor};\n    z-index: 3;\n    color: ${theme.colors.accentColor};\n\n    > :not(:last-child) {\n      border-bottom: ${theme.dimensions.borderWidth} solid ${theme.colors.accentColor};\n    }\n  `\n)\n\ninterface AliasesListProps {\n  aliases: TagDataClass[]\n  modifier: Modifier\n  parentRef: HTMLDivElement\n}\n\nexport default function AliasesList(props: AliasesListProps) {\n  const { aliases, modifier, parentRef } = props\n\n  return (\n    <ListWrapper parentRef={parentRef}>\n      {aliases.map(({ name, count }) => (\n        <Alias key={'a_' + name} modifier={modifier} name={name} count={count} />\n      ))}\n    </ListWrapper>\n  )\n}\n","import React, { KeyboardEventHandler, MouseEventHandler, useCallback, useMemo, useState } from 'react'\r\nimport TypeIcon from '../../icons/TypeIcon'\r\nimport { ArrowDown } from '../../icons/Icons'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectActiveTags, selectAliasesByTagName } from '../../redux/selectors'\r\nimport { addTag, removeTag } from '../../redux/actions'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport TagWrapper from './TagWrapper'\r\nimport TagName from './TagName'\r\nimport { Modifier } from '../../data/types'\r\nimport AliasesList from './AliasesList'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\n\r\nconst DropdownArrow = styled(ArrowDown)(\r\n  ({ collapsed, theme }: { collapsed: boolean; theme: DefaultTheme }) => css`\r\n    transition: all ${theme.timings.transitionTime} ease-out;\r\n    ${collapsed\r\n      ? css``\r\n      : css`\r\n          transform: rotate(180deg);\r\n        `}\r\n  `\r\n)\r\n\r\ninterface TagProps extends TagDataClass {\r\n  detailed: boolean\r\n}\r\n\r\nexport default function Tag(props: TagProps) {\r\n  const { name, count, modifier = Modifier.PLUS, types, detailed } = props\r\n\r\n  const [tagRef, setTagRef] = useState<HTMLDivElement | null>(null)\r\n  const [collapsed, toggleCollapsed, resetCollapsed] = useToggle(true)\r\n\r\n  const dispatch = useDispatch()\r\n  const activeTags = useSelector(selectActiveTags)\r\n  const aliases = useSelector(selectAliasesByTagName(name))\r\n\r\n  const filteredAliases = useMemo(() => (aliases ? aliases.filter((alias) => !(alias.name in activeTags)) : []), [\r\n    activeTags,\r\n    aliases,\r\n  ])\r\n\r\n  const isActive = name in activeTags\r\n  const hasAliases = filteredAliases?.length > 0\r\n\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent | React.KeyboardEvent) => {\r\n      event.stopPropagation()\r\n      const tag = new TagDataClass(name, types, count, modifier)\r\n\r\n      if (isActive) {\r\n        dispatch(removeTag(tag))\r\n      } else {\r\n        dispatch(addTag(tag))\r\n      }\r\n    },\r\n    [count, dispatch, isActive, modifier, name, types]\r\n  )\r\n\r\n  const handleArrowClick: MouseEventHandler = useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      toggleCollapsed()\r\n    },\r\n    [toggleCollapsed]\r\n  )\r\n\r\n  const handleEnter: KeyboardEventHandler = useCallback(\r\n    (event) => {\r\n      if (event.key === 'Enter') {\r\n        handleClick(event)\r\n      }\r\n    },\r\n    [handleClick]\r\n  )\r\n\r\n  return (\r\n    <TagWrapper\r\n      active={isActive}\r\n      collapsed={collapsed}\r\n      onClick={handleClick}\r\n      onKeyDown={handleEnter}\r\n      onMouseLeave={resetCollapsed}\r\n      ref={setTagRef}\r\n    >\r\n      {detailed && <TypeIcon types={types} />}\r\n      <TagName modifier={modifier} name={name} count={count} />\r\n      {detailed && hasAliases && (\r\n        <>\r\n          <DropdownArrow onClick={handleArrowClick} collapsed={collapsed} />\r\n          {!collapsed && tagRef && <AliasesList aliases={filteredAliases} modifier={modifier} parentRef={tagRef} />}\r\n        </>\r\n      )}\r\n    </TagWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport TagDataClass from '../../data/Tag'\r\nimport { flexRowGap, flexColumnGap } from '../../styled/mixins'\r\nimport Tag from './Tag'\r\n\r\nconst TagListWrapper = styled.div(\r\n  ({ theme }) => css`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n    ${flexRowGap(theme.dimensions.gutter)}\r\n    ${flexColumnGap(theme.dimensions.gutter)}\r\n  `\r\n)\r\n\r\ninterface TagListProps {\r\n  tags: Record<string, TagDataClass>\r\n  className?: string\r\n  detailed: boolean\r\n}\r\n\r\nexport default function TagList(props: TagListProps) {\r\n  const { tags, className, detailed } = props\r\n\r\n  return (\r\n    <TagListWrapper className={className}>\r\n      {Object.entries(tags).map(([key, tag]) => (\r\n        <Tag key={key} detailed={detailed} {...tag} />\r\n      ))}\r\n    </TagListWrapper>\r\n  )\r\n}\r\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { ThemeType } from '../../misc/theme'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: ThemeType }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setOption } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setPreference = useCallback((value: any) => dispatch(setOption(key, value)), [dispatch, key])\n\n  return [preferences[key], setPreference]\n}\n","import React, { MouseEventHandler, useMemo } from 'react'\nimport { NO_OP } from '../data/types'\nimport { CharacterIcon, CopyrightIcon, ArtistIcon } from './Icons'\n\ninterface TypeIconProps {\n  types?: string[]\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  left?: boolean\n  right?: boolean\n}\n\nexport default function TypeIcon(props: TypeIconProps) {\n  const { types = [], className = '', onClick = NO_OP } = props\n  const interestingType = useMemo(() => types.find((t) => !t.match(/^[general|ambiguous]$/)), [types])\n\n  switch (interestingType) {\n    case 'character':\n      return <CharacterIcon className={className} onClick={onClick} />\n    case 'copyright':\n      return <CopyrightIcon className={className} onClick={onClick} />\n    case 'artist':\n      return <ArtistIcon className={className} onClick={onClick} />\n    default:\n      return null\n  }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * wraps your effect so that it can only be called in a set interval\n */\nexport default function useThrottledEffect(callback: () => void, delay: number, deps: any[] = []) {\n  const lastRun = useRef(Date.now())\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      const now = Date.now()\n      const then = lastRun.current\n\n      if (now - then >= delay) {\n        callback()\n        lastRun.current = now\n      }\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [delay, ...deps])\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Input = styled.input(\n  (props) => css`\n    width: 100%;\n    border: none;\n    outline: none;\n    background: none;\n    font-size: ${props.theme.fontSizes.content};\n    border-top: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n    border-bottom: ${props.theme.colors.accentColor} ${props.theme.dimensions.borderWidth} solid;\n  `\n)\n\ninterface TagInputProps {\n  value: string\n  setValue: (newValue: string) => void\n  onSubmit: () => void\n}\n\nexport default function TagInput(props: TagInputProps) {\n  const { value, setValue, onSubmit } = props\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      setValue(event.target.value)\n    },\n    [setValue]\n  )\n\n  const handleEnter: KeyboardEventHandler = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        onSubmit()\n      }\n    },\n    [onSubmit]\n  )\n\n  return (\n    <Input\n      id='tag-input'\n      value={value}\n      onChange={handleChange}\n      onKeyDown={handleEnter}\n      placeholder='Search for tags'\n      aria-label='Search'\n    />\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TagType } from '../../data/types'\nimport TypeIcon from '../../icons/TypeIcon'\nimport { formatCount, formatTagname } from '../../misc/formatting'\n\ninterface EntryProps {\n  name: string\n  posts: number\n  types: TagType[]\n  onClick: MouseEventHandler\n}\n\nconst EntryWrapper = styled.div(\n  ({ theme }) => css`\n    display: grid;\n    grid-template-columns: 48px 1fr auto;\n    min-height: ${theme.dimensions.blockHeight}; // COMPAT: Kiwi Browser\n    height: ${theme.dimensions.blockHeight};\n    background: white;\n    align-items: center;\n  `\n)\n\nconst Name = styled.span`\n  grid-column: 2/3;\n`\n\nconst Count = styled.span`\n  grid-column: 3/4;\n`\n\nconst Icon = styled.div`\n  grid-column: 1/2;\n  text-align: center;\n`\n\nexport default function DropdownListEntry(props: EntryProps) {\n  const { name, posts, types, onClick } = props\n\n  return (\n    <EntryWrapper onClick={onClick}>\n      <Icon>\n        <TypeIcon types={types} />\n      </Icon>\n      <Name>{formatTagname(name)}</Name>\n      <Count>{formatCount(posts)} posts</Count>\n    </EntryWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport DropdownListEntry from './DropdownListEntry'\nimport TagDataClass from '../../data/Tag'\nimport { TagType } from '../../data/types'\nimport { ThemeType } from '../../misc/theme'\nimport { flexColumn, flexColumnGap } from '../../styled/mixins'\n\nfunction sizeAndPosition(tagSelector: HTMLDivElement | null) {\n  if (tagSelector) {\n    const { offsetTop, clientHeight, offsetLeft, clientWidth } = tagSelector\n\n    return css`\n      position: absolute;\n      top: ${offsetTop + clientHeight}px;\n      left: ${offsetLeft}px;\n      width: ${clientWidth}px;\n      max-height: 50vh;\n    `\n  }\n\n  return ''\n}\n\nconst ListWrapper = styled.div(\n  (props: { tagSelectorRef: HTMLDivElement | null; theme: ThemeType }) => css`\n    ${flexColumn()}\n    ${flexColumnGap('1px')}\n    ${sizeAndPosition(props.tagSelectorRef)};\n    background: lightgrey;\n    box-sizing: border-box;\n    border: ${props.theme.dimensions.borderWidth} ${props.theme.colors.accentColor} solid;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    color: black;\n    overflow-y: scroll;\n    z-index: 3;\n  `\n)\n\ninterface DropdownListProps {\n  tagSelectorRef: HTMLDivElement | null\n  entries: {\n    name: string\n    posts: number\n    types: TagType[]\n  }[]\n  onClick: (entry: TagDataClass) => void\n}\n\nexport default function DropdownList(props: DropdownListProps) {\n  const { tagSelectorRef, entries, onClick } = props\n\n  return entries && entries.length > 0 ? (\n    <ListWrapper tagSelectorRef={tagSelectorRef}>\n      {entries.map((entry) => (\n        <DropdownListEntry key={entry.name} onClick={() => onClick(entry)} {...entry} />\n      ))}\n    </ListWrapper>\n  ) : null\n}\n","import { useCallback, useState } from 'react'\nimport { Modifier } from '../data/types'\n\nconst order = [Modifier.PLUS, Modifier.MINUS, Modifier.OR]\n\n/**\n * Small utility hook to abstract the rotating modifier away\n */\nexport default function useModifier(initialValue: Modifier = Modifier.PLUS): [Modifier, () => void] {\n  const [modifier, setModifier] = useState(initialValue)\n\n  const nextModifier = useCallback(() => {\n    const currentIndex = order.indexOf(modifier)\n    const nextIndex = currentIndex + 1\n\n    // make the value rotate\n    setModifier(order[nextIndex % order.length])\n  }, [modifier])\n\n  return [modifier, nextModifier]\n}\n","import React, { useState, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport api from '../../misc/api'\nimport { prepareTag } from '../../misc/prepare'\nimport { AddButton, ModifierButton } from '../common/Buttons'\nimport TagInput from './TagInput'\nimport DropdownList from './DropdownList'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addTag } from '../../redux/actions'\nimport { ThemeType } from '../../misc/theme'\nimport { selectTagSuggestionCount } from '../../redux/selectors'\nimport useThrottledEffect from '../../hooks/useThrottledEffect'\nimport useModifier from '../../hooks/useModifier'\nimport { serializeTagname } from '../../misc/formatting'\nimport { TagLike } from '../../data/types'\n\nconst TagSelectorWrapper = styled.div(\n  (props: { closed: boolean; ref: (ref: HTMLInputElement) => void; theme: ThemeType }) => css`\n    display: flex;\n    background: white;\n    ${props.closed\n      ? css`\n          border-radius: ${props.theme.dimensions.borderRadius};\n        `\n      : css`\n          border-radius: ${props.theme.dimensions.borderRadius} ${props.theme.dimensions.borderRadius} 0 0;\n\n          > ${AddButton} {\n            border-radius: 0 ${props.theme.dimensions.borderRadius} 0 0;\n          }\n\n          > ${ModifierButton} {\n            border-radius: ${props.theme.dimensions.borderRadius} 0 0 0;\n          }\n        `}\n  `\n)\n\nexport default function TagSelector() {\n  const dispatch = useDispatch()\n\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState<TagLike[]>([])\n  const [tagSelectorRef, setTagSelectorRef] = useState<HTMLDivElement | null>(null)\n  const [modifier, nextModifier] = useModifier()\n\n  const tagSuggestionsCount = useSelector(selectTagSuggestionCount)\n\n  const activateTag = useCallback(\n    ({ name, posts, types }) => {\n      dispatch(\n        addTag(\n          prepareTag({\n            name,\n            types,\n            modifier,\n            count: posts,\n          })\n        )\n      )\n\n      setValue('')\n      setSuggestions([])\n    },\n    [dispatch, modifier]\n  )\n\n  useThrottledEffect(\n    async () => {\n      if (!value) {\n        setSuggestions([])\n        return\n      }\n\n      const newSuggestions = await api.getTags(serializeTagname(value), tagSuggestionsCount)\n\n      setSuggestions(newSuggestions)\n    },\n    300,\n    [tagSuggestionsCount, value]\n  )\n\n  const onAddClick = useCallback(() => {\n    if (value && value.trim()) {\n      const sanitizedTagname = serializeTagname(value)\n      const suggestion = suggestions.find((s) => s.name === sanitizedTagname) || {}\n      activateTag({ ...suggestion, name: value })\n    }\n  }, [value, activateTag, suggestions])\n\n  return (\n    <TagSelectorWrapper ref={setTagSelectorRef} closed={suggestions.length === 0}>\n      <ModifierButton onClick={nextModifier} aria-label='Tag Modifier'>\n        {modifier}\n      </ModifierButton>\n      <TagInput value={value} setValue={setValue} onSubmit={onAddClick} />\n      <AddButton onClick={onAddClick} aria-label='Add Tag'>\n        Add\n      </AddButton>\n      {suggestions.length > 0 && (\n        <DropdownList tagSelectorRef={tagSelectorRef} entries={suggestions} onClick={activateTag} />\n      )}\n    </TagSelectorWrapper>\n  )\n}\n","import React, { MouseEventHandler } from 'react'\nimport FlexPair from './FlexPair'\nimport Toggle from './Toggle'\n\ninterface LabeledToggleProps {\n  children: JSX.Element | string\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function LabeledToggle(props: LabeledToggleProps) {\n  const { children, value, onToggle } = props\n\n  return (\n    <FlexPair>\n      <Toggle value={value} onToggle={onToggle} />\n      <span>{children}</span>\n    </FlexPair>\n  )\n}\n","import React, { ChangeEventHandler, useCallback, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport LabeledToggle from '../common/LabeledToggle'\nimport { ThemeType } from '../../misc/theme'\nimport { PreferenceKey } from '../../data/types'\nimport usePreference from '../../hooks/usePreference'\nimport { gridWithGap } from '../../styled/mixins'\n\nconst OptionsWrapper = styled.div`\n  ${gridWithGap}\n`\n\nconst StyledInput = styled.input(\n  (props: { value: string; theme: ThemeType }) => css`\n    background: none;\n    border: none;\n    outline: none;\n    color: ${props.theme.colors.accentColor};\n    width: ${0.65 * props.value.length}em;\n    text-align: right;\n    font-size: ${props.theme.fontSizes.content};\n    margin: -1px 0.2em 0 0.2em;\n\n    ::-webkit-inner-spin-button,\n    ::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    -moz-appearance: textfield;\n  `\n)\n\nexport default function Options() {\n  const [rated, setRated] = usePreference(PreferenceKey.RATED)\n  const [ratedThreshold, setRatedThreshold] = usePreference(PreferenceKey.RATEDThreshold)\n  const toggleRated = useCallback(() => setRated(!rated), [rated, setRated])\n\n  const [ratedThresholdInternal, setRatedThresholdInternal] = useState(ratedThreshold ? ratedThreshold.toString() : '1')\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (event) => setRatedThresholdInternal(event.target.value),\n    []\n  )\n  const onBlur = useCallback(() => setRatedThreshold(Number(ratedThresholdInternal)), [\n    ratedThresholdInternal,\n    setRatedThreshold,\n  ])\n\n  return (\n    <OptionsWrapper>\n      <LabeledToggle value={rated} onToggle={toggleRated}>\n        {rated ? (\n          <div style={{ display: 'flex' }}>\n            <span>More than</span>\n            <StyledInput type='text' value={ratedThresholdInternal} onChange={onChange} onBlur={onBlur} />\n            <span>likes</span>\n          </div>\n        ) : (\n          'Only show Rated Posts'\n        )}\n      </LabeledToggle>\n    </OptionsWrapper>\n  )\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import React, { MouseEventHandler, memo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { NO_OP } from '../data/types'\n\nimport { ThemeType } from '../misc/theme'\n\nconst StyledIcon = styled.i(\n  (props: { color: string; size: number; theme: ThemeType }) => css`\n    color: ${props.color};\n    min-width: ${props.size}px;\n    height: ${props.size}px;\n\n    svg {\n      color: ${props.color};\n    }\n  `\n)\n\nconst StyledSvg = styled.svg(\n  (props: { size: number } & JSX.IntrinsicAttributes) => css`\n    width: ${props.size}px;\n    height: ${props.size}px;\n  `\n)\n\ninterface IconProps {\n  icon: string\n  className?: string\n  color?: string\n  size?: number\n  onClick?: MouseEventHandler\n  prefix?: string\n}\n\nconst Icon = (props: IconProps) => {\n  const { icon, className = '', color = 'black', size = 14, onClick = NO_OP, prefix = 'fas' } = props\n\n  if (icon === 'pixiv') {\n    return <PixivIcon {...props} />\n  }\n\n  return (\n    <div onClick={onClick} className={className}>\n      <StyledIcon className={`${prefix} ${icon}`} color={color} size={size} />\n    </div>\n  )\n}\n\nexport const CharacterIcon = styled(Icon).attrs({\n  icon: 'fa-user',\n})``\n\nexport const ArtistIcon = styled(Icon).attrs({\n  icon: 'fa-pen',\n})``\n\nexport const CopyrightIcon = styled(Icon).attrs({\n  icon: 'fa-copyright',\n})``\n\nexport const CloseIcon = styled(Icon).attrs({\n  icon: 'fa-times',\n})``\n\nexport const ExpandIcon = styled(Icon).attrs({\n  icon: 'fa-expand',\n})``\n\nexport const ExternalLinkIcon = styled(Icon).attrs({\n  icon: 'fa-external-link-alt',\n})``\n\nexport const DownloadIcon = styled(Icon).attrs({\n  icon: 'fa-download',\n})``\n\nexport const SourceIcon = styled(Icon).attrs({\n  icon: 'fa-hashtag',\n})``\n\nexport const RatingIcon = styled(Icon).attrs({\n  icon: 'fa-registered',\n})``\n\nexport const HeartIcon = styled(Icon).attrs({\n  icon: 'fa-heart',\n})``\n\nexport const LinkIcon = styled(Icon).attrs({\n  icon: 'fa-link',\n})``\n\nexport const BrandIcon = styled(Icon).attrs({\n  prefix: 'fab',\n})``\n\nexport const PlayIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-play',\n  })``\n)\n\nexport const PauseIcon = memo(\n  styled(Icon).attrs({\n    icon: 'fa-pause',\n  })``\n)\n\nexport const ArrowDown = styled(Icon).attrs({\n  icon: 'fa-caret-down',\n})``\n\nexport const CodeBranchIcon = styled(Icon).attrs({\n  icon: ' fa-code-branch',\n})``\n\nconst PixivIcon = (props: Omit<IconProps, 'icon'>) => {\n  const { color = 'black', size = 14, onClick = NO_OP } = props\n\n  return (\n    <StyledSvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' size={size} onClick={onClick}>\n      <path\n        fill={color}\n        d='M4.935 0A4.924 4.924 0 0 0 0 4.935v14.13A4.924 4.924 0 0 0 4.935 24h14.13A4.924 4.924 0 0 0 24 19.065V4.935A4.924 4.924 0 0 0 19.065 0zm7.81 4.547c2.181 0 4.058.676 5.399 1.847a6.118 6.118 0 0 1 2.116 4.66c.005 1.854-.88 3.476-2.257 4.563-1.375 1.092-3.225 1.697-5.258 1.697-2.314 0-4.46-.842-4.46-.842v2.718c.397.116 1.048.365.635.779H5.79c-.41-.41.19-.65.644-.779V7.666c-1.053.81-1.593 1.51-1.868 2.031.32 1.02-.284.969-.284.969l-1.09-1.73s3.868-4.39 9.553-4.39zm-.19.971c-1.423-.003-3.184.473-4.27 1.244v8.646c.988.487 2.484.832 4.26.832h.01c1.596 0 2.98-.593 3.93-1.533.952-.948 1.486-2.183 1.492-3.683-.005-1.54-.504-2.864-1.42-3.86-.918-.992-2.274-1.645-4.002-1.646Z'\n      />\n    </StyledSvg>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n","import styled from 'styled-components'\nimport { borderRadius, boxShadow, gutter, layer } from '../../styled/mixins'\n\nexport default styled.div`\n  display: grid;\n  ${gutter}\n  ${layer}\n  ${boxShadow}\n  ${borderRadius}\n  width: 100%;\n`\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname.replace(/_/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { boxShadow, flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${boxShadow({ theme })}\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.backgroundColor2};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar role='cell'>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.ABOUT}>\n          About\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number; className?: string }) {\n  const theme = useTheme()\n\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={props.size}\n      height={props.size}\n      viewBox='0 0 12.7 12.7'\n      className={props.className}\n    >\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\ninterface FlexPairProps {\n  children: [JSX.Element, JSX.Element]\n}\n\nconst Wrapper = styled.div`\n  ${flexRowWithGap}\n`\n\nexport default function FlexPair({ children }: FlexPairProps) {\n  return <Wrapper>{children}</Wrapper>\n}\n"],"sourceRoot":""}