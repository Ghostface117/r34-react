{"version":3,"sources":["styled/mixins.tsx","redux/selectors.ts","firebase/analytics.ts","firebase/signIn.ts","data/encryption.ts","firebase/genericConverter.ts","firebase/storage.ts","firebase/index.ts","data/utils.ts","components/common/Text.tsx","components/common/Lines.tsx","data/browserUtils.ts","data/TagDataClass.ts","components/common/Buttons.tsx","components/common/FlexColumn.tsx","misc/formatting.ts","components/common/Surface.tsx","components/features/Header.tsx","components/styled/FlexImage.tsx","hooks/usePreference.tsx","components/widgets/ResetButton.tsx","icons/OutOfResults.png","icons/Loading.tsx","icons/R34Icon.tsx","hooks/useFirebaseAuthState.tsx","data/PostDataClass.ts","misc/prepare.ts","redux/actions.ts","data/types.ts","components/features/ErrorBoundary.tsx","styled/themes/dark.ts","styled/themes/light.ts","styled/themes/coffee.ts","styled/themes/electric.ts","styled/themes/index.ts","GlobalStyles.tsx","components/pages/ErrorScreen.tsx","components/pages/LoadingScreen.tsx","components/widgets/CookieConfirmation.tsx","analytics/events.ts","redux/middleware/persistence.ts","redux/middleware/analytics.ts","misc/api.ts","data/CommentDataClass.ts","redux/middleware/requests.ts","redux/middleware/index.ts","redux/reducers/preferences.ts","redux/reducers/results.ts","redux/reducers/tags.ts","redux/reducers/reader.ts","redux/reducers/likes.ts","redux/reducers/suggestions.ts","redux/reducers/index.ts","redux/store.ts","components/pages/Terms.tsx","App.tsx","index.tsx"],"names":["defaultBorder","theme","css","colors","accentColor","dimensions","borderWidth","borderRadius","layer","layerBg","boxShadow","primaryHover","backgroundColor","backgroundColor2","flexColumn","flexColumnWithGap","flexColumnGap","gutter","gridWithGap","gap","flexRowWithGap","flexRowGap","amount","supportsGap","supportsFlexGap","centeredMaxWidth","bodyWidth","defaultBlock","blockHeight","flexMedia","preserveAspectRatio","width","height","supportsAspectRatio","shadow","radius","color","dropShadow","mediaStyle","selectActiveTags","state","tags","active","selectPosts","results","posts","selectCount","count","selectPageNumber","pageNumber","selectPreferences","preferences","selectResultsLayout","resultsLayout","selectPreloadVideos","selectOriginals","originals","selectCookies","cookies","selectFullsceenState","reader","isEnabled","selectAliases","aliases","selectPageSize","pageSize","selectTagSuggestionCount","tagSuggestionsCount","selectUseCorsProxy","useCorsProxy","selectShowMetadata","showMetadata","selectShowComments","showComments","selectSort","sort","selectSuggestions","suggestions","entries","selectActiveThemeId","themeId","selectAutoPlay","autoPlay","selectHideSeen","hideSeen","selectNumberOfActiveTags","createSelector","Object","keys","length","selectAliasesAsList","values","flat","selectOutOfResults","selectHasMoreResults","outOfResults","selectLastPage","Math","ceil","selectFullScreenPost","postId","fullScreenPostId","find","post","id","selectFullScreenIndex","fullScreenPost","indexOf","selectMinRating","rated","ratedThreshold","selectNextIndex","selectedIndex","undefined","selectPreviousIndex","selectPostById","defaultMemoize","selectAliasesByTagName","tagName","selectLikedByPostId","likes","logEvent","event","a","firebase","analytics","payload","googleAuthProvider","auth","GoogleAuthProvider","signIn","signInWithPopup","catch","error","console","code","message","signOut","sha256","msgBuffer","TextEncoder","encode","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","GenericConverter","data","snapshot","options","userConverter","getUserDoc","currentUser","email","key","userDoc","firestore","collection","doc","getUserData","withConverter","get","userSnap","userData","getPreferences","setPreferences","set","resetSeenPosts","log","getSupertags","snap","result","forEach","addSupertag","name","description","removeSupertag","delete","useSupertags","useState","supertags","setSupertags","setCollection","useEffect","then","hash","col","docs","reduce","unsubscribe","onSnapshot","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getMediaType","type","PostType","VIDEO","MediaType","small_src","includes","big_src","GIF","PICTURE","listToMap","list","keyProp","current","tagsToString","tag","modifier","parseUrl","value","URL","err","versionToNumber","majorMinorPatch","Number","split","download","url","filename","pop","fetch","headers","Headers","Origin","window","location","origin","mode","response","blob","document","createElement","href","createObjectURL","body","appendChild","click","remove","e","getVersion","process","REACT_APP_VERSION","getVersionString","version","getCorrectSource","loadOriginal","getCorrectSourceOrigin","source","searchParams","boolToNumber","Title","styled","h2","fontSizes","bigTitle","BigTitle","h1","SmallTitle","h3","content","Faded","span","subduedText","HorizontalLine","div","props","VerticalLine","flex","style","display","flexDirection","rowGap","isSupported","scrollHeight","parentNode","removeChild","supportsObjectFit","supportsFullscreen","fullscreenEnabled","openFullscreen","element","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","TagDataClass","types","Modifier","PLUS","this","TextButton","button","bigSpacing","timings","longTransitionTime","RedButton","transitionTime","BlockButton","AddButton","ModifierButton","FlexColumn","FlexColumnWithSpacing","formatCount","numberString","number","toFixed","formatSource","host","formatDuration","duration","min","trunc","sec","formatTagname","tagname","replace","serializeTagname","toLowerCase","formatTagnameAndCount","formatDateTime","date","toLocaleDateString","toLocaleTimeString","formatTime","milliseconds","formatUnit","unitSize","unit","unitString","HeaderWrapper","header","TitleBar","layerBgSolid","MenuBar","nav","hugeSpacing","LocationStyledLink","Link","to","text","Header","useLocation","pathname","role","size","RouteName","SEARCH","HELP","SETTINGS","ABOUT","FlexImage","img","usePreference","dispatch","useDispatch","useSelector","setValue","useCallback","setPreference","ResetButton","reset","localStorage","clear","reload","onClick","StyledSvg","svg","Loading","xmlns","xmlnsXlink","viewBox","enable-background","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","repeatCount","begin","R34Icon","useTheme","className","transform","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","fontStyle","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","fillOpacity","x","y","fontVariant","fontStretch","useFirebaseAuthState","authState","setAuthState","user","setUser","onAuthStateChanged","PostDataClass","score","rating","media_type","media_src","file_url","thumbnail_src","creator_id","creator_url","status","parent_id","has_children","has_comments","comments_url","has_notes","created_at","change","comments","Date","parse","prepareTag","dirtyTag","preparePost","sample_url","preview_url","t","Boolean","ADD_ALIASES","ADD_POSTS","ADD_TAG","ENTER_FULLSCREEN","EXIT_FULLSCREEN","FETCH_COMMENTS","FETCH_PREFERENCES","FETCH_SUGGESTIONS","GET_MORE_RESULTS","GET_RESULTS","LIKE_POST","REMOVE_TAG","SAVE_PREFERENCES","SET_COMMENTS","SET_FULLSCREEN_POST","SET_POSTS","SET_PREFERENCE","SET_PREFERENCES","SET_SUGGESTIONS","addTag","removeTag","addAliases","forTag","addPosts","setPosts","setComments","fetchComments","getResults","getMoreResults","enterFullscreen","exitFullscreen","setFullScreenPost","likePost","setSuggestions","fetchSuggestions","fetchPreferences","savePreferences","TagType","ResultLayout","ThemeId","RatingType","PreferenceKey","SortType","NO_OP","ErrorBoundary","hasError","fallback","children","React","Component","dark","spacing","hoverAccent","layerBgHighlight","liked","light","coffee","electric","themes","DARK","LIGHT","COFFEE","ELECTRIC","defaultThemeId","createGlobalStyle","FullScreenCentered","ErrorScreen","GlobalStyles","src","outOfResultsPicture","alt","LoadingScreen","CookieWrapper","StyledSpan","CookieConfirmation","COOKIES","setCookies","handleAccept","aria-label","AnalyticsEventId","saveTimeout","eventLogging","store","next","action","getState","activeTags","page_number","active_tags","searchEvent","persistence","clearTimeout","setTimeout","firebaseFunctions","sourceTags","SOURCE","ratingTags","RATING","API","activeApi","setApi","target","apiLocal","apiUrl1","apiUrl2","searchTerm","limit","defaultPageSize","json","matchingSupertags","filter","details","startsWith","matchingRating","matchingSourceTags","minScore","DATE","getIdToken","idToken","buildPostUrl","Authorization","res","rawPost","encodeURIComponent","page","tagList","normalTags","OR","orTags","tagParts","push","parseComment","rawComment","CommentDataClass","creator","apiRequests","hasMoreResults","minRating","api","getPosts","getAliases","sanitizedAliases","alias","getTags","warn","rawComments","middleware","composeWithDevTools","applyMiddleware","requests","initialPreferencesState","preloadVideos","INFINITE_COLUMN","produce","draft","assign","initialResultsState","postCount","postIndex","findIndex","p","initialTagsState","newTag","tagToRemove","initialReaderState","setPostId","now","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createStore","persistor","persistStore","SectionBody","Surface","Section","Terms","title","Help","lazy","Settings","Search","About","Privacy","App","loading","ThemedApp","isSignedIn","exact","path","PRIVACY","TERMS","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.01769413.chunk.js","sourcesContent":["import { css, DefaultTheme } from 'styled-components'\r\nimport { supportsAspectRatio, supportsFlexGap, supportsGap } from '../data/browserUtils'\r\n\r\nexport interface PropsWithTheme {\r\n  theme: DefaultTheme\r\n}\r\n\r\n/**\r\n * Gives elements a border TODO: rename to defaultborder\r\n */\r\nexport function defaultBorder({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-color: ${theme.colors.accentColor};\r\n    border-width: ${theme.dimensions.borderWidth};\r\n    ${borderRadius({ theme })}\r\n    border-style: solid;\r\n  `\r\n}\r\n\r\n/**\r\n * Element will look like a new layer\r\n */\r\nexport function layer({ theme }: PropsWithTheme) {\r\n  return css`\r\n    background-color: ${theme.colors.layerBg};\r\n    ${boxShadow({ theme })}\r\n  `\r\n}\r\n\r\n/**\r\n * Element becomes accentColor on hover, and is highlighted when active/focused\r\n */\r\nexport function primaryHover({ theme }: PropsWithTheme) {\r\n  return css`\r\n    color: ${theme.colors.accentColor};\r\n    background: ${theme.colors.backgroundColor};\r\n\r\n    :hover {\r\n      background-color: ${theme.colors.accentColor};\r\n      color: ${theme.colors.backgroundColor};\r\n    }\r\n\r\n    :active,\r\n    :focus {\r\n      color: ${theme.colors.backgroundColor2};\r\n      border-color: ${theme.colors.backgroundColor2};\r\n    }\r\n  `\r\n}\r\n\r\nexport function flexColumn() {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `\r\n}\r\n\r\nexport function flexColumnWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    flex-direction: column;\r\n    ${flexColumnGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gridWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: grid;\r\n    ${gap(theme.dimensions.gutter)}\r\n  `\r\n}\r\n\r\nexport function flexRowWithGap({ theme }: PropsWithTheme) {\r\n  return css`\r\n    display: flex;\r\n    align-items: center;\r\n    ${flexRowGap(theme.dimensions.gutter)};\r\n  `\r\n}\r\n\r\nexport function gap(amount: string) {\r\n  return supportsGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexRowGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-right: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\nexport function flexColumnGap(amount: string) {\r\n  return supportsFlexGap\r\n    ? css`\r\n        gap: ${amount};\r\n      `\r\n    : css`\r\n        > :not(:last-child) {\r\n          margin-bottom: ${amount};\r\n        }\r\n      `\r\n}\r\n\r\n/**\r\n * Default spacing for grid and flex\r\n */\r\nexport function gutter({ theme }: PropsWithTheme) {\r\n  return css`\r\n    ${gap(theme.dimensions.gutter)};\r\n    padding: ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Limits content to a maximum width and centers it\r\n */\r\nexport function centeredMaxWidth({ theme }: PropsWithTheme) {\r\n  return css`\r\n    width: 100%;\r\n    max-width: ${theme.dimensions.bodyWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n}\r\n\r\n/**\r\n * Fixed height and padding\r\n */\r\nexport function defaultBlock({ theme }: PropsWithTheme) {\r\n  return css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    padding: 0 ${theme.dimensions.gutter};\r\n  `\r\n}\r\n\r\n/**\r\n * Preserves aspect ratio of the element and ensures it is displayed as big as possible\r\n */\r\nexport function flexMedia() {\r\n  return css`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    object-fit: contain;\r\n  `\r\n}\r\n\r\ninterface Size {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport function preserveAspectRatio({ width, height }: Partial<Size>) {\r\n  if (!width || !height) {\r\n    return ''\r\n  }\r\n\r\n  return supportsAspectRatio\r\n    ? css`\r\n        aspect-ratio: ${width} / ${height};\r\n      `\r\n    : css`\r\n        max-width: 100%;\r\n        height: auto;\r\n      `\r\n}\r\n\r\nexport function borderRadius({ theme }: PropsWithTheme) {\r\n  return css`\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n}\r\n\r\nexport function boxShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    box-shadow: 0 1px ${theme.shadow.radius} ${theme.shadow.color};\r\n  `\r\n}\r\n\r\nexport function dropShadow({ theme }: PropsWithTheme) {\r\n  return css`\r\n    filter: drop-shadow(0 1px ${theme.shadow.radius} ${theme.shadow.color});\r\n  `\r\n}\r\n\r\nexport function mediaStyle() {\r\n  return css`\r\n    ${borderRadius}\r\n    ${boxShadow}\r\n    grid-area: 1/1/2/2;\r\n    z-index: 1;\r\n  `\r\n}\r\n","import { createSelector, defaultMemoize } from 'reselect'\r\nimport { DefaultRootState } from '../react-redux'\r\n\r\n// Simple selectors\r\nexport const selectActiveTags = (state: DefaultRootState) => state.tags.active\r\nexport const selectResults = (state: DefaultRootState) => state.results\r\nexport const selectPosts = (state: DefaultRootState) => state.results.posts\r\nexport const selectCount = (state: DefaultRootState) => state.results.count\r\nexport const selectPageNumber = (state: DefaultRootState) => state.results.pageNumber\r\nexport const selectPreferences = (state: DefaultRootState) => state.preferences\r\nexport const selectResultsLayout = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectPreloadVideos = (state: DefaultRootState) => state.preferences.resultsLayout\r\nexport const selectOriginals = (state: DefaultRootState) => state.preferences.originals\r\nexport const selectRated = (state: DefaultRootState) => state.preferences.rated\r\nexport const selectRatedThreshold = (state: DefaultRootState) => state.preferences.ratedThreshold\r\nexport const selectCookies = (state: DefaultRootState) => state.preferences.cookies\r\nexport const selectFullsceenState = (state: DefaultRootState) => state.reader.isEnabled\r\nexport const selectFullsceenPostId = (state: DefaultRootState) => state.reader.postId\r\nexport const selectAliases = (state: DefaultRootState) => state.tags.aliases\r\nexport const selectPageSize = (state: DefaultRootState) => state.preferences.pageSize\r\nexport const selectTagSuggestionCount = (state: DefaultRootState) => state.preferences.tagSuggestionsCount\r\nexport const selectUseCorsProxy = (state: DefaultRootState) => state.preferences.useCorsProxy\r\nexport const selectShowMetadata = (state: DefaultRootState) => state.preferences.showMetadata\r\nexport const selectShowComments = (state: DefaultRootState) => state.preferences.showComments\r\nexport const selectSort = (state: DefaultRootState) => state.preferences.sort\r\nexport const selectSuggestions = (state: DefaultRootState) => state.suggestions.entries\r\nexport const selectActiveThemeId = (state: DefaultRootState) => state.preferences.themeId\r\nexport const selectAutoPlay = (state: DefaultRootState) => state.preferences.autoPlay\r\nexport const selectHideSeen = (state: DefaultRootState) => state.preferences.hideSeen\r\n\r\n// Memoized selectors\r\nexport const selectNumberOfActiveTags = createSelector(selectActiveTags, (tags) => Object.keys(tags).length)\r\nexport const selectAliasesAsList = createSelector(selectAliases, (aliases) => Object.values(aliases).flat())\r\n\r\nexport const selectHasResults = createSelector(selectPosts, (posts) => posts.length !== 0)\r\nexport const selectOutOfResults = createSelector(selectPosts, selectCount, (posts, count) => posts.length === count)\r\nexport const selectHasMoreResults = createSelector(selectOutOfResults, (outOfResults) => !outOfResults)\r\nexport const selectLastPage = createSelector(\r\n  selectCount,\r\n  selectPageSize,\r\n  (count, pageSize) => Math.ceil(count / pageSize) - 1\r\n)\r\nexport const selectFullScreenPost = createSelector(selectPosts, selectFullsceenPostId, (posts, fullScreenPostId) =>\r\n  posts.find((post) => post.id === fullScreenPostId)\r\n)\r\nexport const selectFullScreenIndex = createSelector(selectPosts, selectFullScreenPost, (posts, fullScreenPost) =>\r\n  fullScreenPost ? posts.indexOf(fullScreenPost) : -1\r\n)\r\nexport const selectMinRating = createSelector(selectRated, selectRatedThreshold, (rated, ratedThreshold) =>\r\n  rated ? ratedThreshold : 0\r\n)\r\nexport const selectNextIndex = createSelector(selectPosts, selectFullScreenIndex, (posts, selectedIndex) =>\r\n  selectedIndex + 1 < posts.length ? selectedIndex + 1 : undefined\r\n)\r\nexport const selectPreviousIndex = createSelector(selectFullScreenIndex, (selectedIndex) =>\r\n  selectedIndex > 0 ? selectedIndex - 1 : undefined\r\n)\r\n\r\n// Parameterized selectors\r\nexport const selectPostById = defaultMemoize((id: number) => {\r\n  return createSelector(selectPosts, (posts) => {\r\n    return posts.find((post) => post.id === id)\r\n  })\r\n})\r\n\r\nexport const selectAliasesByTagName = defaultMemoize((tagName: string) => {\r\n  return createSelector(selectAliases, (aliases) => {\r\n    return aliases[tagName]\r\n  })\r\n})\r\n\r\nexport const selectLikedByPostId = defaultMemoize((id: number) => (state: DefaultRootState) => id in state.likes)\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport { SearchEvent } from '../analytics/events'\r\n\r\nexport async function logEvent(event: SearchEvent) {\r\n  firebase.analytics().logEvent<typeof event.id>(event.id, event.payload)\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport function signIn() {\r\n  firebase\r\n    .auth()\r\n    .signInWithPopup(googleAuthProvider)\r\n    .catch((error) => {\r\n      console.error('Sign in failed:', error.code, error.message)\r\n    })\r\n}\r\n\r\nexport async function signOut() {\r\n  return await firebase.auth().signOut()\r\n}\r\n","export async function sha256(message: string) {\r\n  const msgBuffer = new TextEncoder().encode(message)\r\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer)\r\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\r\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('')\r\n\r\n  return hashHex\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport class GenericConverter<T> {\r\n  toFirestore(data: T): firebase.firestore.DocumentData {\r\n    return data\r\n  }\r\n  fromFirestore(snapshot: firebase.firestore.QueryDocumentSnapshot, options: firebase.firestore.SnapshotOptions): T {\r\n    const data = snapshot.data(options)!\r\n    return data as T\r\n  }\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport { sha256 } from '../data/encryption'\r\nimport { User, SupertagDetails } from './types'\r\nimport { PreferencesState } from '../redux/reducers/preferences'\r\nimport { GenericConverter } from './genericConverter'\r\nimport { Modifier } from '../data/types'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst userConverter = new GenericConverter<User>()\r\n\r\nasync function getUserDoc() {\r\n  const { currentUser } = firebase.auth()\r\n  const email = currentUser?.email\r\n\r\n  if (email) {\r\n    const key = await sha256(email)\r\n    const userDoc = firebase.firestore().collection('users').doc(key)\r\n    return userDoc\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nasync function getUserData() {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    let userSnap = await userDoc.withConverter(userConverter).get()\r\n\r\n    const userData = userSnap.data()\r\n    return userData\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport async function getPreferences() {\r\n  const userData = await getUserData()\r\n  if (userData) {\r\n    return userData.preferences\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport async function setPreferences(preferences: PreferencesState) {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    await userDoc.set({ preferences: preferences })\r\n  }\r\n}\r\n\r\nexport async function getSeenPosts() {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    const snap = await userDoc.collection('seenposts').get()\r\n    const result: Record<string, {}> = {}\r\n\r\n    snap.forEach((doc) => {\r\n      const posstId = doc.id as string\r\n      result[posstId] = doc.data() as SupertagDetails\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport async function resetSeenPosts() {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    console.log('broken')\r\n  }\r\n}\r\n\r\nexport async function getSupertags() {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    const snap = await userDoc.collection('supertags').get()\r\n    const result: Record<string, SupertagDetails> = {}\r\n\r\n    snap.forEach((doc) => {\r\n      result[doc.id] = doc.data() as SupertagDetails\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\nexport async function addSupertag(name: string, description: string, tags: Record<string, Modifier>) {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    userDoc.collection('supertags').doc(name).set({ description, tags })\r\n  }\r\n}\r\n\r\nexport async function removeSupertag(name: string) {\r\n  const userDoc = await getUserDoc()\r\n\r\n  if (userDoc) {\r\n    userDoc.collection('supertags').doc(name).delete()\r\n  }\r\n}\r\n\r\nexport function useSupertags() {\r\n  const [supertags, setSupertags] = useState<Record<string, SupertagDetails>>({})\r\n  const [collection, setCollection] = useState<firebase.firestore.CollectionReference>()\r\n\r\n  useEffect(() => {\r\n    const { currentUser } = firebase.auth()\r\n    const email = currentUser?.email\r\n\r\n    if (email) {\r\n      sha256(email)\r\n        .then((hash) => {\r\n          const col = firebase.firestore().collection(`users/${hash}/supertags`)\r\n          setCollection(col)\r\n          return col.get()\r\n        })\r\n        .then((snapshot) => {\r\n          const result = snapshot.docs.reduce((result, doc) => {\r\n            result[doc.id] = doc.data() as SupertagDetails\r\n            return result\r\n          }, {} as Record<string, SupertagDetails>)\r\n\r\n          setSupertags(result)\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (collection) {\r\n      const unsubscribe = collection.onSnapshot((snapshot) => {\r\n        const result = snapshot.docs.reduce((result, doc) => {\r\n          const userSupertags = doc\r\n          result[userSupertags.id] = doc.data() as SupertagDetails\r\n          return result\r\n        }, {} as Record<string, SupertagDetails>)\r\n\r\n        setSupertags(result)\r\n      })\r\n\r\n      return () => {\r\n        unsubscribe()\r\n      }\r\n    }\r\n  }, [collection])\r\n\r\n  return supertags\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/analytics'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBHdepwE7M4Byu2lFtX2s__9COcMdvXu7Q',\r\n  authDomain: 'r34-react.firebaseapp.com',\r\n  databaseURL: 'https://r34-react.firebaseio.com',\r\n  projectId: 'r34-react',\r\n  storageBucket: 'r34-react.appspot.com',\r\n  messagingSenderId: '844749417844',\r\n  appId: '1:844749417844:web:11fa1fda0e14f1ac2dd021',\r\n  measurementId: 'G-27J3QXZ8YR',\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport * from './analytics'\r\nexport * from './signIn'\r\nexport * from './storage'\r\n","import PostDataClass from './PostDataClass'\nimport TagDataClass from './TagDataClass'\nimport { PostType, MediaType } from './types'\n\nexport const getMediaType = (type: PostType, post: PostDataClass) => {\n  if (type === PostType.VIDEO) {\n    return MediaType.VIDEO\n  }\n\n  // can't use .endsWith because of queryString\n  if (post.small_src.includes('.gif') || post.big_src.includes('.gif')) {\n    return MediaType.GIF\n  }\n\n  return MediaType.PICTURE\n}\n\nexport function getUrlParameter(src: string) {\n  return new URL(src).searchParams.get('url') || ''\n}\n\n/**\n * Converts a list of objects into a map.\n * @param list The original list\n * @param keyProp The keyProp parameter defines which property of the objects will be used as the index for the map\n */\nexport const listToMap = <T>(list: T[], keyProp: string): Record<string, T> => {\n  return list.reduce((result: Record<string, T>, current: any) => {\n    result[current[keyProp]] = current\n    return result\n  }, {})\n}\n\n/**\n * Joins tags together for analytics event\n */\nexport function tagsToString(tags: Record<string, TagDataClass>) {\n  return Object.values(tags)\n    .map((tag) => `${tag.modifier}${tag.name}`)\n    .sort()\n}\n\n/**\n * Returns a URL object when the value is a hyperlink. Else undefined\n */\nexport function parseUrl(value: string) {\n  try {\n    return new URL(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * converts a version like \"1.2.7\" into 127\n */\nexport function versionToNumber(majorMinorPatch: string) {\n  return Number(majorMinorPatch.split('.').join(''))\n}\n\n/**\n * Hacky ass way to download images cross origin. Could solve this by hosting both the app and the api on the same domain.\n */\nexport function download(url: string) {\n  const filename = url.split('/').pop() || ''\n\n  fetch(url, {\n    headers: new Headers({\n      Origin: window.location.origin,\n    }),\n    mode: 'cors',\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      var a = document.createElement('a')\n      a.download = filename\n      a.href = window.URL.createObjectURL(blob)\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    })\n    .catch((e) => console.error(e))\n}\n\n/**\n * Returns the current version of the project\n */\nexport function getVersion() {\n  // Some browsers fail to get environment variables. In that case return unknown.\n  if (process?.env?.REACT_APP_VERSION) {\n    return process.env.REACT_APP_VERSION\n  }\n\n  return 'unknown'\n}\n\n/**\n * Render ready version.\n */\nexport function getVersionString() {\n  const version = getVersion()\n\n  return version === 'unknown' ? 'Latest Release' : `Version ${version}`\n}\n\n/**\n * Returns the correct source based on preferences\n */\nexport function getCorrectSource(loadOriginal: boolean, useCorsProxy: boolean, big_src: string, small_src: string) {\n  const source = loadOriginal ? big_src : small_src\n  return getCorrectSourceOrigin(useCorsProxy, source)\n}\n\n/**\n * Returns the proxy source or direct depending on prefererence\n */\nexport function getCorrectSourceOrigin(useCorsProxy: boolean, source: string) {\n  return useCorsProxy ? source : getUrlParameter(source)\n}\n\nexport function boolToNumber(value: boolean) {\n  return value ? 1 : 0\n}\n","import styled, { css } from 'styled-components'\nimport { flexRowWithGap } from '../../styled/mixins'\n\nexport const Title = styled.h2(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const BigTitle = styled.h1(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n\n    justify-content: center;\n    font-size: ${theme.fontSizes.bigTitle};\n    font-weight: lighter;\n    text-align: center;\n  `\n)\n\nexport const SmallTitle = styled.h3(\n  ({ theme }) => css`\n    font-size: ${theme.fontSizes.content};\n  `\n)\n\nexport const Faded = styled.span(\n  ({ theme }) => css`\n    color: ${theme.colors.subduedText};\n  `\n)\n","import styled, { css } from 'styled-components'\n\nexport const HorizontalLine = styled.div(\n  (props) => css`\n    align-self: stretch;\n    height: 1px;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n\nexport const VerticalLine = styled.div(\n  (props) => css`\n    width: 1px;\n    align-self: stretch;\n    background: ${props.theme.colors.layerBg};\n  `\n)\n","export const supportsFlexGap = (() => {\r\n  // create flex container with row-gap set\r\n  var flex = document.createElement('div')\r\n  flex.style.display = 'flex'\r\n  flex.style.flexDirection = 'column'\r\n  flex.style.rowGap = '1px'\r\n\r\n  // create two, elements inside it\r\n  flex.appendChild(document.createElement('div'))\r\n  flex.appendChild(document.createElement('div'))\r\n\r\n  // append to the DOM (needed to obtain scrollHeight)\r\n  document.body.appendChild(flex)\r\n  var isSupported = flex.scrollHeight === 1 // flex container should be 1px high from the row-gap\r\n  //@ts-expect-error\r\n  flex.parentNode.removeChild(flex)\r\n\r\n  return isSupported\r\n})()\r\n\r\nexport const supportsGap = 'gap' in document.body.style\r\nexport const supportsAspectRatio = 'aspect-ratio' in document.body.style\r\nexport const supportsObjectFit = 'object-fit' in document.body.style\r\nexport const supportsFullscreen = document.fullscreenEnabled\r\n\r\nexport function openFullscreen(element: Element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.webkitRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.webkitRequestFullscreen()\r\n    //@ts-expect-error\r\n  } else if (element.msRequestFullscreen) {\r\n    //@ts-expect-error\r\n    element.msRequestFullscreen()\r\n  }\r\n}\r\n\r\nexport function closeFullscreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.webkitExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.webkitExitFullscreen()\r\n    //@ts-expect-error\r\n  } else if (document.msExitFullscreen) {\r\n    //@ts-expect-error\r\n    document.msExitFullscreen()\r\n  }\r\n}\r\n","import { TagType, Modifier } from './types'\n\nexport default class TagDataClass {\n  name: string\n  count?: number | null\n  types?: TagType[]\n  modifier?: Modifier\n\n  constructor(name: string, types: TagType[] = [], count: number | null = null, modifier: Modifier = Modifier.PLUS) {\n    this.name = name\n    this.types = types\n    this.count = count\n    this.modifier = modifier\n  }\n}\n","import styled, { css } from 'styled-components'\nimport { defaultBorder, dropShadow, primaryHover } from '../../styled/mixins'\n\nconst TextButton = styled.button(\n  ({ theme }) => css`\n    height: ${theme.dimensions.blockHeight};\n    padding: 0 ${theme.dimensions.bigSpacing};\n    font-size: ${theme.fontSizes.content};\n    ${defaultBorder({ theme })}\n    display: inline-flex;\n    gap: ${theme.dimensions.gutter};\n    align-items: center;\n    place-content: center;\n\n    transition: all ${theme.timings.longTransitionTime} ease-out;\n  `\n)\n\nexport const InvisButton = styled.button(\n  ({ theme }) => css`\n    background-color: transparent;\n    border: none;\n    padding: ${theme.dimensions.gutter};\n    ${dropShadow({ theme })}\n\n    svg {\n      transition: all ${theme.timings.transitionTime} ease-out;\n    }\n\n    :active {\n      svg {\n        transform: scale(1.1);\n      }\n    }\n  `\n)\n\nexport const RedButton = styled(TextButton)`\n  ${primaryHover}\n`\n\nexport const BlockButton = styled(RedButton)`\n  width: 100%;\n\n  :active {\n    transform: scaleX(1.03) scaleY(1.1);\n  }\n`\n\nexport const AddButton = styled(RedButton)(\n  ({ theme }) => css`\n    border-radius: 0 ${theme.dimensions.borderRadius} ${theme.dimensions.borderRadius} 0;\n  `\n)\n\nexport const ModifierButton = styled(TextButton)(\n  ({ theme }) => css`\n    background-color: transparent;\n    min-width: 48px;\n    font-weight: bold;\n\n    ${defaultBorder({ theme })}\n    border-right-width: 0;\n    border-radius: ${theme.dimensions.borderRadius} 0 0 ${theme.dimensions.borderRadius};\n  `\n)\n","import styled from 'styled-components'\nimport { flexColumn, gutter, centeredMaxWidth } from '../../styled/mixins'\n\nconst FlexColumn = styled.div`\n  ${flexColumn}\n  width: 100%;\n  min-height: 100%;\n`\n\nexport default FlexColumn\n\nexport const FlexColumnWithSpacing = styled(FlexColumn)`\n  ${gutter}\n  ${centeredMaxWidth}\n`\n","import { parseUrl } from '../data/utils'\n\n/**\n * Transforms a number into a shortened version for rendering.\n * Useful as it takes up less space.\n */\nexport const formatCount = (numberString: number) => {\n  const number = numberString\n\n  if (number >= 1e6) {\n    return `${(number / 1e6).toFixed(0)}M`\n  }\n\n  if (number >= 1e3) {\n    return `${(number / 1e3).toFixed(0)}K`\n  }\n\n  return number\n}\n\n/**\n * Formats source strings for rendering\n */\nexport const formatSource = (source: string) => {\n  const url = parseUrl(source)\n  return url ? url.host : source\n}\n\n/**\n * Seconds to mm:ss formatter\n */\nexport function formatDuration(duration: number) {\n  const min = Math.trunc(duration / 60)\n  const sec = Math.trunc(duration % 60)\n\n  return min + ':' + (sec < 10 ? '0' : '') + sec\n}\n\n/**\n * Formats tag names for rendering.\n */\nexport function formatTagname(tagname: string) {\n  return tagname\n    .replace(/_/g, ' ')\n    .replace(/source:/g, ' ')\n    .replace(/rating:/g, ' ')\n}\n\n/**\n * Serializes tag names for use in api requests.\n */\nexport function serializeTagname(tagname: string) {\n  return tagname.toLowerCase().replace(/ /g, '_')\n}\n\n/**\n * Formats tags with their count if possible\n */\nexport function formatTagnameAndCount(name: string, count?: number | null) {\n  return count ? `${formatTagname(name)} (${formatCount(count)})` : formatTagname(name)\n}\n\nexport function formatDateTime(date: Date) {\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\nexport function formatTime(milliseconds: number) {\n  if (milliseconds >= 315576e5) {\n    return formatUnit(milliseconds, 315576e5, 'year')\n  }\n  if (milliseconds >= 26297568e2) {\n    return formatUnit(milliseconds, 26297568e2, 'month')\n  }\n\n  if (milliseconds >= 6048e5) {\n    return formatUnit(milliseconds, 6048e5, 'week')\n  }\n\n  if (milliseconds >= 854e5) {\n    return formatUnit(milliseconds, 854e5, 'day')\n  }\n\n  if (milliseconds >= 36e5) {\n    return formatUnit(milliseconds, 36e5, 'hour')\n  }\n\n  if (milliseconds >= 6e4) {\n    return formatUnit(milliseconds, 6e4, 'minute')\n  }\n\n  if (milliseconds >= 1e3) {\n    return formatUnit(milliseconds, 1e3, 'second')\n  }\n\n  return `${milliseconds} ms`\n}\n\nfunction formatUnit(value: number, unitSize: number, unit: string) {\n  const result = (value / unitSize).toFixed(0)\n\n  const unitString = result === '1' ? unit : `${unit}s`\n\n  return `${result} ${unitString}`\n}\n","import styled from 'styled-components'\nimport { borderRadius, gutter, layer } from '../../styled/mixins'\n\nexport default styled.div`\n  display: grid;\n  ${gutter}\n  ${layer}\n  ${borderRadius}\n  width: 100%;\n`\n","import React, { RefAttributes } from 'react'\nimport { Link, LinkProps, useLocation } from 'react-router-dom'\nimport styled, { css, ThemeProps } from 'styled-components'\nimport { RouteName } from '../../data/types'\nimport R34Icon from '../../icons/R34Icon'\nimport { boxShadow, flexColumn, flexColumnGap, flexRowGap, flexRowWithGap } from '../../styled/mixins'\nimport { VerticalLine } from '../common/Lines'\nimport { BigTitle } from '../common/Text'\n\nconst HeaderWrapper = styled.header(\n  ({ theme }) => css`\n    ${flexColumn()}\n    ${flexColumnGap(theme.dimensions.bigSpacing)}\n  `\n)\n\nconst TitleBar = styled.div(\n  ({ theme }) => css`\n    ${flexRowWithGap({ theme })}\n    justify-content: center;\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter} 0;\n    ${boxShadow({ theme })}\n  `\n)\n\nconst MenuBar = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    padding: ${theme.dimensions.bigSpacing};\n    ${flexRowGap(theme.dimensions.hugeSpacing)}\n  `\n)\n\ntype LocationStyledLinkProps = LinkProps<unknown> &\n  RefAttributes<HTMLAnchorElement> &\n  ThemeProps<any> & { current: string }\n\nconst LocationStyledLink = styled(Link)(\n  ({ to, current, theme }: LocationStyledLinkProps) => css`\n    color: ${to === current ? theme.colors.accentColor : theme.colors.text};\n  `\n)\n\nexport default function Header() {\n  const current = useLocation().pathname\n\n  return (\n    <HeaderWrapper role='cell'>\n      <TitleBar>\n        <R34Icon size={32} />\n        <VerticalLine />\n        <BigTitle>\n          <span>Browse</span> <a href='https://rule34.xxx'>Rule34</a>\n        </BigTitle>\n      </TitleBar>\n\n      <MenuBar>\n        <LocationStyledLink current={current} to={RouteName.SEARCH}>\n          Search\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.HELP}>\n          Help\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.SETTINGS}>\n          Settings\n        </LocationStyledLink>\n        <VerticalLine />\n        <LocationStyledLink current={current} to={RouteName.ABOUT}>\n          About\n        </LocationStyledLink>\n      </MenuBar>\n    </HeaderWrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { preserveAspectRatio, flexMedia } from '../../styled/mixins'\n\nconst FlexImage = styled.img`\n  ${flexMedia}\n  ${preserveAspectRatio}\n`\n\nexport default FlexImage\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PreferenceKey } from '../data/types'\nimport { setPreference } from '../redux/actions'\nimport { PreferencesState } from '../redux/reducers/preferences'\nimport { selectPreferences } from '../redux/selectors'\n\n/**\n * useState for preferences using redux instead of local state.\n */\nexport default function usePreference<T extends PreferenceKey>(\n  key: T\n): [PreferencesState[T], (value: PreferencesState[T]) => void] {\n  const dispatch = useDispatch()\n  const preferences = useSelector(selectPreferences)\n  const setValue = useCallback((value: any) => dispatch(setPreference(key, value)), [dispatch, key])\n\n  return [preferences[key], setValue]\n}\n","import React, { useCallback } from 'react'\r\nimport { signOut } from '../../firebase'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetButton(props: any) {\r\n  const reset = useCallback(async () => {\r\n    localStorage.clear()\r\n    await signOut()\r\n    window.location.hash = ''\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  return (\r\n    <BlockButton onClick={reset} {...props}>\r\n      Reset Application\r\n    </BlockButton>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OutOfResults.9c71691c.png\";","import React from 'react'\nimport styled from 'styled-components'\n\n// Don't use theme here so the loadingScreen is independent\nconst StyledSvg = styled.svg`\n  height: 32px;\n  padding: 8px;\n`\n\nexport default function Loading() {\n  return (\n    <StyledSvg\n      xmlns='http://www.w3.org/2000/svg'\n      xmlnsXlink='http://www.w3.org/1999/xlink'\n      viewBox='0 0 50 20'\n      enable-background='new 0 0 0 0'\n      xmlSpace='preserve'\n    >\n      <circle fill='#fff' stroke='none' cx='6' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='25' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2' />\n      </circle>\n      <circle fill='#fff' stroke='none' cx='44' cy='10' r='6'>\n        <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3' />\n      </circle>\n    </StyledSvg>\n  )\n}\n","import { useTheme } from 'styled-components'\n\nexport default function R34Icon(props: { size: number; className?: string }) {\n  const theme = useTheme()\n\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={props.size}\n      height={props.size}\n      viewBox='0 0 12.7 12.7'\n      className={props.className}\n    >\n      <g transform='translate(0,-284.3)'>\n        <circle\n          id='path18'\n          cx='6.3499999'\n          cy='290.65002'\n          fill='none'\n          stroke={theme.colors.accentColor}\n          strokeWidth='0.50848764'\n          strokeMiterlimit='4'\n          strokeDasharray='none'\n          strokeOpacity='1'\n          r='6.0957561'\n        />\n        <text\n          fontStyle='normal'\n          fontWeight='normal'\n          fontSize='8.3113203px'\n          fontFamily='sansSerif'\n          letterSpacing='0px'\n          wordSpacing='0px'\n          fill={theme.colors.accentColor}\n          fillOpacity='1'\n          x='2.1363549'\n          y='289.02704'\n          id='text4533'\n          transform='scale(0.98538224,1.0148346)'\n        >\n          <tspan\n            id='tspan4531'\n            x='2'\n            y='289.1'\n            fontStyle='normal'\n            fontVariant='normal'\n            fontWeight='300'\n            fontStretch='normal'\n            fontFamily='Calibri'\n            fill={theme.colors.accentColor}\n            fillOpacity='1'\n          >\n            34\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport { useEffect, useState } from 'react'\r\n\r\n/**\r\n * A hook that provides the firebase authentication status for use in functional components.\r\n */\r\nexport default function useFirebaseAuthState() {\r\n  const [authState, setAuthState] = useState(false)\r\n  const [user, setUser] = useState<firebase.User | null>(null)\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setAuthState(true)\r\n        setUser(user)\r\n      } else {\r\n        setAuthState(false)\r\n        setUser(null)\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  return [authState, user] as const\r\n}\r\n","import { RatingType, PostType } from './types'\nimport TagDataClass from './TagDataClass'\nimport CommentDataClass from './CommentDataClass'\n\nexport default class PostDataClass {\n  id: number\n\n  score: number\n  rating: RatingType\n  source: string\n  tags: TagDataClass[]\n\n  media_type: PostType\n\n  thumbnail_src: string\n  small_src: string\n  big_src: string\n\n  width: number\n  height: number\n\n  creator_id: number\n  creator_url: string\n\n  status: string\n  parent_id: number\n  has_children: boolean\n  has_comments: boolean\n  comments_url: string\n  has_notes: boolean\n  created_at: number\n  change: string\n\n  comments?: CommentDataClass[]\n\n  constructor(\n    id: number,\n    score: number,\n    rating: RatingType,\n    source: string,\n    tags: TagDataClass[],\n    media_type: PostType,\n    media_src: any,\n    file_url: any,\n    thumbnail_src: string,\n    width: number,\n    height: number,\n    creator_id: number,\n    creator_url: string,\n    status: string,\n    parent_id: number,\n    has_children: boolean,\n    has_comments: boolean,\n    comments_url: string,\n    has_notes: boolean,\n    created_at: string,\n    change: string\n  ) {\n    this.id = id\n\n    this.score = score\n    this.rating = rating\n    this.source = source\n    this.tags = tags\n\n    this.media_type = media_type\n    this.small_src = media_src\n    this.big_src = file_url\n    this.thumbnail_src = thumbnail_src\n\n    this.width = width\n    this.height = height\n\n    this.creator_id = creator_id\n    this.creator_url = creator_url\n\n    this.status = status\n    this.parent_id = parent_id\n    this.has_children = has_children\n    this.has_comments = has_comments\n    this.comments_url = comments_url\n    this.has_notes = has_notes\n    this.created_at = Date.parse(created_at)\n    this.change = change\n  }\n}\n","import PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { TagType, Modifier, RatingType, PostType } from '../data/types'\n\n/**\n * A tag as received from the backend.\n * All strings\n */\ninterface DirtyTag {\n  name: string\n  types: string[]\n  count: string\n  modifier: string\n}\n\n/**\n * A post as received from the backend.\n * All strings\n */\nexport interface DirtyPost {\n  id: string\n  type: string\n  score: string\n  rating: string\n  source: string\n  tags: string[]\n  file_url: string\n  width: string\n  height: string\n  creator_id: string\n  creator_url: string\n  sample_url: string\n  preview_url: string\n  status: string\n  parent_id: string\n  has_children: string\n  has_comments: string\n  comments_url: string\n  has_notes: string\n  created_at: string\n  change: string\n}\n\n/**\n * Introduce types for nicer use later\n */\nexport function prepareTag(dirtyTag: DirtyTag) {\n  const { name, types, count, modifier } = dirtyTag\n\n  return new TagDataClass(name, types as TagType[], Number(count), modifier as Modifier)\n}\n\n/**\n * Introduce types for nicer use later and parse tag names to tag objects.\n */\nexport function preparePost(post: DirtyPost) {\n  const {\n    id,\n    type,\n    score,\n    rating,\n    source,\n    tags,\n    file_url,\n    width,\n    height,\n    creator_id,\n    creator_url,\n    sample_url,\n    preview_url,\n    status,\n    parent_id,\n    has_children,\n    has_comments,\n    comments_url,\n    has_notes,\n    created_at,\n    change,\n  } = post\n  return new PostDataClass(\n    Number(id),\n    Number(score),\n    rating as RatingType,\n    source,\n    tags ? tags.map((t) => new TagDataClass(t)) : [],\n    type as PostType,\n    sample_url,\n    file_url,\n    preview_url,\n    Number(width),\n    Number(height),\n    Number(creator_id),\n    creator_url,\n    status,\n    Number(parent_id),\n    Boolean(has_children),\n    Boolean(has_comments),\n    comments_url,\n    Boolean(has_notes),\n    created_at,\n    change\n  )\n}\n","import { PreferenceKey, TagLike } from '../data/types'\nimport TagDataClass from '../data/TagDataClass'\nimport PostDataClass from '../data/PostDataClass'\nimport CommentDataClass from '../data/CommentDataClass'\n\n// Action Names\nexport const ADD_ALIASES = `r34-react/ADD_ALIASES`\nexport const ADD_POSTS = `r34-react/ADD_POSTS`\nexport const ADD_TAG = `r34-react/ADD_TAG`\nexport const ENTER_FULLSCREEN = `r34-react/ENTER_FULLSCREEN`\nexport const EXIT_FULLSCREEN = 'r34-react/EXIT_FULLSCREEN'\nexport const FETCH_COMMENTS = `r34-react/FETCH_COMMENTS`\nexport const FETCH_PREFERENCES = `r34-react/FETCH_PREFERENCES`\nexport const FETCH_SUGGESTIONS = `r34-react/FETCH_SUGGESTIONS`\nexport const GET_MORE_RESULTS = `r34-react/GET_MORE_RESULTS`\nexport const GET_RESULTS = `r34-react/GET_RESULTS`\nexport const LIKE_POST = `r34-react/LIKE_POST`\nexport const REMOVE_TAG = `r34-react/REMOVE_TAG`\nexport const SAVE_PREFERENCES = 'r34-react/SAVE_PREFERENCES'\nexport const SET_COMMENTS = `r34-react/SET_COMMENTS`\nexport const SET_FULLSCREEN_POST = `r34-react/SET_FULLSCREEN_POST`\nexport const SET_POSTS = `r34-react/SET_POSTS`\nexport const SET_PREFERENCE = `r34-react/SET_PREFERENCE`\nexport const SET_PREFERENCES = `r34-react/SET_PREFERENCES`\nexport const SET_SUGGESTIONS = `r34-react/SET_SUGGESTIONS`\n\n// Action Types\ninterface AddTagAction {\n  type: typeof ADD_TAG\n  tag: TagDataClass\n}\n\ninterface RemoveTagAction {\n  type: typeof REMOVE_TAG\n  tag: TagDataClass\n}\n\ninterface AddAliasesAction {\n  type: typeof ADD_ALIASES\n  aliases: TagDataClass[]\n  forTag: string\n}\n\nexport interface AddPostsAction {\n  type: typeof ADD_POSTS\n  posts: PostDataClass[]\n}\n\nexport interface SetPostsAction {\n  type: typeof SET_POSTS\n  posts: PostDataClass[]\n  count: number\n  pageNumber?: number\n}\n\ninterface SetCommentsAction {\n  type: typeof SET_COMMENTS\n  postId: number\n  comments: CommentDataClass[]\n}\n\ninterface FetchCommentsAction {\n  type: typeof FETCH_COMMENTS\n  postId: number\n}\n\ninterface SetPreferenceAction {\n  type: typeof SET_PREFERENCE\n  key: PreferenceKey\n  value: any\n}\n\ninterface SetPreferencesAction {\n  type: typeof SET_PREFERENCES\n  preferences: Partial<Record<PreferenceKey, any>>\n}\n\ninterface GetResultsAction {\n  type: typeof GET_RESULTS\n  pageNumber: number\n}\n\ninterface GetMoreResultsAction {\n  type: typeof GET_MORE_RESULTS\n}\n\ninterface EnterFullcreenAction {\n  type: typeof ENTER_FULLSCREEN\n  postId: number\n}\n\ninterface SetFullScreenPostAction {\n  type: typeof SET_FULLSCREEN_POST\n  postId: number\n}\n\ninterface ExitFullscreenAction {\n  type: typeof EXIT_FULLSCREEN\n}\n\ninterface LikePostAction {\n  type: typeof LIKE_POST\n  postId: number\n}\n\ninterface SetSuggestionsAction {\n  type: typeof SET_SUGGESTIONS\n  suggestions: TagLike[]\n}\n\ninterface FetchSuggestionsAction {\n  type: typeof FETCH_SUGGESTIONS\n  value: string\n}\n\ninterface FetchPreferencesAction {\n  type: typeof FETCH_PREFERENCES\n}\n\ninterface SavePreferencesAction {\n  type: typeof SAVE_PREFERENCES\n}\n\nexport type AppAction =\n  | AddAliasesAction\n  | AddPostsAction\n  | AddTagAction\n  | EnterFullcreenAction\n  | ExitFullscreenAction\n  | FetchCommentsAction\n  | FetchPreferencesAction\n  | FetchSuggestionsAction\n  | GetMoreResultsAction\n  | GetResultsAction\n  | LikePostAction\n  | RemoveTagAction\n  | SavePreferencesAction\n  | SetCommentsAction\n  | SetFullScreenPostAction\n  | SetPostsAction\n  | SetPreferenceAction\n  | SetPreferencesAction\n  | SetSuggestionsAction\n\n// Action Creators\nexport function addTag(tag: TagDataClass): AddTagAction {\n  return {\n    type: ADD_TAG,\n    tag,\n  }\n}\n\nexport function removeTag(tag: TagDataClass): RemoveTagAction {\n  return {\n    type: REMOVE_TAG,\n    tag,\n  }\n}\n\nexport function addAliases(aliases: TagDataClass[], forTag: string): AddAliasesAction {\n  return {\n    type: ADD_ALIASES,\n    aliases,\n    forTag,\n  }\n}\n\nexport function addPosts(posts: PostDataClass[]): AddPostsAction {\n  return {\n    type: ADD_POSTS,\n    posts,\n  }\n}\n\nexport function setPosts(posts: PostDataClass[], count: number, pageNumber: number = 0): SetPostsAction {\n  return {\n    type: SET_POSTS,\n    posts,\n    count,\n    pageNumber,\n  }\n}\n\nexport function setComments(postId: number, comments: CommentDataClass[]): SetCommentsAction {\n  return {\n    type: SET_COMMENTS,\n    postId,\n    comments,\n  }\n}\n\nexport function fetchComments(postId: number): FetchCommentsAction {\n  return {\n    type: FETCH_COMMENTS,\n    postId,\n  }\n}\n\nexport function setPreference(key: PreferenceKey, value: any): SetPreferenceAction {\n  return {\n    type: SET_PREFERENCE,\n    key,\n    value,\n  }\n}\n\nexport function setPreferences(preferences: Partial<Record<PreferenceKey, any>>): SetPreferencesAction {\n  return {\n    type: SET_PREFERENCES,\n    preferences,\n  }\n}\n\nexport function getResults(pageNumber: number = 0): GetResultsAction {\n  return {\n    type: GET_RESULTS,\n    pageNumber,\n  }\n}\n\nexport function getMoreResults(): GetMoreResultsAction {\n  return {\n    type: GET_MORE_RESULTS,\n  }\n}\n\nexport function enterFullscreen(postId: number): EnterFullcreenAction {\n  return {\n    type: ENTER_FULLSCREEN,\n    postId,\n  }\n}\n\nexport function exitFullscreen(): ExitFullscreenAction {\n  return {\n    type: EXIT_FULLSCREEN,\n  }\n}\n\nexport function setFullScreenPost(postId: number): SetFullScreenPostAction {\n  return {\n    type: SET_FULLSCREEN_POST,\n    postId,\n  }\n}\n\nexport function likePost(postId: number): LikePostAction {\n  return {\n    type: LIKE_POST,\n    postId,\n  }\n}\n\nexport function setSuggestions(suggestions: TagLike[]): SetSuggestionsAction {\n  return {\n    type: SET_SUGGESTIONS,\n    suggestions,\n  }\n}\n\nexport function fetchSuggestions(value: string): FetchSuggestionsAction {\n  return {\n    type: FETCH_SUGGESTIONS,\n    value,\n  }\n}\n\nexport function fetchPreferences(): FetchPreferencesAction {\n  return {\n    type: FETCH_PREFERENCES,\n  }\n}\n\nexport function savePreferences(): SavePreferencesAction {\n  return {\n    type: SAVE_PREFERENCES,\n  }\n}\n","/**\r\n * Metadata. Describes the kind of tag.\r\n */\r\nexport enum TagType {\r\n  GENERAL = 'general',\r\n  CHARACTER = 'character',\r\n  AMBIGUOUS = 'ambiguous',\r\n  ARTIST = 'artist',\r\n  COPYRIGHT = 'copyright',\r\n  RATING = 'rating',\r\n  SOURCE = 'source',\r\n  METADATA = 'metadata',\r\n  SUPERTAG = 'supertag',\r\n}\r\n\r\n/**\r\n * Describes how the tag should influence the search.\r\n */\r\nexport enum Modifier {\r\n  PLUS = '+',\r\n  MINUS = '-',\r\n  OR = '~',\r\n}\r\n\r\n/**\r\n * Type of a post according to the backend.\r\n */\r\nexport enum PostType {\r\n  VIDEO = 'video',\r\n  IMAGE = 'image',\r\n}\r\n\r\n/**\r\n * Derived form PostType. On the frontend I split PostType.IMAGE into GIF and PICTURE.\r\n */\r\nexport enum MediaType {\r\n  VIDEO = 'video',\r\n  PICTURE = 'picture',\r\n  GIF = 'gif',\r\n}\r\n\r\n/**\r\n * The possible layouts.\r\n */\r\nexport enum ResultLayout {\r\n  INFINITE_COLUMN = 'infinite_column',\r\n  PAGES = 'pages',\r\n}\r\n\r\n/**\r\n * The possible themes.\r\n */\r\nexport enum ThemeId {\r\n  DARK = 'dark',\r\n  LIGHT = 'light',\r\n  COFFEE = 'coffee',\r\n  ELECTRIC = 'electric',\r\n}\r\n\r\n/**\r\n * All routes of the app.\r\n */\r\nexport enum RouteName {\r\n  SEARCH = '/',\r\n  HELP = '/help',\r\n  SETTINGS = '/settings',\r\n  ABOUT = '/about',\r\n  PRIVACY = '/privacy',\r\n  TERMS = '/terms',\r\n}\r\n\r\n/**\r\n * Explicity rating as provided by the backend.\r\n */\r\nexport enum RatingType {\r\n  SAFE = 'safe',\r\n  QUESTIONABLE = 'questionable',\r\n  EXPLICIT = 'explicit',\r\n}\r\n\r\n/**\r\n * All preferences.\r\n */\r\n\r\nexport enum PreferenceKey {\r\n  RATED = 'rated',\r\n  RATED_THRESHOLD = 'ratedThreshold',\r\n  ORIGINALS = 'originals',\r\n  COOKIES = 'cookies',\r\n  PRELOAD_VIDEOS = 'preloadVideos',\r\n  TAG_SUGGESTIONS_COUNT = 'tagSuggestionsCount',\r\n  RESULTS_LAYOUT = 'resultsLayout',\r\n  PAGE_SIZE = 'pageSize',\r\n  USE_CORS_PROXY = 'useCorsProxy',\r\n  SHOW_METADATA = 'showMetadata',\r\n  SHOW_COMMENTS = 'showComments',\r\n  SORT = 'sort',\r\n  THEME_ID = 'themeId',\r\n  AUTO_PLAY = 'autoPlay',\r\n  HIDE_SEEN = 'hideSeen',\r\n}\r\n\r\n/**\r\n * All available sort types.\r\n */\r\nexport enum SortType {\r\n  DATE = 'date',\r\n  SCORE = 'score',\r\n}\r\n\r\n/**\r\n * One-time definition of an empty function. Reusing this improves React's performance as it does not break memoization.\r\n */\r\nexport const NO_OP = () => {}\r\n\r\n/**\r\n * Same data as a tag but different names\r\n */\r\nexport type TagLike = {\r\n  name: string\r\n  posts?: number\r\n  count?: number\r\n  types: TagType[]\r\n}\r\n\r\nexport type ActiveTab = 'tags' | 'comments' | 'metadata'\r\n","import React, { ReactNode } from 'react'\r\n\r\ninterface ErrorBoundaryProps {\r\n  fallback: ReactNode\r\n  children: ReactNode\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","const dark = {\r\n  dimensions: {\r\n    borderRadius: '3px',\r\n    borderWidth: '2px',\r\n    spacing: '4px',\r\n    bigSpacing: '8px',\r\n    hugeSpacing: '16px',\r\n    gutter: '8px',\r\n    blockHeight: '32px',\r\n    bodyWidth: '1000px',\r\n  },\r\n  colors: {\r\n    text: '#fff',\r\n    accentColor: '#ee3344',\r\n    hoverAccent: '#ee3344',\r\n    backgroundColor: '#121212',\r\n    backgroundColor2: '#fff',\r\n    subduedText: '#ffffff80',\r\n    layerBg: '#ffffff11',\r\n    layerBgSolid: '#222222',\r\n    layerBgHighlight: '#ffffff22',\r\n    liked: '#ff0d50',\r\n  },\r\n  shadow: {\r\n    radius: '4px',\r\n    color: '#00000060',\r\n  },\r\n  timings: {\r\n    transitionTime: '0.2s',\r\n    longTransitionTime: '0.2s',\r\n  },\r\n  fontSizes: {\r\n    content: '15px',\r\n    bigTitle: '24px',\r\n  },\r\n}\r\n\r\nexport default dark\r\n","import dark from './dark'\r\n\r\nconst light = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    text: '#000',\r\n    backgroundColor: '#fff',\r\n    backgroundColor2: '#fff',\r\n    subduedText: '#00000080',\r\n    layerBg: '#00000011',\r\n    layerBgSolid: '#dddddd',\r\n    layerBgHighlight: '#00000022',\r\n  },\r\n}\r\n\r\nexport default light\r\n","import dark from './dark'\r\n\r\nconst coffee = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    backgroundColor: '#161410',\r\n    backgroundColor2: '#fff',\r\n    layerBg: '#ffffff11',\r\n    layerBgSolid: '#262420',\r\n    layerBgHighlight: '#ffffff22',\r\n  },\r\n}\r\n\r\nexport default coffee\r\n","import dark from './dark'\r\n\r\nconst electric = {\r\n  ...dark,\r\n  colors: {\r\n    ...dark.colors,\r\n    accentColor: '#2ae',\r\n    hoverAccent: '#2ae',\r\n  },\r\n}\r\n\r\nexport default electric\r\n","import { DefaultTheme } from 'styled-components'\r\nimport { ThemeId } from '../../data/types'\r\nimport light from './light'\r\nimport dark from './dark'\r\nimport coffee from './coffee'\r\nimport electric from './electric'\r\n\r\nconst themes: Record<ThemeId, DefaultTheme> = {\r\n  [ThemeId.DARK]: dark,\r\n  [ThemeId.LIGHT]: light,\r\n  [ThemeId.COFFEE]: coffee,\r\n  [ThemeId.ELECTRIC]: electric,\r\n}\r\n\r\nexport default themes\r\n\r\nexport const defaultThemeId = ThemeId.DARK\r\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle(\n  ({ theme }) => css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n      font-family: 'Raleway', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    html,\n    body,\n    #app-root {\n      width: 100%;\n      height: 100%;\n    }\n\n    body {\n      font-size: ${theme.fontSizes.content};\n      color: ${theme.colors.text};\n      background-color: ${theme.colors.backgroundColor};\n      transition: color 0.4s, background-color 0.4s;\n    }\n\n    a {\n      color: ${theme.colors.accentColor};\n      text-decoration: none;\n    }\n\n    // Not a touch device\n    // Touch devices have nice scrollbars by default\n    @media (pointer: fine) {\n      // Underline stuff that is focused on non-touch devices\n      // makes keyboard navigation clearer\n      :focus {\n        text-decoration: underline;\n      }\n\n      ::-webkit-scrollbar {\n        height: 8px;\n        transition: all ${theme.timings.transitionTime} ease-in-out;\n\n        :hover {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      /* Track */\n      ::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      /* Handle */\n      :hover {\n        ::-webkit-scrollbar {\n          background: ${theme.colors.layerBg};\n        }\n      }\n\n      ::-webkit-scrollbar-thumb {\n        background: ${theme.colors.layerBg};\n        border-radius: 1000px;\n\n        :hover {\n          background: ${theme.colors.layerBgHighlight};\n        }\n      }\n    }\n  `\n)\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport outOfResultsPicture from '../../icons/OutOfResults.png'\r\nimport FlexImage from '../styled/FlexImage'\r\nimport themes, { defaultThemeId } from '../../styled/themes'\r\nimport GlobalStyles from '../../GlobalStyles'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  align-content: center;\r\n  padding: 30px;\r\n  background: ${({ theme }) => theme.colors.backgroundColor};\r\n\r\n  > * {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport default function ErrorScreen() {\r\n  const theme = themes[defaultThemeId]\r\n  return (\r\n    <FullScreenCentered theme={theme}>\r\n      <GlobalStyles theme={theme} />\r\n      <FlexImage src={outOfResultsPicture} alt='Shironeko does not understand' />\r\n      <h1>Sorry about that...</h1>\r\n      <ResetButton theme={theme} />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Loading from '../../icons/Loading'\r\n\r\nconst FullScreenCentered = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <FullScreenCentered>\r\n      <Loading />\r\n    </FullScreenCentered>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport { RedButton } from '../common/Buttons'\nimport usePreference from '../../hooks/usePreference'\nimport { PreferenceKey } from '../../data/types'\n\nconst CookieWrapper = styled.div(\n  ({ theme }) => css`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: ${theme.colors.text};\n    background: ${theme.colors.layerBgSolid};\n    padding: ${theme.dimensions.gutter};\n    z-index: 100;\n  `\n)\n\nconst StyledSpan = styled.span`\n  height: min-content;\n`\n\nexport default function CookieConfirmation() {\n  const [cookies, setCookies] = usePreference(PreferenceKey.COOKIES)\n\n  const handleAccept = useCallback(() => setCookies(true), [setCookies])\n\n  return cookies ? null : (\n    <CookieWrapper>\n      <StyledSpan>This website uses cookies.</StyledSpan>\n      <RedButton onClick={handleAccept} aria-label='Allow Cookies'>\n        Okay\n      </RedButton>\n    </CookieWrapper>\n  )\n}\n","import TagDataClass from '../data/TagDataClass'\nimport { tagsToString } from '../data/utils'\nimport { PreferencesState } from '../redux/reducers/preferences'\n\nenum AnalyticsEventId {\n  SEARCH = 'r34_search',\n}\n\nexport type SearchEvent = {\n  id: AnalyticsEventId.SEARCH\n  payload: {\n    active_tags: string[]\n    page_number: number\n    preferences: PreferencesState\n  }\n}\n\n/**\n * Should be called whenever a new search is started.\n */\nexport const searchEvent = (\n  activeTags: Record<string, TagDataClass>,\n  page_number: number,\n  preferences: PreferencesState\n): SearchEvent => ({\n  id: AnalyticsEventId.SEARCH,\n  payload: {\n    active_tags: tagsToString(activeTags),\n    page_number,\n    preferences,\n  },\n})\n","import { MiddlewareAPI } from 'redux'\r\nimport { Dispatch } from 'react'\r\nimport {\r\n  AppAction,\r\n  FETCH_PREFERENCES,\r\n  savePreferences,\r\n  SAVE_PREFERENCES,\r\n  setPreferences,\r\n  SET_PREFERENCE,\r\n} from '../actions'\r\nimport * as firebaseFunctions from '../../firebase'\r\n\r\nlet saveTimeout: NodeJS.Timeout\r\n\r\nconst persistence = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\r\n  if (action.type === SET_PREFERENCE) {\r\n    if (saveTimeout) {\r\n      clearTimeout(saveTimeout)\r\n    }\r\n\r\n    saveTimeout = setTimeout(() => {\r\n      store.dispatch(savePreferences())\r\n    }, 10000)\r\n  }\r\n\r\n  if (action.type === FETCH_PREFERENCES) {\r\n    const preferences = await firebaseFunctions.getPreferences()\r\n\r\n    if (preferences) {\r\n      store.dispatch(setPreferences(preferences))\r\n    }\r\n  }\r\n\r\n  if (action.type === SAVE_PREFERENCES) {\r\n    const { preferences } = store.getState()\r\n    firebaseFunctions.setPreferences(preferences)\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default persistence\r\n","import { AppAction, SET_POSTS, ADD_POSTS } from '../actions'\r\n\r\nimport { searchEvent } from '../../analytics/events'\r\nimport { selectActiveTags, selectPreferences, selectPageNumber, selectCookies } from '../selectors'\r\nimport { MiddlewareAPI, Dispatch } from 'redux'\r\nimport { logEvent } from '../../firebase'\r\n\r\nconst eventLogging = (store: MiddlewareAPI<any>) => (next: Dispatch<AppAction>) => (action: AppAction) => {\r\n  const state = store.getState()\r\n  const cookies = selectCookies(state)\r\n\r\n  // Only send analytics if the user consented\r\n  if (cookies) {\r\n    if (action.type === ADD_POSTS || action.type === SET_POSTS) {\r\n      const activeTags = selectActiveTags(state)\r\n      const pageNumber = selectPageNumber(state)\r\n      const preferences = selectPreferences(state)\r\n      logEvent(searchEvent(activeTags, pageNumber, preferences))\r\n    }\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default eventLogging\r\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { getSupertags } from '../firebase'\nimport PostDataClass from '../data/PostDataClass'\nimport TagDataClass from '../data/TagDataClass'\nimport { Modifier, SortType, TagLike, TagType } from '../data/types'\nimport { DirtyPost, preparePost } from './prepare'\n\nconst sourceTags: TagLike[] = [\n  { name: 'source:*patreon*', posts: 12711, types: [TagType.SOURCE] },\n  { name: 'source:*twitter*', posts: 99927, types: [TagType.SOURCE] },\n  { name: 'source:*pixiv*', posts: 185080, types: [TagType.SOURCE] },\n]\n\nconst ratingTags: TagLike[] = [\n  { name: 'rating:safe', posts: 14293, types: [TagType.RATING] },\n  { name: 'rating:questionable', posts: 219552, types: [TagType.RATING] },\n  { name: 'rating:explicit', posts: 3821144, types: [TagType.RATING] },\n]\n\nclass API {\n  static defaultPageSize = 20\n  static apiLocal = 'http://localhost:8080'\n  static apiUrl1 = 'https://r34-json.herokuapp.com'\n  static apiUrl2 = 'https://r34-api-clone.herokuapp.com'\n\n  activeApi!: string\n\n  constructor() {\n    this.setApi('live', 'v2')\n  }\n\n  setApi(target: 'local' | 'live', version: 'v1' | 'v2') {\n    if (target === 'local') {\n      this.activeApi = `${API.apiLocal}/${version}`\n    } else {\n      this.activeApi = `${API.apiUrl1}/${version}`\n\n      // Failover to apiUrl2\n      fetch(this.activeApi).catch(() => (this.activeApi = `${API.apiUrl2}/${version}`))\n    }\n  }\n\n  async getTags(searchTerm: string, limit: number = API.defaultPageSize) {\n    let tags: TagLike[] = await (\n      await fetch(`${this.activeApi}/tags?limit=${limit}&name=${searchTerm}*&order_by=posts`)\n    ).json()\n\n    try {\n      const supertags = await getSupertags()\n      if (supertags) {\n        const matchingSupertags = Object.entries(supertags)\n          .filter(([name, details]) => name.toLowerCase().includes(searchTerm.toLowerCase()))\n          .map(([name, details]) => ({ name, count: Object.keys(details.tags).length, types: ['supertag'] } as TagLike))\n        tags = [...matchingSupertags, ...tags]\n      }\n    } catch {\n      // do nothing as supertags are optional\n    }\n\n    // HACKY: Inject suggestions for ratings and some sources\n    if (searchTerm.startsWith('rating:')) {\n      const matchingRating = ratingTags.filter((tag) => tag.name.includes(searchTerm.replace('rating:', '')))\n      return [...matchingRating, ...tags]\n    }\n\n    if (searchTerm.startsWith('source:')) {\n      const matchingSourceTags = sourceTags.filter((tag) => tag.name.includes(searchTerm.replace('source:', '')))\n      return [...tags, ...matchingSourceTags]\n    }\n\n    return tags\n  }\n\n  async getPosts(\n    tags: Record<string, TagDataClass>,\n    limit: number = API.defaultPageSize,\n    pageNumber = 0,\n    minScore = 0,\n    sort: SortType = SortType.DATE,\n    hideSeen = false\n  ) {\n    const idToken = await firebase.auth().currentUser?.getIdToken()\n    const res = await (\n      await fetch(this.buildPostUrl(pageNumber, tags, minScore, limit, sort, hideSeen), {\n        headers: {\n          Authorization: 'Bearer ' + idToken,\n        },\n      })\n    ).json()\n    const count = Number(res.count)\n    const posts = res.posts.map((rawPost: DirtyPost) => {\n      return preparePost(rawPost)\n    }) as PostDataClass[]\n\n    return {\n      posts,\n      count,\n    }\n  }\n\n  async getAliases(tagName: string) {\n    const aliases: TagLike[] = await (await fetch(`${this.activeApi}/alias/${encodeURIComponent(tagName)}`)).json()\n\n    return aliases\n  }\n\n  buildPostUrl(\n    page: number,\n    tags: Record<string, TagDataClass>,\n    minScore: number,\n    limit: number = API.defaultPageSize,\n    sort: SortType,\n    hideSeen: boolean\n  ) {\n    const tagList = Object.values(tags)\n    const normalTags = tagList.filter((tag) => tag.modifier !== Modifier.OR)\n    const orTags = tagList.filter((tag) => tag.modifier === Modifier.OR)\n\n    let url = `${this.activeApi}/posts?pid=${page}&limit=${limit}`\n\n    if (hideSeen) {\n      url += '&hideSeen=true'\n    }\n\n    const tagParts = [...normalTags.map((tag) => `${tag.modifier === '-' ? '-' : ''}${encodeURIComponent(tag.name)}`)]\n\n    if (orTags.length > 0) {\n      tagParts.push('( ' + orTags.map((tag) => encodeURIComponent(tag.name)).join(' ~ ') + ' )')\n    }\n\n    if (minScore > 0) {\n      tagParts.push(encodeURIComponent('score:>=' + minScore))\n    }\n\n    if (sort !== SortType.DATE) {\n      tagParts.push(encodeURIComponent('sort:' + sort + ':desc'))\n    }\n\n    if (tagParts.length > 0) {\n      url += `&tags=${tagParts.join(' + ')}`\n    }\n\n    return url\n  }\n}\n\nexport default new API()\n","interface RawComment {\r\n  created_at: string\r\n  body: string\r\n  creator: string\r\n  id: string\r\n  creator_id: string\r\n}\r\n\r\nexport function parseComment(rawComment: RawComment) {\r\n  return new CommentDataClass(\r\n    rawComment.created_at,\r\n    rawComment.body,\r\n    rawComment.creator,\r\n    rawComment.id,\r\n    rawComment.creator_id\r\n  )\r\n}\r\n\r\nexport default class CommentDataClass {\r\n  created_at: number\r\n  body: string\r\n  creator: string\r\n  id: number\r\n  creator_id: number\r\n\r\n  constructor(created_at: string, body: string, creator: string, id: string, creator_id: string) {\r\n    this.created_at = Date.parse(created_at)\r\n    this.body = body\r\n    this.creator = creator\r\n    this.id = Number(id)\r\n    this.creator_id = Number(creator_id)\r\n  }\r\n}\r\n","import { MiddlewareAPI } from 'redux'\nimport { Dispatch } from 'react'\nimport {\n  AppAction,\n  GET_RESULTS,\n  GET_MORE_RESULTS,\n  addPosts,\n  setPosts,\n  ADD_TAG,\n  addAliases,\n  LIKE_POST,\n  FETCH_SUGGESTIONS,\n  setSuggestions,\n  FETCH_COMMENTS,\n  setComments,\n} from '../actions'\nimport api from '../../misc/api'\nimport {\n  selectActiveTags,\n  selectPageNumber,\n  selectHasMoreResults,\n  selectMinRating,\n  selectPageSize,\n  selectSort,\n  selectTagSuggestionCount,\n  selectPostById,\n  selectHideSeen,\n} from '../selectors'\nimport TagDataClass from '../../data/TagDataClass'\nimport { serializeTagname } from '../../misc/formatting'\nimport { parseComment } from '../../data/CommentDataClass'\n\nconst apiRequests = (store: MiddlewareAPI) => (next: Dispatch<AppAction>) => async (action: AppAction) => {\n  const state = store.getState()\n  const hasMoreResults = selectHasMoreResults(state)\n\n  if (action.type === GET_RESULTS) {\n    const activeTags = selectActiveTags(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n    const hideSeen = selectHideSeen(state)\n\n    const result = await api.getPosts(activeTags, pageSize, action.pageNumber, minRating, sort, hideSeen)\n\n    store.dispatch(setPosts(result.posts, result.count, action.pageNumber))\n  }\n\n  if (action.type === GET_MORE_RESULTS && hasMoreResults) {\n    const activeTags = selectActiveTags(state)\n    const pageNumber = selectPageNumber(state)\n    const pageSize = selectPageSize(state)\n    const minRating = selectMinRating(state)\n    const sort = selectSort(state)\n    const hideSeen = selectHideSeen(state)\n    console.log('hide seen', hideSeen)\n\n    const res = await api.getPosts(activeTags, pageSize, pageNumber + 1, minRating, sort, hideSeen)\n\n    store.dispatch(addPosts(res.posts))\n  }\n\n  if (action.type === ADD_TAG) {\n    const activeTags = selectActiveTags(state)\n    const aliases = await api.getAliases(action.tag.name)\n\n    const sanitizedAliases = aliases\n      .sort((a, b) => (b.posts || b.count || 0) - (a.posts || a.count || 0))\n      .filter((alias) => !(alias.name in activeTags))\n      .map((alias) => new TagDataClass(alias.name, [], alias.posts))\n\n    store.dispatch(addAliases(sanitizedAliases, action.tag.name))\n\n    // Request types for newly added tag\n    if (action.tag.types?.length === 0) {\n      const tags = await api.getTags(action.tag.name)\n      const tag = tags.find((tag) => tag.name === action.tag.name)\n\n      if (tag) {\n        action.tag.types = tag.types\n        action.tag.count = tag.posts\n      }\n    }\n  }\n\n  if (action.type === LIKE_POST) {\n    fetch(`https://rule34.xxx/index.php?page=post&s=vote&id=${action.postId}&type=up`, { mode: 'no-cors' })\n      .then(() => {\n        // nothing to do, I update the state in advance\n      })\n      .catch((err) => {\n        console.warn('Upvote rejected', err)\n      })\n  }\n\n  if (action.type === FETCH_SUGGESTIONS) {\n    const limit = selectTagSuggestionCount(state)\n    const suggestions = await api.getTags(serializeTagname(action.value), limit)\n\n    store.dispatch(setSuggestions(suggestions))\n  }\n\n  if (action.type === FETCH_COMMENTS) {\n    const post = selectPostById(action.postId)(state)\n\n    if (post) {\n      const rawComments = (await (await fetch(post.comments_url)).json()) as any[]\n      const comments = rawComments.map(parseComment)\n\n      store.dispatch(setComments(action.postId, comments))\n    }\n  }\n\n  next(action)\n}\n\nexport default apiRequests\n","import { applyMiddleware } from 'redux'\r\nimport analytics from './analytics'\r\nimport persistence from './persistence'\r\nimport requests from './requests'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst middleware = composeWithDevTools(applyMiddleware(analytics, requests, persistence))\r\n\r\nexport default middleware\r\n","import produce from 'immer'\r\nimport { PreferenceKey, ResultLayout, SortType, ThemeId } from '../../data/types'\r\nimport { AppAction, SET_PREFERENCE, SET_PREFERENCES } from '../actions'\r\n\r\nexport interface PreferencesState {\r\n  rated: boolean\r\n  ratedThreshold: number\r\n  originals: boolean\r\n  cookies: boolean\r\n  preloadVideos: boolean\r\n  tagSuggestionsCount: number\r\n  resultsLayout: ResultLayout\r\n  pageSize: number\r\n  useCorsProxy: boolean\r\n  showMetadata: boolean\r\n  showComments: boolean\r\n  sort: SortType\r\n  themeId: ThemeId\r\n  autoPlay: boolean\r\n  hideSeen: boolean\r\n}\r\n\r\nconst initialPreferencesState: PreferencesState = {\r\n  rated: false,\r\n  ratedThreshold: 1,\r\n  originals: false,\r\n  cookies: false,\r\n  preloadVideos: false,\r\n  tagSuggestionsCount: 20,\r\n  resultsLayout: ResultLayout.INFINITE_COLUMN,\r\n  pageSize: 20,\r\n  useCorsProxy: false,\r\n  showMetadata: false,\r\n  showComments: false,\r\n  sort: SortType.DATE,\r\n  themeId: ThemeId.DARK,\r\n  autoPlay: false,\r\n  hideSeen: false,\r\n}\r\n\r\nfunction setPreference<T extends PreferenceKey>(state: PreferencesState, key: T, value: PreferencesState[T]) {\r\n  return produce(state, (draft) => {\r\n    draft[key] = value\r\n  })\r\n}\r\n\r\nfunction setPreferences(state: PreferencesState, preferences: Partial<Record<PreferenceKey, any>>) {\r\n  return produce(state, (draft) => {\r\n    Object.assign(draft, preferences)\r\n  })\r\n}\r\n\r\nconst preferences = (state: PreferencesState = initialPreferencesState, action: AppAction): PreferencesState => {\r\n  switch (action.type) {\r\n    case SET_PREFERENCE:\r\n      return setPreference(state, action.key, action.value)\r\n    case SET_PREFERENCES:\r\n      return setPreferences(state, action.preferences)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default preferences\r\n","import produce from 'immer'\nimport CommentDataClass from '../../data/CommentDataClass'\nimport PostDataClass from '../../data/PostDataClass'\nimport { SET_POSTS, ADD_POSTS, SET_COMMENTS, AppAction } from '../actions'\n\nexport interface ResultsState {\n  posts: PostDataClass[]\n  pageNumber: number\n  count: number\n}\n\nconst initialResultsState: ResultsState = {\n  posts: [],\n  pageNumber: 0,\n  count: 0,\n}\n\nconst addPosts = (state: ResultsState, posts: PostDataClass[]) =>\n  produce(state, (draft) => {\n    draft.posts = [...state.posts, ...posts]\n    draft.pageNumber = state.pageNumber + 1\n  })\n\nconst setPosts = (state: ResultsState, posts: PostDataClass[], postCount: number, pageNumber: number = 0) =>\n  produce(state, (draft) => {\n    draft.posts = posts\n    draft.count = postCount\n    draft.pageNumber = pageNumber\n  })\n\nconst setComments = (state: ResultsState, postId: number, comments: CommentDataClass[]) =>\n  produce(state, (draft) => {\n    const postIndex = state.posts.findIndex((p) => p.id === postId)\n    if (postIndex >= 0) {\n      draft.posts[postIndex].comments = comments\n    }\n  })\n\nconst results = (state: ResultsState = initialResultsState, action: AppAction): ResultsState => {\n  switch (action.type) {\n    case ADD_POSTS:\n      return addPosts(state, action.posts)\n    case SET_POSTS:\n      return setPosts(state, action.posts, action.count, action.pageNumber)\n    case SET_COMMENTS:\n      return setComments(state, action.postId, action.comments)\n    default:\n      return state\n  }\n}\n\nexport default results\n","import produce from 'immer'\nimport TagDataClass from '../../data/TagDataClass'\nimport { ADD_TAG, AppAction, REMOVE_TAG, ADD_ALIASES } from '../actions'\n\nexport interface TagsState {\n  active: Record<string, TagDataClass>\n  aliases: Record<string, TagDataClass[]>\n}\n\nconst initialTagsState: TagsState = {\n  active: {},\n  aliases: {},\n}\n\nconst addTag = (state: TagsState, newTag: TagDataClass) =>\n  produce(state, (draft) => {\n    draft.active[newTag.name] = { ...state.active[newTag.name], ...newTag }\n  })\n\nconst addAliases = (state: TagsState, aliases: TagDataClass[], forTag: string) =>\n  produce(state, (draft) => {\n    draft.aliases[forTag] = aliases\n  })\n\nconst removeTag = (state: TagsState, tagToRemove: TagDataClass) =>\n  produce(state, (draft) => {\n    delete draft.active[tagToRemove.name]\n    delete draft.aliases[tagToRemove.name]\n  })\n\nconst tags = (state: TagsState = initialTagsState, action: AppAction): TagsState => {\n  switch (action.type) {\n    case ADD_TAG:\n      return addTag(state, action.tag)\n    case REMOVE_TAG:\n      return removeTag(state, action.tag)\n    case ADD_ALIASES:\n      return addAliases(state, action.aliases, action.forTag)\n    default:\n      return state\n  }\n}\n\nexport default tags\n","import produce from 'immer'\nimport { ENTER_FULLSCREEN, EXIT_FULLSCREEN, SET_FULLSCREEN_POST, AppAction } from '../actions'\n\nexport interface ReaderState {\n  isEnabled: boolean\n  postId: number\n}\n\nconst initialReaderState: ReaderState = {\n  isEnabled: false,\n  postId: 0,\n}\n\nconst enterFullscreen = (state: ReaderState, postId: number) =>\n  produce(state, (draft) => {\n    draft.isEnabled = true\n    draft.postId = postId\n  })\n\nconst exitFullscreen = (state: ReaderState) =>\n  produce(state, (draft) => {\n    draft.isEnabled = false\n  })\n\nconst setPostId = (state: ReaderState, value: number) =>\n  produce(state, (draft) => {\n    draft.postId = value\n  })\n\nconst reader = (state: ReaderState = initialReaderState, action: AppAction): ReaderState => {\n  switch (action.type) {\n    case ENTER_FULLSCREEN:\n      return enterFullscreen(state, action.postId)\n    case SET_FULLSCREEN_POST:\n      return setPostId(state, action.postId)\n    case EXIT_FULLSCREEN:\n      return exitFullscreen(state)\n    default:\n      return state\n  }\n}\n\nexport default reader\n","import produce from 'immer'\r\nimport { AppAction, LIKE_POST } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport type LikesState = Record<number, number>\r\n\r\nconst initialReaderState: LikesState = {}\r\n\r\nconst likePost = (state: LikesState, postId: number) =>\r\n  produce(state, (draft) => {\r\n    if (!(postId in state)) {\r\n      draft[postId] = Date.now()\r\n    }\r\n\r\n    // NOTE: Might need to introduce a cap here...\r\n    // Like 1000 likes max, delete oldest when more are added?\r\n  })\r\n\r\nconst likes = (state: LikesState = initialReaderState, action: AppAction): LikesState => {\r\n  switch (action.type) {\r\n    case LIKE_POST:\r\n      return likePost(state, action.postId)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default likes\r\n","import produce from 'immer'\r\nimport { TagLike } from '../../data/types'\r\nimport { AppAction, SET_SUGGESTIONS } from '../actions'\r\n\r\n/**\r\n * Key is postId, Value is time of like\r\n */\r\nexport interface SuggestionsState {\r\n  entries: TagLike[]\r\n}\r\n\r\nconst initialReaderState: SuggestionsState = {\r\n  entries: [],\r\n}\r\n\r\nconst setSuggestions = (state: SuggestionsState, suggestions: TagLike[]) =>\r\n  produce(state, (draft) => {\r\n    draft.entries = suggestions\r\n  })\r\n\r\nconst suggestions = (state: SuggestionsState = initialReaderState, action: AppAction): SuggestionsState => {\r\n  switch (action.type) {\r\n    case SET_SUGGESTIONS:\r\n      return setSuggestions(state, action.suggestions)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default suggestions\r\n","import { combineReducers } from 'redux'\nimport preferences from './preferences'\nimport results from './results'\nimport tags from './tags'\nimport reader from './reader'\nimport likes from './likes'\nimport suggestions from './suggestions'\n\nexport default combineReducers({ tags, results, preferences, reader, likes, suggestions })\n","import { createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { getVersion, versionToNumber } from '../data/utils'\nimport middleware from './middleware'\nimport rootReducer from './reducers'\n\nconst version = getVersion()\n\nconst persistConfig = {\n  key: 'appstate',\n  version: versionToNumber(version),\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, middleware)\n\nexport const persistor = persistStore(store)\n","import styled, { css } from 'styled-components'\r\nimport { gap } from '../../styled/mixins'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../common/FlexColumn'\r\nimport Surface from '../common/Surface'\r\nimport { Faded, Title } from '../common/Text'\r\nimport Header from '../features/Header'\r\n\r\nconst SectionBody = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    ${gap(theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\nconst Section = styled(FlexColumnWithSpacing)`\r\n  flex-grow: 1;\r\n`\r\n\r\nexport default function Terms() {\r\n  document.title = 'R34 React - Terms of Service'\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <Section>\r\n        <Title>Terms of Service</Title>\r\n        <SectionBody>\r\n          <p>\r\n            This website does not impose any additional terms on you. However, terms for the technologies this app uses\r\n            still apply. Therefore, you should read the following terms.\r\n          </p>\r\n          <a href='https://policies.google.com/terms'>Google - Privacy & Terms</a>\r\n          <a href='https://rule34.xxx/tos.php'>Rule34 - Terms of Serivce</a>\r\n          <Faded>If you have any questions feel free to contact me via Discord. See \"about\" section.</Faded>\r\n        </SectionBody>\r\n      </Section>\r\n    </FlexColumn>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect } from 'react'\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport ErrorBoundary from './components/features/ErrorBoundary'\nimport ErrorScreen from './components/pages/ErrorScreen'\nimport LoadingScreen from './components/pages/LoadingScreen'\nimport CookieConfirmation from './components/widgets/CookieConfirmation'\nimport { RouteName } from './data/types'\nimport GlobalStyles from './GlobalStyles'\nimport themes, { defaultThemeId } from './styled/themes'\nimport { selectActiveThemeId } from './redux/selectors'\nimport { persistor, store } from './redux/store'\nimport Terms from './components/pages/Terms'\nimport useFirebaseAuthState from './hooks/useFirebaseAuthState'\nimport { fetchPreferences } from './redux/actions'\n\nconst Help = React.lazy(() => import('./components/pages/Help'))\nconst Settings = React.lazy(() => import('./components/pages/Settings'))\nconst Search = React.lazy(() => import('./components/pages/Search'))\nconst About = React.lazy(() => import('./components/pages/About'))\nconst Privacy = React.lazy(() => import('./components/pages/Privacy'))\n\nexport default function App() {\n  return (\n    <ErrorBoundary fallback={<ErrorScreen />}>\n      <Provider store={store}>\n        <PersistGate loading={<LoadingScreen />} persistor={persistor}>\n          <ThemedApp />\n        </PersistGate>\n      </Provider>\n    </ErrorBoundary>\n  )\n}\n\nfunction ThemedApp() {\n  const dispatch = useDispatch()\n  const themeId = useSelector(selectActiveThemeId)\n  const [isSignedIn] = useFirebaseAuthState()\n\n  useEffect(() => {\n    if (isSignedIn) {\n      dispatch(fetchPreferences())\n    }\n  }, [dispatch, isSignedIn])\n\n  return (\n    <ThemeProvider theme={themes[themeId] || defaultThemeId}>\n      <GlobalStyles />\n      <HashRouter>\n        <Suspense fallback={<LoadingScreen />}>\n          <Switch>\n            <Route exact path={RouteName.HELP}>\n              <Help />\n            </Route>\n            <Route exact path={RouteName.SETTINGS}>\n              <Settings />\n            </Route>\n            <Route exact path={RouteName.ABOUT}>\n              <About />\n            </Route>\n            <Route exact path={RouteName.PRIVACY}>\n              <Privacy />\n            </Route>\n            <Route exact path={RouteName.TERMS}>\n              <Terms />\n            </Route>\n            <Route path={RouteName.SEARCH}>\n              <Search />\n            </Route>\n          </Switch>\n        </Suspense>\n        <CookieConfirmation />\n      </HashRouter>\n    </ThemeProvider>\n  )\n}\n","// Polyfills\nimport 'whatwg-fetch'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('app-root'))\n"],"sourceRoot":""}