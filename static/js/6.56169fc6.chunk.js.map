{"version":3,"sources":["icons/FontAwesomeIcons.ts","components/common/Toggle.tsx","components/common/Select.tsx","components/common/SmallInput.tsx","components/common/Setting.tsx","components/widgets/ResetSeenPostsButton.tsx","components/widgets/SignIn.tsx","components/pages/Settings.tsx"],"names":["CharacterIcon","styled","FontAwesomeIcon","attrs","icon","faUser","ArtistIcon","faPen","CopyrightIcon","faCopyright","MetaDataIcon","faInfoCircle","CloseIcon","faTimes","ExpandIcon","faExpand","ExternalLinkIcon","faExternalLinkAlt","DownloadIcon","faDownload","SourceIcon","faHashtag","RatingIcon","faRegistered","HeartIcon","faHeart","LinkIcon","faLink","ArrowDown","faCaretDown","CodeBranchIcon","faCodeBranch","GithubIcon","faGithub","PatreonIcon","faPatreon","TwitterIcon","faTwitter","DeviantArtIcon","faDeviantart","DiscordIcon","faDiscord","TumblrIcon","faTumblr","CalendarIcon","faCalendarDay","CheckIcon","faCheckSquare","ImageIcon","faImage","GoogleIcon","faGoogle","WrenchIcon","faWrench","SearchIcon","faSearch","Track","div","props","css","defaultBorder","theme","colors","backgroundColor","timings","longTransitionTime","Thumb","supportsAspectRatio","value","accentColor","backgroundColor2","Toggle","onToggle","onClick","Wrapper","dimensions","blockHeight","StyledSelect","select","defaultBlock","Option","option","Select","options","onChange","Object","entries","map","optionKey","optionValue","StyledInput","input","SmallNumberInput","onSubmit","className","useState","toString","internalValue","setInternalValue","useEffect","useCallback","event","target","onBlur","Number","onKeyDown","key","type","Grid","gridWithGap","Title","SmallTitle","Body","Faded","Control","Setting","title","description","children","ResetSeenPostsButton","onResetSeenPosts","resetSeenPosts","FlexRow","flexRowWithGap","ProfilePicture","img","borderRadius","SignIn","useFirebaseAuthState","isSignedIn","user","handleSignIn","signIn","handleSignOut","signOut","name","displayName","email","picture","photoURL","FlexColumn","src","alt","layouts","ResultLayout","INFINITE_COLUMN","PAGES","themes","ThemeId","DARK","LIGHT","COFFEE","ELECTRIC","SettingsSurface","Surface","hugeSpacing","gap","VersionWrapper","SettingsColumn","FlexColumnWithSpacing","Entry","flexColumnWithGap","StyledCode","gutter","Yes","span","No","yesOrNo","Settings","useTheme","usePreference","PreferenceKey","RESULTS_LAYOUT","resultsLayout","setResultsLayout","PAGE_SIZE","pageSize","setPageSize","ORIGINALS","originals","setOriginals","PRELOAD_VIDEOS","preloadVideos","setPreloadVideos","TAG_SUGGESTIONS_COUNT","tagSuggestionsCount","setTagSuggestionsCount","USE_CORS_PROXY","useCorsProxy","setUseCorsProxy","SHOW_METADATA","showMetadata","setShowMetadata","SHOW_COMMENTS","showComments","setShowComments","AUTO_PLAY","autoPlay","setAutoPlay","HIDE_SEEN","hideSeen","setHideSeen","THEME_ID","themeId","setThemeId","togglePreloadVideos","toggleOriginals","toggleUseCorsProxy","toggleShowMetadata","toggleShowComments","toggleAutoPlay","toggleHideSeen","onChangeResultsLayout","onChangeThemeId","versionString","getVersionString","document","Header","supportsGap","supportsFlexGap","supportsObjectFit","supportsFullscreen","ResetButton","color","subduedText"],"mappings":"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","file":"static/js/6.56169fc6.chunk.js","sourcesContent":["import {\r\n  faDeviantart,\r\n  faDiscord,\r\n  faGithub,\r\n  faGoogle,\r\n  faPatreon,\r\n  faTumblr,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons'\r\nimport {\r\n  faCalendarDay,\r\n  faCaretDown,\r\n  faCheckSquare,\r\n  faCodeBranch,\r\n  faCopyright,\r\n  faDownload,\r\n  faExpand,\r\n  faExternalLinkAlt,\r\n  faHashtag,\r\n  faHeart,\r\n  faImage,\r\n  faInfoCircle,\r\n  faLink,\r\n  faPen,\r\n  faRegistered,\r\n  faSearch,\r\n  faTimes,\r\n  faUser,\r\n  faWrench,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\n\r\nexport const CharacterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faUser,\r\n})``\r\n\r\nexport const ArtistIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPen,\r\n})``\r\n\r\nexport const CopyrightIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCopyright,\r\n})``\r\n\r\nexport const MetaDataIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faInfoCircle,\r\n})``\r\n\r\nexport const CloseIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTimes,\r\n})``\r\n\r\nexport const ExpandIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExpand,\r\n})``\r\n\r\nexport const ExternalLinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faExternalLinkAlt,\r\n})``\r\n\r\nexport const DownloadIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDownload,\r\n})``\r\n\r\nexport const SourceIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHashtag,\r\n})``\r\n\r\nexport const RatingIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faRegistered,\r\n})``\r\n\r\nexport const HeartIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faHeart,\r\n})``\r\n\r\nexport const LinkIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faLink,\r\n})``\r\n\r\nexport const ArrowDown = styled(FontAwesomeIcon).attrs({\r\n  icon: faCaretDown,\r\n})``\r\n\r\nexport const CodeBranchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCodeBranch,\r\n})``\r\n\r\nexport const GithubIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGithub,\r\n})``\r\n\r\nexport const PatreonIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faPatreon,\r\n})``\r\n\r\nexport const TwitterIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTwitter,\r\n})``\r\n\r\nexport const DeviantArtIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDeviantart,\r\n})``\r\n\r\nexport const DiscordIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faDiscord,\r\n})``\r\n\r\nexport const TumblrIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faTumblr,\r\n})``\r\n\r\nexport const CalendarIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCalendarDay,\r\n})``\r\n\r\nexport const CheckIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faCheckSquare,\r\n})``\r\n\r\nexport const ImageIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faImage,\r\n})``\r\n\r\nexport const GoogleIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faGoogle,\r\n})``\r\n\r\nexport const WrenchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faWrench,\r\n})``\r\n\r\nexport const SearchIcon = styled(FontAwesomeIcon).attrs({\r\n  icon: faSearch,\r\n})``\r\n","import React, { MouseEventHandler } from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { supportsAspectRatio } from '../../data/browserUtils'\nimport { defaultBorder } from '../../styled/mixins'\n\nconst Track = styled.div(\n  (props) => css`\n    height: 24px;\n    width: 50px;\n    ${defaultBorder(props)}\n    border-radius: 30px;\n    background-color: ${props.theme.colors.backgroundColor};\n    transition: transform ${props.theme.timings.longTransitionTime} ease-in-out;\n  `\n)\n\nfunction circle() {\n  return supportsAspectRatio\n    ? css`\n        height: 100%;\n        aspect-ratio: 1/1;\n      `\n    : css`\n        height: 100%;\n        width: 22px;\n      `\n}\n\nconst Thumb = styled.div(\n  (props: { value: boolean; theme: DefaultTheme }) => css`\n    ${circle()}\n    background-color: ${props.value ? props.theme.colors.accentColor : props.theme.colors.backgroundColor2};\n    border-radius: 100px;\n    transition: all 0.2s ease-in-out;\n    transform: translate(${props.value ? '26px' : '0px'});\n  `\n)\n\ninterface ToggleProps {\n  value: boolean\n  onToggle: MouseEventHandler\n}\n\nexport default function Toggle(props: ToggleProps) {\n  const { value, onToggle } = props\n\n  return (\n    <Track onClick={onToggle}>\n      <Thumb value={value} />\n    </Track>\n  )\n}\n","import React, { ChangeEventHandler } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst Wrapper = styled.div(\n  ({ theme }) => css`\n    width: 100px;\n    height: ${theme.dimensions.blockHeight};\n  `\n)\n\nconst StyledSelect = styled.select(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    ${defaultBlock({ theme })}\n    width: 100%;\n    height: 100%;\n    background-color: ${theme.colors.backgroundColor2};\n  `\n)\n\nconst Option = styled.option(\n  ({ theme }) => css`\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n  `\n)\n\ninterface SelectProps {\n  options: Record<string, string>\n  value: string\n  onChange: ChangeEventHandler\n}\n\nexport default function Select(props: SelectProps) {\n  const { options, value, onChange } = props\n\n  return (\n    <Wrapper>\n      <StyledSelect value={value} onChange={onChange}>\n        {Object.entries(options).map(([optionKey, optionValue]) => (\n          <Option key={optionKey} value={optionKey}>\n            {optionValue}\n          </Option>\n        ))}\n      </StyledSelect>\n    </Wrapper>\n  )\n}\n","import React, { ChangeEventHandler, KeyboardEventHandler, useCallback, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { defaultBorder, defaultBlock } from '../../styled/mixins'\n\nconst StyledInput = styled.input(\n  ({ theme }) => css`\n    width: 70px;\n    ${defaultBorder({ theme })}\n    background-color: ${theme.colors.backgroundColor2};\n    ${defaultBlock({ theme })}\n    text-align: left;\n  `\n)\n\ninterface SmallInputProps<T> {\n  value: T\n  onSubmit: (value: T) => void\n  className?: string\n}\n\nexport function SmallTextInput(props: SmallInputProps<string>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value)\n\n  useEffect(() => {\n    setInternalValue(value)\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(internalValue)\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(internalValue)\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='text'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n\nexport function SmallNumberInput(props: SmallInputProps<number>) {\n  const { value, onSubmit, className } = props\n  const [internalValue, setInternalValue] = useState(value.toString())\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      setInternalValue(value.toString())\n    }\n  }, [value])\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n    setInternalValue(event.target.value)\n  }, [])\n\n  const onBlur = useCallback(() => {\n    onSubmit(Number(internalValue))\n  }, [internalValue, onSubmit])\n\n  const onKeyDown: KeyboardEventHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        onSubmit(Number(internalValue))\n      }\n    },\n    [internalValue, onSubmit]\n  )\n\n  return (\n    <StyledInput\n      type='number'\n      value={internalValue}\n      onChange={onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      className={className}\n    />\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { gridWithGap } from '../../styled/mixins'\nimport { SmallTitle, Faded } from './Text'\n\nconst Grid = styled.div`\n  ${gridWithGap}\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto auto;\n`\n\nconst Title = styled(SmallTitle)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 1/2;\n  `\n)\n\nconst Body = styled(Faded)(\n  ({ theme }) => css`\n    grid-column: 1/2;\n    grid-row: 2/3;\n  `\n)\n\nconst Control = styled.div(\n  ({ theme }) => css`\n    grid-column: 2/3;\n    grid-row: 1/3;\n  `\n)\n\ninterface SettingProps {\n  title: string\n  description: string\n  children: React.ReactNode\n}\n\nexport default function Setting({ title, description, children }: SettingProps) {\n  return (\n    <Grid>\n      <Title>{title}</Title>\n      <Body>{description}</Body>\n      <Control>{children}</Control>\n    </Grid>\n  )\n}\n","import React, { useCallback } from 'react'\r\nimport { resetSeenPosts } from '../../data/firebaseFunctions'\r\nimport { BlockButton } from '../common/Buttons'\r\n\r\nexport default function ResetSeenPostsButton() {\r\n  const onResetSeenPosts = useCallback(resetSeenPosts, [])\r\n\r\n  return <BlockButton onClick={onResetSeenPosts}>Reset seen posts</BlockButton>\r\n}\r\n","import { useCallback } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { signIn, signOut } from '../../data/firebaseFunctions'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { GoogleIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap } from '../../styled/mixins'\r\nimport { RedButton } from '../common/Buttons'\r\nimport FlexColumn from '../common/FlexColumn'\r\n\r\nconst FlexRow = styled.div`\r\n  ${flexRowWithGap}\r\n`\r\n\r\nconst ProfilePicture = styled.img(\r\n  ({ theme }) => css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    width: ${theme.dimensions.blockHeight};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n)\r\n\r\nexport default function SignIn() {\r\n  const [isSignedIn, user] = useFirebaseAuthState()\r\n  const handleSignIn = useCallback(signIn, [])\r\n  const handleSignOut = useCallback(signOut, [])\r\n\r\n  if (isSignedIn) {\r\n    const name = user?.displayName || user?.email || ''\r\n    const picture = user?.photoURL || ''\r\n\r\n    return (\r\n      <FlexColumn>\r\n        <FlexRow>\r\n          <ProfilePicture src={picture} alt={name} title={name} />\r\n          <RedButton onClick={handleSignOut}>\r\n            <span>Sign Out</span>\r\n          </RedButton>\r\n        </FlexRow>\r\n      </FlexColumn>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RedButton onClick={handleSignIn}>\r\n      <GoogleIcon />\r\n      <span>Sign In</span>\r\n    </RedButton>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport styled, { css, useTheme } from 'styled-components'\r\nimport {\r\n  supportsAspectRatio,\r\n  supportsFlexGap,\r\n  supportsFullscreen,\r\n  supportsGap,\r\n  supportsObjectFit,\r\n} from '../../data/browserUtils'\r\nimport { ResultLayout, PreferenceKey, ThemeId } from '../../data/types'\r\nimport { getVersionString } from '../../data/utils'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport { CodeBranchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexColumnWithGap, flexRowWithGap, gap } from '../../styled/mixins'\r\nimport FlexColumn, { FlexColumnWithSpacing } from '../common/FlexColumn'\r\nimport { HorizontalLine } from '../common/Lines'\r\nimport Select from '../common/Select'\r\nimport Setting from '../common/Setting'\r\nimport { SmallNumberInput } from '../common/SmallInput'\r\nimport Surface from '../common/Surface'\r\nimport { Faded, SmallTitle, Title } from '../common/Text'\r\nimport Toggle from '../common/Toggle'\r\nimport Header from '../features/Header'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport ResetSeenPostsButton from '../widgets/ResetSeenPostsButton'\r\nimport SignIn from '../widgets/SignIn'\r\n\r\nconst layouts = {\r\n  [ResultLayout.INFINITE_COLUMN]: 'Infinite',\r\n  [ResultLayout.PAGES]: 'Pages',\r\n}\r\n\r\nconst themes = {\r\n  [ThemeId.DARK]: 'Dark',\r\n  [ThemeId.LIGHT]: 'Light',\r\n  [ThemeId.COFFEE]: 'Coffee',\r\n  [ThemeId.ELECTRIC]: 'Electric',\r\n}\r\n\r\nconst SettingsSurface = styled(Surface)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.hugeSpacing};\r\n    ${gap(theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\nconst VersionWrapper = styled.div`\r\n  ${flexRowWithGap}\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n`\r\n\r\nconst SettingsColumn = styled(FlexColumnWithSpacing)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst Entry = styled.div`\r\n  ${flexColumnWithGap}\r\n`\r\n\r\nconst StyledCode = styled.div(\r\n  ({ theme }) => css`\r\n    background: #00000040;\r\n    ${gap(theme.dimensions.gutter)}\r\n    padding: ${theme.dimensions.gutter};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n\r\n    p,\r\n    span {\r\n      font-family: 'Courier New', Courier, monospace;\r\n    }\r\n  `\r\n)\r\n\r\nconst Yes = styled.span`\r\n  color: limegreen;\r\n  font-weight: bold;\r\n`\r\n\r\nconst No = styled.span`\r\n  color: red;\r\n  font-weight: bold;\r\n`\r\n\r\nfunction yesOrNo(value: boolean) {\r\n  return value ? <Yes>Yes</Yes> : <No>No</No>\r\n}\r\n\r\nexport default function Settings() {\r\n  const theme = useTheme()\r\n\r\n  const [resultsLayout, setResultsLayout] = usePreference(PreferenceKey.RESULTS_LAYOUT)\r\n  const [pageSize, setPageSize] = usePreference(PreferenceKey.PAGE_SIZE)\r\n  const [originals, setOriginals] = usePreference(PreferenceKey.ORIGINALS)\r\n  const [preloadVideos, setPreloadVideos] = usePreference(PreferenceKey.PRELOAD_VIDEOS)\r\n  const [tagSuggestionsCount, setTagSuggestionsCount] = usePreference(PreferenceKey.TAG_SUGGESTIONS_COUNT)\r\n  const [useCorsProxy, setUseCorsProxy] = usePreference(PreferenceKey.USE_CORS_PROXY)\r\n  const [showMetadata, setShowMetadata] = usePreference(PreferenceKey.SHOW_METADATA)\r\n  const [showComments, setShowComments] = usePreference(PreferenceKey.SHOW_COMMENTS)\r\n  const [autoPlay, setAutoPlay] = usePreference(PreferenceKey.AUTO_PLAY)\r\n  const [hideSeen, setHideSeen] = usePreference(PreferenceKey.HIDE_SEEN)\r\n  const [themeId, setThemeId] = usePreference(PreferenceKey.THEME_ID)\r\n\r\n  const togglePreloadVideos = useCallback(() => setPreloadVideos(!preloadVideos), [preloadVideos, setPreloadVideos])\r\n  const toggleOriginals = useCallback(() => setOriginals(!originals), [originals, setOriginals])\r\n  const toggleUseCorsProxy = useCallback(() => setUseCorsProxy(!useCorsProxy), [useCorsProxy, setUseCorsProxy])\r\n  const toggleShowMetadata = useCallback(() => setShowMetadata(!showMetadata), [showMetadata, setShowMetadata])\r\n  const toggleShowComments = useCallback(() => setShowComments(!showComments), [showComments, setShowComments])\r\n  const toggleAutoPlay = useCallback(() => setAutoPlay(!autoPlay), [autoPlay, setAutoPlay])\r\n  const toggleHideSeen = useCallback(() => setHideSeen(!hideSeen), [hideSeen, setHideSeen])\r\n\r\n  const onChangeResultsLayout = useCallback((event) => setResultsLayout(event.target.value), [setResultsLayout])\r\n  const onChangeThemeId = useCallback((event) => setThemeId(event.target.value), [setThemeId])\r\n\r\n  const versionString = getVersionString()\r\n\r\n  document.title = 'R34 React - Settings'\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <SettingsColumn>\r\n        <Title>General</Title>\r\n        <SettingsSurface>\r\n          <Setting title='Results Layout' description='Choose how your results are displayed.'>\r\n            <Select options={layouts} value={resultsLayout} onChange={onChangeResultsLayout} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Preload Videos'\r\n            description='Start loading videos immediately instead of just-in-time. This can improve the viewing experience but will consume a LOT of data. Only use with WIFI.'\r\n          >\r\n            <Toggle value={preloadVideos} onToggle={togglePreloadVideos} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Load original sizes'\r\n            description='Display images and videos at their original resolution. This will consume more data but provides a nicer experience.'\r\n          >\r\n            <Toggle value={originals} onToggle={toggleOriginals} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Use CORS Proxy'\r\n            description='Request images via the built in cors proxy. Normally, this should just make loading times worse. But I have seen the opposite.'\r\n          >\r\n            <Toggle value={useCorsProxy} onToggle={toggleUseCorsProxy} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Number of Tag suggestions'\r\n            description='Controls the number of tags displayed when searching. Increase this when searching for niche tags.'\r\n          >\r\n            <SmallNumberInput value={tagSuggestionsCount} onSubmit={setTagSuggestionsCount} />\r\n          </Setting>\r\n\r\n          <Setting title='Page size' description='Controls the number of posts loaded at once.'>\r\n            <SmallNumberInput value={pageSize} onSubmit={setPageSize} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Show post metadata'\r\n            description=\"Posts display more data in their details. Mainly for developing purposes but maybe it's useful to someone.\"\r\n          >\r\n            <Toggle value={showMetadata} onToggle={toggleShowMetadata} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Show comments'\r\n            description=\"If there are comments on a post, they will appear in the details. They can be a bit weird though, that's why they are disabled by default.\"\r\n          >\r\n            <Toggle value={showComments} onToggle={toggleShowComments} />\r\n          </Setting>\r\n        </SettingsSurface>\r\n\r\n        <Title>Experimental</Title>\r\n        <SettingsSurface>\r\n          <Faded>\r\n            These features that are still under active development. They might change a lot in the future. Please report\r\n            any bugs you find so I can fix them :)\r\n          </Faded>\r\n          <HorizontalLine />\r\n\r\n          <Setting title='Theme' description='Choose how the app looks.'>\r\n            <Select options={themes} value={themeId} onChange={onChangeThemeId} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Auto-play'\r\n            description='Start videos automatically once they become visible. This will use more data.'\r\n          >\r\n            <Toggle value={autoPlay} onToggle={toggleAutoPlay} />\r\n          </Setting>\r\n\r\n          <Setting\r\n            title='Hide seen posts [NOT WORKING]'\r\n            description='Enabling this option will hide all posts you have seen before. Perfect if you are frequently browsing the same tags or sorting by score.'\r\n          >\r\n            <Toggle value={hideSeen} onToggle={toggleHideSeen} />\r\n          </Setting>\r\n\r\n          <Setting title='Account' description='Sign in to save your settings across devices.'>\r\n            <SignIn />\r\n          </Setting>\r\n        </SettingsSurface>\r\n\r\n        <Title>Developer</Title>\r\n        <SettingsSurface>\r\n          <Entry>\r\n            <SmallTitle>Debug Info</SmallTitle>\r\n            <StyledCode>\r\n              <p>Supports grid-gap: {yesOrNo(supportsGap)}</p>\r\n              <p>Supports flex-gap: {yesOrNo(supportsFlexGap)}</p>\r\n              <p>Supports aspect-ratio: {yesOrNo(supportsAspectRatio)}</p>\r\n              <p>Supports object-fit: {yesOrNo(supportsObjectFit)}</p>\r\n              <p>Supports fullscreen: {yesOrNo(supportsFullscreen)}</p>\r\n            </StyledCode>\r\n          </Entry>\r\n\r\n          <ResetSeenPostsButton />\r\n          <ResetButton />\r\n        </SettingsSurface>\r\n        <VersionWrapper>\r\n          <CodeBranchIcon color={theme.colors.subduedText} />\r\n          <Faded>{versionString}</Faded>\r\n        </VersionWrapper>\r\n      </SettingsColumn>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}