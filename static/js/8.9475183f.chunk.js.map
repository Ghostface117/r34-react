{"version":3,"sources":["hooks/usePageTitle.tsx","components/pages/Share.tsx"],"names":["usePageTitle","title","React","useEffect","document","ShareColumn","styled","FlexColumnWithSpacing","SupertagSurface","Surface","Name","Title","ShortDesc","Faded","ImportButton","RedButton","ScrollFaded","Link","span","theme","css","flexRowWithGap","layer","borderRadius","dimensions","bigSpacing","colors","subduedText","accentColor","Tags","TagList","TAG_NO_OP","tag","About","location","useLocation","decodeSupertag","search","name","description","tags","tagObjects","useMemo","Object","entries","reduce","result","modifier","types","copySupertagUrl","useCallback","navigator","permissions","query","then","state","clipboard","writeText","window","href","console","warn","useFirebaseAuthState","signedIn","supertags","useSupertags","handleImport","addSupertag","catch","err","error","deleteSupertag","removeSupertag","imported","disabled","onClick","id","detailed","onTagClick","onTagMenu","NO_OP"],"mappings":"kHAAA,sDAMO,SAASA,EAAaC,GAC3BC,IAAMC,WAAU,WACdC,SAASH,MAAQA,IAChB,CAACA,M,kQCSAI,EAAcC,YAAOC,IAAPD,CAAH,yHAOXE,EAAkBF,YAAOG,IAAPH,CAAH,8KAQfI,EAAOJ,YAAOK,IAAPL,CAAH,wEAKJM,EAAYN,YAAOO,IAAPP,CAAH,mDAITQ,EAAeR,YAAOS,IAAPT,CAAH,mDAIZU,EAAcV,YAAOO,IAAPP,CAAH,uLASXW,EAAOX,IAAOY,MAClB,gBAAGC,EAAH,EAAGA,MAAH,OAAeC,YAAd,IAAD,uMACIC,IACAC,IACAC,IACSJ,EAAMK,WAAWC,WACnBN,EAAMO,OAAOC,YAMXR,EAAMO,OAAOE,gBAKtBC,EAAOvB,YAAOwB,IAAPxB,CAAH,mDAIJyB,EAAY,SAACC,KAEJ,SAASC,IACtB,IAAMC,EAAWC,cAEjB,EAAoCC,YAAeF,EAASG,QAApDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,KAE3BxC,YAAa,eAAD,OAAgBsC,IAE5B,IAAMG,EAAavC,IAAMwC,SACvB,kBACEC,OAAOC,QAAQJ,GAAMK,QAAO,SAACC,EAAD,GAA+B,IAAD,mBAApBR,EAAoB,KAAdS,EAAc,KAExD,OADAD,EAAOR,GAAQ,CAAEA,OAAMS,WAAUC,MAAO,IACjCF,IACN,MACL,CAACN,IAGGS,EAAkB/C,IAAMgD,aAAY,WACxCC,UAAUC,YAAYC,MAAM,CAAEf,KAAM,oBAAqBgB,MAAK,SAACR,GACxC,YAAjBA,EAAOS,OAAwC,WAAjBT,EAAOS,OACvCJ,UAAUK,UAAUC,UAAUC,OAAOxB,SAASyB,MAAML,MAClD,eACA,WACEM,QAAQC,KAAK,wCAKpB,IAEH,EAAmBC,cAAZC,EAAP,oBACMC,EAAYC,cAEZC,EAAehE,IAAMgD,aAAY,WACrCiB,YAAY7B,EAAMC,EAAaC,GAC5Bc,MAAK,eACLc,OAAM,SAACC,GAAD,OAAST,QAAQU,MAAM,4BAA6BD,QAC5D,CAAC9B,EAAaD,EAAME,IACjB+B,EAAiBrE,IAAMgD,aAAY,kBAAMsB,YAAelC,KAAO,CAACA,IAEhEmC,EAAWvE,IAAMwC,SAAQ,WAC7B,OAAOqB,GAAYzB,KAAQ0B,IAC1B,CAAC1B,EAAMyB,EAAUC,IAEpB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,eAAC3D,EAAD,WACE,cAAC,IAAD,uBAEA,eAACG,EAAD,WACE,cAACE,EAAD,UAAO4B,IACP,cAAC1B,EAAD,UAAY2B,IACXkC,EACC,eAAC3D,EAAD,CACE4D,UAAWX,EACX9D,MAAO8D,EAAW,8BAAgC,2BAClDY,QAASJ,EAHX,UAKE,cAAC,IAAD,IALF,eAQA,eAACzD,EAAD,CACE4D,UAAWX,EACX9D,MAAO8D,EAAW,8BAAgC,2BAClDY,QAAST,EAHX,UAKE,cAAC,IAAD,IALF,aASF,eAACjD,EAAD,CAAM0D,QAAS1B,EAAiBhD,MAAM,iBAAtC,UACE,cAACe,EAAD,CAAa4D,GAAG,aAAhB,SAA8BlB,OAAOxB,SAASyB,OAC9C,cAAC,IAAD,OAEF,cAAC9B,EAAD,CAAMW,KAAMC,EAAYoC,UAAU,EAAOC,WAAY/C,EAAWgD,UAAWC","file":"static/js/8.9475183f.chunk.js","sourcesContent":["import React from 'react'\n\n/**\n * Effect that sets the title of the page to a specified string.\n * Really small utility hook that saves a few lines.\n */\nexport function usePageTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title\n  }, [title])\n}\n","import * as r34 from 'r34-types'\nimport React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { decodeSupertag } from '../../data/tagUtils'\nimport { addSupertag, removeSupertag, useSupertags } from '../../firebase'\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\nimport { usePageTitle } from '../../hooks/usePageTitle'\nimport { CopyIcon, PlusIcon, SuccessIcon } from '../../icons/FontAwesomeIcons'\nimport { borderRadius, flexRowWithGap, layer } from '../../styled/mixins'\nimport { RedButton } from '../designsystem/Buttons'\nimport FlexColumn, { FlexColumnWithSpacing } from '../designsystem/FlexColumn'\nimport Surface from '../designsystem/Surface'\nimport { Faded, Title } from '../designsystem/Text'\nimport Header from '../features/Header'\nimport TagList from '../tag/TagList'\nimport { NO_OP } from '../../data/types'\n\nconst ShareColumn = styled(FlexColumnWithSpacing)`\n  place-content: center;\n  align-items: center;\n  place-content: center;\n  flex-grow: 1;\n`\n\nconst SupertagSurface = styled(Surface)`\n  grid-template-rows: auto auto auto 1fr;\n  grid-template-columns: 1fr auto;\n  padding: 16px;\n  justify-content: center;\n  max-width: 500px;\n`\n\nconst Name = styled(Title)`\n  text-align: left;\n  grid-area: 1/1/2/2;\n`\n\nconst ShortDesc = styled(Faded)`\n  grid-area: 2/1/3/3;\n`\n\nconst ImportButton = styled(RedButton)`\n  grid-area: 1/2/2/3;\n`\n\nconst ScrollFaded = styled(Faded)`\n  overflow-x: auto;\n  white-space: nowrap;\n  mask-image: linear-gradient(90deg, #000 95%, transparent);\n  ::-webkit-scrollbar {\n    height: 0px;\n  }\n`\n\nconst Link = styled.span(\n  ({ theme }) => css`\n    ${flexRowWithGap}\n    ${layer}\n    ${borderRadius}\n    padding: ${theme.dimensions.bigSpacing};\n    color: ${theme.colors.subduedText};\n    grid-area: 3/1/4/3;\n    cursor: pointer;\n\n    :active,\n    :active > span {\n      color: ${theme.colors.accentColor};\n    }\n  `\n)\n\nconst Tags = styled(TagList)`\n  grid-area: 4/1/5/3;\n`\n\nconst TAG_NO_OP = (tag: r34.AnyBiasedTag) => {}\n\nexport default function About() {\n  const location = useLocation()\n\n  const { name, description, tags } = decodeSupertag(location.search)\n\n  usePageTitle(`R34 React - ${name}`)\n\n  const tagObjects = React.useMemo(\n    () =>\n      Object.entries(tags).reduce((result, [name, modifier]) => {\n        result[name] = { name, modifier, types: [] }\n        return result\n      }, {} as Record<string, Omit<r34.BiasedTag, 'count'>>),\n    [tags]\n  )\n\n  const copySupertagUrl = React.useCallback(() => {\n    navigator.permissions.query({ name: 'clipboard-write' }).then((result) => {\n      if (result.state === 'granted' || result.state === 'prompt') {\n        navigator.clipboard.writeText(window.location.href).then(\n          () => {},\n          () => {\n            console.warn('Failed to write to clipboard')\n          }\n        )\n      }\n    })\n  }, [])\n\n  const [signedIn] = useFirebaseAuthState()\n  const supertags = useSupertags()\n\n  const handleImport = React.useCallback(() => {\n    addSupertag(name, description, tags)\n      .then(() => {})\n      .catch((err) => console.error('Failed to import supertag', err))\n  }, [description, name, tags])\n  const deleteSupertag = React.useCallback(() => removeSupertag(name), [name])\n\n  const imported = React.useMemo(() => {\n    return signedIn && name in supertags\n  }, [name, signedIn, supertags])\n\n  return (\n    <FlexColumn>\n      <Header />\n      <ShareColumn>\n        <Title>Supertag</Title>\n\n        <SupertagSurface>\n          <Name>{name}</Name>\n          <ShortDesc>{description}</ShortDesc>\n          {imported ? (\n            <ImportButton\n              disabled={!signedIn}\n              title={signedIn ? 'Remove from your collection' : 'You need to be signed in'}\n              onClick={deleteSupertag}\n            >\n              <SuccessIcon /> Imported\n            </ImportButton>\n          ) : (\n            <ImportButton\n              disabled={!signedIn}\n              title={signedIn ? 'Import into your collection' : 'You need to be signed in'}\n              onClick={handleImport}\n            >\n              <PlusIcon /> Import\n            </ImportButton>\n          )}\n\n          <Link onClick={copySupertagUrl} title='Copy share url'>\n            <ScrollFaded id='share-link'>{window.location.href}</ScrollFaded>\n            <CopyIcon />\n          </Link>\n          <Tags tags={tagObjects} detailed={false} onTagClick={TAG_NO_OP} onTagMenu={NO_OP} />\n        </SupertagSurface>\n      </ShareColumn>\n    </FlexColumn>\n  )\n}\n"],"sourceRoot":""}